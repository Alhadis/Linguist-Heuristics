# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/will_paginate/all/will_paginate.rbi
#
# will_paginate-2.3.16
module WillPaginate
  def self.enable; end
  def self.enable_actionpack; end
  def self.enable_activerecord; end
  def self.enable_named_scope(patch = nil); end
  extend WillPaginate::PerPage
end
module WillPaginate::PerPage
  def per_page; end
  def per_page=(limit); end
  def self.extended(base); end
end
module WillPaginate::PerPage::Inheritance
  def inherited(subclass); end
end
class WillPaginate::InvalidPage < ArgumentError
  def initialize(value, page_num = nil); end
  def self.validate(page_value, per_page_value); end
end
class WillPaginate::Collection < Array
  def current_page; end
  def initialize(page, per_page = nil, total = nil); end
  def next_page; end
  def offset; end
  def out_of_bounds?; end
  def per_page; end
  def previous_page; end
  def replace(array); end
  def self.create(page, per_page, total = nil); end
  def total_entries; end
  def total_entries=(number); end
  def total_pages; end
end
class Array
  def include_method?(name); end
  def paginate(options = nil); end
end
module WillPaginate::I18n
  def self.load_path; end
  def self.locale_dir; end
  def will_paginate_translate(keys, options = nil); end
end
module WillPaginate::Deprecation
  def self.warn(message, callstack = nil); end
  extend ActiveSupport::Deprecation
end
