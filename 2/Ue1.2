// Uebung1__JC.cpp: Definiert den Einstiegspunkt fÃ¼r die Konsolenanwendung.
//

#include "stdafx.h"
#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Haustier;
class Adresse;

class Tier {
private:
	string m_name;
	int m_beine;
protected:
	string m_art;
	string m_fortbewegung;
public:
	Tier();
	~Tier();
	Tier(string, string, int, string);
	inline string art() { return m_art; };
	inline string name() { return m_name; };
	inline void name(string name) { m_name = name; };
	virtual string geraeusch() { return "..."; };
	inline int beine() { return m_beine; };
	inline string fortbewegung() { return m_fortbewegung; };
};

Tier::Tier() {
	m_name = "Otto";
	m_beine = 2;
	m_art = "Mensch";
	m_fortbewegung = "gehen";
}

Tier::~Tier() {}

Tier::Tier(string  art, string name, int beine, string fortbewegung) {
	m_art = art;
	m_name = name;
	m_beine = beine;
	m_fortbewegung = fortbewegung;
}

class Adresse {
private:
	string m_stadt;
	string m_strasse;
	int m_hausnummer;
	int m_postleitzahl;
public:
	Adresse();
	Adresse(string, string, int, int);
	Adresse(const Adresse&);
	Adresse& operator=(const Adresse&);
	inline string stadt() { return m_stadt; }
	inline string strasse() { return m_strasse; }
	inline int hausnummer() { return m_hausnummer; }
	inline int postleitzahl() { return m_postleitzahl; }
};

Adresse::Adresse()
	: m_stadt("Jede")
	, m_strasse("Auf der StraÃŸe")
	, m_hausnummer(0)
	, m_postleitzahl(0) {
}

Adresse::Adresse(string stadt, string strasse, int hausnummer, int postleitzahl)
	: m_stadt(stadt)
	, m_strasse(strasse)
	, m_hausnummer(hausnummer)
	, m_postleitzahl(postleitzahl) {
}

Adresse::Adresse(const Adresse& c_Adresse)
	: m_stadt(c_Adresse.m_stadt)
	, m_strasse(c_Adresse.m_strasse)
	, m_hausnummer(c_Adresse.m_hausnummer)
	, m_postleitzahl(c_Adresse.m_postleitzahl) {
}

Adresse& Adresse::operator= (const Adresse& c_Adresse) {
	m_stadt = c_Adresse.m_stadt;
	m_strasse = c_Adresse.m_strasse;
	m_hausnummer = c_Adresse.m_hausnummer;
	m_postleitzahl = c_Adresse.m_postleitzahl;
	return *this;
}

class Haustier : public Tier, public Adresse {
public:
	Haustier(string art,int beine, string fortbewegung) : Tier(art, "unbekannt", beine, fortbewegung), Adresse() {};
	Haustier(string, string, int, string, string, string, int, int);
};

Haustier::Haustier(string art, string name, int beine, string fortbewegung, string strasse, string stadt, int hausNr, int plz) 
	: Tier(art, name, beine, fortbewegung)
	, Adresse(strasse, stadt, hausNr, plz) {
};

class Hund : public Haustier {
public:
	Hund() :Haustier("Hund", 4, "laufend") {};
	Hund(string,string,string,int,int);
	string geraeusch();
};

string Hund::geraeusch() { return "wuff"; }

Hund::Hund(string name, string strasse, string stadt, int hausNr, int plz) 
	: Haustier("Hund", name, 4, "laufend", strasse, stadt, hausNr, plz) {};

class Katze : public Haustier {
public:
	Katze() : Haustier("Katze",  4, "laufend") {};
	Katze(string, string, string, int, int);
	string geraeusch();
};

string Katze::geraeusch() { return "miau"; }

Katze::Katze(string name, string strasse, string stadt, int hausNr, int plz) 
	: Haustier("Katze", name, 4, "laufend", strasse, stadt, hausNr, plz) {};

class Fisch : public Haustier {
public:
	Fisch() : Haustier("Fisch",  0, "schwimmend") {}
	Fisch(string, string, string, int, int);
	string geraeusch();
};

string Fisch::geraeusch() { return "Blubb"; }

Fisch::Fisch(string name, string strasse, string stadt, int hausNr, int plz) 
	: Haustier("Fisch", name, 0, "schwimmend", strasse, stadt, hausNr, plz) {};

class Vogel : public Haustier {
public:
	Vogel() : Haustier("Vogel",  2, "fliegend") {}
	Vogel(string, string, string, int, int);
	string geraeusch();
};

string Vogel::geraeusch() { return "zwitscher"; }

Vogel::Vogel(string name, string strasse, string stadt, int hausNr, int plz) 
	: Haustier("Vogel", name, 2, "fliegend", strasse, stadt, hausNr, plz) {};

int main()
{
	vector<Haustier*> tiere;
	tiere.push_back(new Hund("Pepper","Schoenberger Str.", "Bensheim", 15, 64625));
	tiere.push_back(new Katze("Puma","Schoenberger Str.", "Bensheim", 15, 64625));
	tiere.push_back(new Fisch("Oscar", "Oleanderweg", "Bensheim", 21, 64625));
	tiere.push_back(new Vogel("Bert", "Muehltalstr", "Hochstaedten", 16, 64625));
	for (int i = 0; i < tiere.size(); ++i)
		cout << tiere[i]->name() << " macht " << tiere[i]->geraeusch() << ", hat " << tiere[i]->beine() << " Beine und ist ein " << tiere[i]->art() << ".\n"
		<< "Stadt: " << tiere[i]->stadt() << "\tPostleitzahl: " << tiere[i]->postleitzahl() << "\tStrasse: " << tiere[i]->strasse() << endl;
	for (int i = 0; i < tiere.size(); ++i)
		delete tiere[i];
	Adresse test("Bensheim", "MarxStr", 15, 64625);
	Adresse test1 = test;
	cout << test1.strasse();
	char exit;
	cin >> exit;
	return 0;
}
