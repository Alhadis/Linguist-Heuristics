'\" te
.\" Copyright (c) 2007, 2015, Oracle and/or its affiliates.All rights reserved.
.TH standards 5 "2015 年 3 月 25 日" "SunOS 5.11" "標準、環境、マクロ"
.SH 名前
標準, ANSI, C, C++, ISO, POSIX, POSIX.1, POSIX.2, SUS, SUSv2, SUSv3, SVID, SVID3, XNS, XNS4, XNS5, XPG, XPG3, XPG4, XPG4v2 \- Oracle Solaris でサポートされている標準および仕様
.SH 機能説明
.sp
.LP
Oracle Solaris は、IEEE Std 1003.1 および IEEE Std 1003.2 (一般には、それぞれ POSIX.1 および POSIX.2 と呼ばれます) をサポートしています。次の表は、これらの標準の各バージョンと簡単な説明、およびそれに最初に準拠した SunOS または Solaris リリースを示しています。
.sp

.sp
.TS
tab();
cw(1.25i) cw(3.3i) cw(.95i) 
lw(1.25i) lw(3.3i) lw(.95i) 
.
POSIX 標準説明解放
_
POSIX.1-1988T{
システムインタフェースおよびヘッダー
T}SunOS 4.1
_
POSIX.1-1990POSIX.1-1988 更新Solaris 2.0
_
POSIX.1b-1993リアルタイム拡張Solaris 2.4
_
POSIX.1c-1996スレッド拡張Solaris 2.6
_
POSIX.2-1992T{
シェルおよびユーティリティー
T}Solaris 2.5
_
POSIX.2a-1992T{
対話型シェルおよびユーティリティー
T}Solaris 2.5
_
POSIX.1–2001T{
POSIX.1-1990、POSIX.1b-1993、POSIX.1c-1996、POSIX.2-1992、および POSIX.2a-1992 更新
T}Solaris 10
_
POSIX.1-2004POSIX.1-2001 更新Oracle Solaris 11
.TE

.sp
.LP
Oracle Solaris はまた、X/Open Common Applications Environment (CAE) Portability Guide Issue 3 (XPG3) および Issue 4 (XPG4)、Single UNIX Specification (SUS、XPG4v2 ともいう)、Single UNIX Specification, Version 2 (SUSv2)、および Single UNIX Specification, Version 3 (SUSv3) もサポートしています。XPG4 と SUS のどちらにも、Networking Services Issue 4 (XNS4) が含まれています。SUSv2 には、Networking Services Issue 5 (XNS5) が含まれています。 
.sp
.LP
次の表は、各 X/Open 仕様と簡単な説明、およびそれに最初に準拠した SunOS または Solaris リリースを示しています。
.sp

.sp
.TS
tab();
cw(1.29i) cw(3.27i) cw(.93i) 
cw(1.29i) cw(3.27i) cw(.93i) 
.
X/Open CAE
_
 仕様説明解放
_
XPG3T{
SVID3 のユーティリティーを含む POSIX.1-1988 のスーパーセット
T}SunOS 4.1
_
XPG4T{
XPG3 からの POSIX 標準の拡張を含む POSIX.1-1990、POSIX.2-1992、および POSIX.2a-1992 のスーパーセット
T}Solaris 2.4
_
SUS (XPG4v2)T{
一般的なアプリケーションパッケージで広範に使用されている履歴 BSD インタフェースを含む XPG4 のスーパーセット
T}Solaris 2.6
_
XNS4T{
ソケットおよび XTI インタフェース
T}Solaris 2.6
_
SUSv2T{
POSIX.1b-1993、POSIX.1c-1996、および ISO/IEC 9899 (C Standard) Amendment 1 をサポートするために拡張された SUS のスーパーセット
T}Solaris 7
_
XNS5T{
XNS4 のスーパーセットおよび LP64 クリーンの派生型。
T}Solaris 7
_
SUSv3POSIX.1–2001 と同じSolaris 10
.TE

.sp
.LP
XNS4 仕様は ILP32 (32 ビット) 環境での使用に関してのみ安全であり、LP64 (64 ビット) アプリケーション環境で使用すべきではありません。ILP32 および LP64 環境にわたって移植可能な LP64 クリーンのインタフェースを備えた XNS5 または SUSv3 を使用してください。Solaris リリース 7 から Oracle Solaris 11 までは、ILP32 環境と LP64 環境の両方をサポートしています。
.sp
.LP
Solaris リリース 7 - 10 は、The Open Group の UNIX 98 Product Standard に準拠するようにブランド化されています。Solaris 10 から Oracle Solaris 11 までは、The Open Group の UNIX 03 Product Standard に準拠するようにブランド化されています。
.sp
.LP
Solaris リリース 2.0 から Oracle Solaris 11 までは、System V Interface Definition, Third Edition, Volumes 1 - 4 (SVID3) で指定されたインタフェースをサポートしています。ただし、この仕様 (UNIX Systems Laboratories) の開発者はすでに活動しておらず、またこの仕様は POSIX および X/Open CAE 仕様に従っているため、現在この仕様に準拠するには何が必要かについてはなんらかの意見の不一致があることに注意してください。
.sp
.LP
Oracle Solaris Studio 12.4 C コンパイラがインストールされている場合、Oracle Solaris 11 は ANSI X3.159-1989 Programming Language - C および ISO/IEC 9899:1990 Programming Language - C (C) インタフェースをサポートします。
.sp
.LP
Oracle Solaris Studio 12.4 C コンパイラがインストールされている場合、Oracle Solaris 11 は ISO/IEC 9899:1990 Amendment 1:1995: C Integrity をサポートします。
.sp
.LP
Oracle Solaris Studio 12.4 C コンパイラがインストールされている場合、Oracle Solaris 11 は ISO/IEC 9899:1999 Programming Language - C をサポートします。
.sp
.LP
Oracle Solaris Studio 12.4 C++ コンパイラがインストールされている場合、Oracle Solaris 12.4 C++ 5.14 は ISO/IEC 14882:1998 Programming Language - C++ をサポートします。その標準のサポートされていない機能は、コンパイラの README ファイルで説明されています。
.SS "ユーティリティー"
.sp
.LP
POSIX.2、POSIX.2a、XPG4、SUS、または SUSv2 に必要な動作が Solaris ユーティリティーの履歴動作と競合する場合、そのユーティリティーの元の Solaris バージョンは変更されていません。標準に準拠した新しいバージョンは \fB/usr/xpg4/bin\fR で提供されています。POSIX.1–2001 または SUSv3 に必要な動作が Solaris ユーティリティーの履歴動作と競合する場合、標準に準拠した新しいバージョンは \fB/usr/xpg4/bin\fR または \fB/usr/xpg6/bin\fR で提供されています。POSIX.1–2001 または SUSv3 に必要な動作が POSIX.2、POSIX.2a、SUS、または SUSv2 と競合する場合、SUSv3 標準に準拠した新しいバージョンは \fB/usr/xpg6/bin\fR で提供されています。
.sp
.LP
標準に準拠したユーティリティーを使用するアプリケーションは、適切なユーティリティーを取得するために、\fBPATH\fR (\fBsh\fR(1) または \fBksh\fR(1)) または \fBpath\fR (\fBcsh\fR(1)) 環境変数を設定して、次に示されているディレクトリを指定されている順序で指定する必要があります。
.sp
.ne 2
.mk
.na
\fBSVID3、XPG3\fR
.ad
.sp .6
.RS 4n
.RS +4
.TP
1.
\fB/usr/bin\fR
.RE
.RS +4
.TP
2.
使用しているコンパイラのバイナリを含むディレクトリ
.RE
.RS +4
.TP
3.
アプリケーションで必要なバイナリを含むほかのディレクトリ
.RE
.RE

.sp
.ne 2
.mk
.na
\fBPOSIX.2、POSIX.2a、SUS、SUSv2、XPG4\fR
.ad
.sp .6
.RS 4n
.RS +4
.TP
1.
\fB/usr/xpg4/bin\fR
.RE
.RS +4
.TP
2.
\fB/usr/bin\fR
.RE
.RS +4
.TP
3.
使用しているコンパイラのバイナリを含むディレクトリ
.RE
.RS +4
.TP
4.
アプリケーションで必要なバイナリを含むほかのディレクトリ
.RE
.RE

.sp
.ne 2
.mk
.na
\fBPOSIX.1–2001、SUSv3\fR
.ad
.sp .6
.RS 4n
.RS +4
.TP
1.
\fB/usr/xpg6/bin\fR
.RE
.RS +4
.TP
2.
\fB/usr/xpg4/bin\fR
.RE
.RS +4
.TP
3.
\fB/usr/bin\fR
.RE
.RS +4
.TP
4.
使用しているコンパイラのバイナリを含むディレクトリ
.RE
.RS +4
.TP
5.
アプリケーションで必要なバイナリを含むほかのディレクトリ
.RE
.RE

.sp
.LP
アプリケーションが \fBexeclp()\fR または \fBexecvp()\fR (\fBexec\fR(2) を参照) を使用してシェルファイルを実行するか、または \fBsystem\fR(3C) を使用する場合、そのシェルファイルを解釈するために使用されるシェルは呼び出し元が準拠する標準によって異なります:
.sp

.sp
.TS
tab();
cw(4.33i) cw(1.17i) 
lw(4.33i) lw(1.17i) 
.
標準使用されるシェル
_
T{
1989 ANSI C、1990 ISO C、1999 ISO C、POSIX.1 (1990?2001)、SUS、SUSv2、SUSv3、XPG4
T}\fB/usr/xpg4/bin/sh\fR
T{
POSIX.1 (1988)、SVID3、XPG3 (標準が指定されていない)
T}\fB/usr/bin/sh\fR
.TE

.SS "機能テストマクロ"
.sp
.LP
機能テストマクロは、C 標準で指定されている機能セット以外で求められる追加の機能セットを示すために、アプリケーションによって使用されます。アプリケーションが特定の標準 (POSIX や X/Open CAE など) で定義されているインタフェースおよびヘッダーのみを使用する場合、そのアプリケーションは、その標準で指定されている適切な機能テストマクロを定義するだけで済みます。アプリケーションがその標準で定義されていないインタフェースおよびヘッダーを使用している場合は、適切な標準の機能テストマクロの定義に加えて、\fB__EXTENSIONS__\fR も定義する必要があります。\fB__EXTENSIONS__\fR を定義すると、アプリケーションには、指定された標準と競合していないすべてのインタフェースおよびヘッダーへのアクセスが提供されます。アプリケーションは、\fB__EXTENSIONS__\fR をコンパイルのコマンド行か、またはアプリケーションのソースファイル内のどちらかで定義する必要があります。
.SS "1989 ANSI C、1990 ISO C、1999 ISO C"
.sp
.LP
アプリケーションが C アプリケーションに準拠していることを示すためにどの機能テストマクロも定義する必要はありません。
.SS "ANSI/ISO C++"
.sp
.LP
ANSI/ISO C++ では、機能テストマクロが定義されていません。コンパイラのデフォルト設定とコマンド行オプションに基づいてコンパイラによって事前に定義されている標準 C++ の通知マクロ \fB__cplusplus\fR が 199711 以上の値に設定されている場合、コンパイラは標準に準拠したモードで動作し、C++ 標準への準拠を示します。199711 の値は ISO/IEC 14882:1998 への準拠を示します (その標準に必要です)。(上で説明したように、この標準への準拠は不完全です。)
.sp
.LP
POSIX や X/Open CAE では C++ バインディングが定義されていないため、\fB_POSIX_SOURCE\fR、\fB_POSIX_C_SOURCE\fR、\fB_XOPEN_SOURCE\fR などの機能テストマクロを指定すると、標準 C++ とこれらの仕様の競合する要件のためにコンパイルエラーになる場合があります。
.SS "POSIX"
.sp
.LP
POSIX.1 アプリケーションに準拠するように設計されたアプリケーションは、いずれかのヘッダーをインクルードする前に、この標準で指定されている機能テストマクロを定義する必要があります。次に示されている標準の場合、アプリケーションは示されている機能テストマクロを定義する必要があります。アプリケーション作成者は、対応する標準を確認して、目的のオプションが実装によってサポートされているかどうかを確認するために照会できるほかのマクロを探す必要があります。
.sp

.sp
.TS
tab();
cw(2.75i) cw(2.75i) 
lw(2.75i) lw(2.75i) 
.
\fBPOSIX 標準\fR\fB機能テストマクロ\fR
_
POSIX.1-1990\fB_POSIX_SOURCE\fR
_
T{
POSIX.1-1990 および POSIX.2-1992 C-Language Bindings Option
T}T{
\fB_POSIX_SOURCE\fR および \fB_POSIX_C_SOURCE=2\fR
T}
POSIX.1b-1993\fB_POSIX_C_SOURCE=199309L\fR
_
POSIX.1c-1996\fB_POSIX_C_SOURCE=199506L\fR
_
POSIX.1–2001\fB_POSIX_C_SOURCE=200112L\fR
.TE

.SS "SVID3"
.sp
.LP
SVID3 仕様は、アプリケーションが SVID3 の要件を満たすように記述されていることを示すためにどの機能テストマクロも指定しません。SVID3 仕様は、C 標準が完成する前に記述されました。
.SS "X/Open CAE"
.sp
.LP
いずれかの X/Open CAE 仕様に準拠するアプリケーションを構築またはコンパイルするには、次のガイドラインに従ってください。アプリケーションに CAE 機能と POSIX 機能の両方が必要な場合、そのアプリケーションは POSIX 機能テストマクロを設定する必要はありません。
.sp
.ne 2
.mk
.na
\fBXPG3\fR
.ad
.RS 16n
.rt  
アプリケーションは、\fB_XOPEN_SOURCE\fR を定義する必要があります。\fB_XOPEN_SOURCE\fR がある値で定義されている場合、その値は 500 未満である必要があります。
.RE

.sp
.ne 2
.mk
.na
\fBXPG4\fR
.ad
.RS 16n
.rt  
アプリケーションは \fB_XOPEN_SOURCE\fR を定義し、\fB_XOPEN_VERSION=4\fR を設定する必要があります。\fB_XOPEN_SOURCE\fR がある値で定義されている場合、その値は 500 未満である必要があります。
.RE

.sp
.ne 2
.mk
.na
\fBSUS (XPG4v2)\fR
.ad
.RS 16n
.rt  
アプリケーションは、\fB_XOPEN_SOURCE\fR を定義し、\fB_XOPEN_SOURCE_EXTENDED=1\fR を設定する必要があります。\fB_XOPEN_SOURCE\fR がある値で定義されている場合、その値は 500 未満である必要があります。
.RE

.sp
.ne 2
.mk
.na
\fBSUSv2\fR
.ad
.RS 16n
.rt  
アプリケーションは、\fB_XOPEN_SOURCE=500\fR を定義する必要があります。
.RE

.sp
.ne 2
.mk
.na
\fBSUSv3\fR
.ad
.RS 16n
.rt  
アプリケーションは、\fB_XOPEN_SOURCE=600\fR を定義する必要があります。
.RE

.SS "コンパイル"
.sp
.LP
Oracle Solaris Studio 12.4 C コンパイラは、ISO/IEC 99899:1999 (1999 ISO C Language) 標準に準拠したコンパイルシステムと \fBc99\fR ユーティリティーを提供します。
.sp
.LP
アプリケーションをリンクするために \fBld\fR が直接使用されている場合は、そのアプリケーションが POSIX.1–2001 または SUSv3 に準拠していないかぎり、いずれかの link/load コマンド行で \fB/usr/lib/values-xpg4.o\fR を指定する必要があります。準拠している場合は、いずれかの link/load コンパイル行で \fB/usr/lib/values-xpg6.o\fR を指定する必要があります。アプリケーションをリンクするために \fBcc\fR または \fBCC\fR が使用されている場合、コンパイラは適切なファイルを自動的に追加します。ただし、次の表で説明されている方法でアプリケーションを構築することをお勧めします。
.sp
.LP
XNS4 または XNS5 に準拠したアプリケーションは、それぞれ SUS または SUSv2 に対して指定された機能テストマクロの定義に加えて、いずれかの link/load コマンド行で \fB-l\fR \fBXNS\fR をインクルードする必要があります。
.sp
.LP
コンパイラが \fBredefine_extname\fR プラグマ機能をサポートしている場合 (Oracle Solaris Studio 12.4 C コンパイラおよび Oracle Solaris Studio 12.4 C++ コンパイラは、この機能をサポートしていることを示すためにマクロ \fB__PRAGMA_REDEFINE_EXTNAME\fR を定義しています)、標準ヘッダーは、関数名をライブラリのエントリポイント名に正しくマップするために \fB#pragma\fR \fBredefine_extname\fR ディレクティブを使用します。このマッピングによって、ISO C、POSIX、および X/Open の名前空間予約に対する完全なサポートが提供されます。
.sp
.LP
このプラグマ機能がコンパイラでサポートされていない場合、ヘッダーは、内部の関数名を適切なライブラリのエントリポイント名にマップするために \fB#define\fR 指令を使用します。この例では、\fBlf64\fR(5) のマニュアルページに示されている明示的な 64 ビットファイルオフセットシンボルは、代わりのエントリポイントを指定するために実装で使用されるため、アプリケーションではこれらの名前の使用を避けるようにしてください。
.sp
.LP
Oracle Solaris Studio 12.4 C コンパイラを使用している場合は、上に示されている仕様に準拠するアプリケーションを、次の表に示されているユーティリティーとフラグを使用してコンパイルするようにしてください:
.sp
.in +2
.nf
Specification            Compiler/Flags         Feature Test Macros
_________________________________________________________________________
1989 ANSI C and 1990 ISO C    c89                none
_________________________________________________________________________
1999 ISO C                    c99                none
_________________________________________________________________________
SVID3                         cc -Xt -xc99=none  none
_________________________________________________________________________
POSIX.1-1990                  c89                _POSIX_SOURCE
_________________________________________________________________________
POSIX.1-1990 and POSIX.2-1992 c89                _POSIX_SOURCE  and
  C-Language Bindings Option                     POSIX_C_SOURCE=2
_________________________________________________________________________
POSIX.1b-1993                 c89                _POSIX_C_SOURCE=199309L
_________________________________________________________________________
POSIX.1c-1996                 c89                _POSIX_C_SOURCE=199506L
_________________________________________________________________________
POSIX.1-2001                  c99                _POSIX_C_SOURCE=200112L
_________________________________________________________________________
POSIX.1c-1996                 c89                _POSIX_C_SOURCE=199506L
_________________________________________________________________________
CAE XPG3                      cc -Xa -xc99=none  _XOPEN_SOURCE
_________________________________________________________________________
CAE XPG4                      c89                _XOPEN_SOURCE and
                                                 _XOPEN_VERSION=4
_________________________________________________________________________
SUS (CAE XPG4v2)              c89                _XOPEN_SOURCE and
  (includes XNS4)                                 _XOPEN_SOURCE_EXTENDED=1
_________________________________________________________________________
SUSv2 (includes XNS5)         c89                _XOPEN_SOURCE=500
_________________________________________________________________________
SUSv3                         c99                _XOPEN_SOURCE=600
.fi
.in -2
.sp

.sp
.LP
LP64 (64 ビット) プログラミング環境をサポートしているプラットフォームの場合は、XNS5 ライブラリコールを使用している SUSv2 に準拠した LP64 アプリケーションを、次の形式のコマンド行で構築するようにしてください:
.sp
.in +2
.nf
c89 $(getconf XBS5_LP64_OFF64_CFLAGS) -D_XOPEN_SOURCE=500 \e
    $(getconf XBS5_LP64_OFF64_LDFLAGS) foo.c -o foo \e
    $(getconf XBS5_LP64_OFF64_LIBS) -lxnet
.fi
.in -2

.sp
.LP
同様の SUSv3 に準拠した LP64 アプリケーションを、次の形式のコマンド行で構築するようにしてください:
.sp
.in +2
.nf
c99 $(getconf POSIX_V6_LP64_OFF64_CFLAGS) -D_XOPEN_SOURCE=600 \e
    $(getconf POSIX_V6_LP64_OFF64_LDFLAGS) foo.c -o foo \e
    $(getconf POSIX_V6_LP64_OFF64_LIBS) -lxnet
.fi
.in -2

.SS "SUSv3"
.sp
.ne 2
.mk
.na
\fB\fBc99\fR\fR
.ad
.RS 28n
.rt  
\fB_XOPEN_SOURCE=600\fR
.RE

.SH 関連項目
.sp
.LP
\fBcsh\fR(1)、\fBksh\fR(1)、\fBsh\fR(1)、\fBexec\fR(2)、\fBsysconf\fR(3C)、\fBsystem\fR(3C)、\fBenviron\fR(5)、\fBlf64\fR(5)
