'\" te
.\" Copyright 2009, 2015, Oracle and/or its affiliates. All rights                reserved.
.TH elfsign 1 "02 Jun 2015" "SunOS 5.11" "User Commands"
.SH NAME
elfsign \- sign binaries
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/elfsign\fR sign [\fB-v\fR] \fB-k\fR \fIprivate_key\fR \fB-c\fR \fIcertificate_file\fR
     \fB-e\fR \fIelf_object\fR [\fB-F\fR \fIformat\fR] [file]...
.fi

.LP
.nf
\fB/usr/bin/elfsign\fR sign [\fB-v\fR] \fB-c\fR \fIcertificate_file\fR
     \fB-e\fR \fIelf_object\fR \fB-T\fR \fItoken_label\fR [\fB-P\fR \fIpin_file\fR] [\fB-F\fR \fIformat\fR] [file]...
.fi

.LP
.nf
/usr/bin/elfsign sign [-v] -c \fIcertificate_file\fR
	  [-e \fIelf_object\fR] -s \fIsignature_file\fR [-F \fIformat\fR] [\fIfile\fR]
.fi

.LP
.nf
\fB/usr/bin/elfsign\fR verify [\fB-c\fR \fIcertificate_file\fR] 
     [\fB-v\fR] \fB-e\fR \fIelf_object\fR [file]...
.fi

.LP
.nf
\fB/usr/bin/elfsign\fR \fIlist\fR \fB-f\fR \fIfield\fR \fB-c\fR \fIcertificate_file\fR
.fi

.LP
.nf
\fB/usr/bin/elfsign\fR \fIlist\fR \fB-f\fR \fIfield\fR \fB-e\fR \fIelf_object\fR
.fi

.LP
.nf
/usr/bin/elfsign digest [-v] [-o \fIdigest_file\fR]
	  [-e \fIelf_object\fR] [-F \fIformat\fR] [\fIfile\fR]
.fi

.SH DESCRIPTION
.sp
.ne 2
.mk
.na
\fB\fBlist\fR\fR
.ad
.RS 10n
.rt  
Lists on standard output information from a single certificate file or signed elf object. The selected field appears on a single line. If the field specified does not apply to the named file, the command terminates with no standard output. This output of this subcommand is intended for use in scripts and by other commands. 
.RE

.sp
.ne 2
.mk
.na
\fB\fBsign\fR\fR
.ad
.RS 10n
.rt  
Signs the elf object, using the given private key and certificate file, or signature and certificate file.
.RE

.sp
.ne 2
.mk
.na
\fB\fBverify\fR\fR
.ad
.RS 10n
.rt  
Verifies an existing signed object. Uses the certificate given or searches for an appropriate certificate in \fB/etc/crypto/certs\fR and \fB/etc/certs\fR if \fB- c\fR is not given.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdigest\fR\fR
.ad
.RS 10n
.rt  
Prints on standard output, the digest of the elf object in a given format. SHA-256 is the default format.
.RE

.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
\fB\fB-c\fR \fIcertificate_file\fR\fR
.ad
.RS 23n
.rt  
Specifies the path to an X.509 certificate in PEM/PKCS#7 or ASN.1 BER format.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-e\fR \fIelf_object\fR\fR
.ad
.RS 23n
.rt  
Specifies the path to the object to be signed or verified.
.sp
The \fB-e\fR option can be specified multiple times for signing or verifying multiple objects. 
.RE

.sp
.ne 2
.mk
.na
\fB\fB-F\fR \fIformat\fR\fR
.ad
.RS 23n
.rt  
For the \fBsign\fR subcommand, specifies the format of the signature. The valid format options are
.sp
.ne 2
.mk
.na
\fB\fBrsa_md5_sha1\fR\fR
.ad
.RS 16n
.rt  
Default format Solaris 10 and updates, The \fBrsa_md5_sha1\fR format is obsolete.
.RE

.sp
.ne 2
.mk
.na
\fB\fBrsa_sha256\fR\fR
.ad
.RS 16n
.rt  
Default format for this release.
.RE

.sp
.ne 2
.mk
.na
\fB\fBrsa_sha1\fR\fR
.ad
.RS 16n
.rt  
Alternate format for this release.
.RE

Formats other than \fBrsa_md5_sha1\fR include an informational timestamp with the signature indicating when the signature was applied. This timestamp is not cryptographically secure, nor is it used as part of verification.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fIfield\fR\fR
.ad
.RS 23n
.rt  
For the \fBlist\fR subcommand, specifies what field should appear in the output. 
.sp
The \fBlist\fR subcommand supports the following option:
.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fBall\fR\fR
.ad
.RS 10n
.rt  
Lists all fields in a certificate or an ELF file. For an ELF file, the following signature information is displayed: Endianess, format, version, signer, timestamp, signature and OID.
.RE

The valid field specifiers for a certifiicate file are: 
.sp
.ne 2
.mk
.na
\fBsubject\fR
.ad
.RS 11n
.rt  
Subject DN (Distinguished Name)
.RE

.sp
.ne 2
.mk
.na
\fBissuer\fR
.ad
.RS 11n
.rt  
Issuer DN
.RE

The valid field specifiers for an elf object are: 
.sp
.ne 2
.mk
.na
\fBformat\fR
.ad
.RS 10n
.rt  
Format of the signature
.RE

.sp
.ne 2
.mk
.na
\fBsigner\fR
.ad
.RS 10n
.rt  
Subject DN of the certificate used to sign the object
.RE

.sp
.ne 2
.mk
.na
\fBtime\fR
.ad
.RS 10n
.rt  
Time the signature was applied, in the locale's default format
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fB-k\fR \fIprivate_key\fR\fR
.ad
.RS 23n
.rt  
Specifies the location of the private key file when not using a PKCS#11 token. This file is an RSA Private key file in a Solaris specific format.
.sp
It is an error to specify both the \fB-k\fR and \fB-T\fR options.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fIdigest_file\fR\fR
.ad
.RS 23n
.rt  
Specifies the path to the digest file to be output with the \fBdigest\fR command.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-P\fR \fIpin_file\fR\fR
.ad
.RS 23n
.rt  
Specifies the file which holds the PIN for accessing the token device. If the PIN is not provided in a \fIpin_file\fR, \fBelfsign\fR prompts for the PIN.
.sp
It is an error to specify the \fB-P\fR option without the \fB-T\fR option.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR \fIsignature_file\fR\fR
.ad
.RS 23n
.rt  
Specifies the path to a signature file in binary or base64 encoded format. Signature file is created separately using private key and the digest information of the elf object.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-T\fR \fItoken_uri\fR\fR
.ad
.RS 23n
.rt  
Specifies the URI of the PKCS#11 token device, as provided by \fBpktool\fR, which holds the private key. The token label, token key label, and pin file can be specified through the \fItoken_uri\fR; the token key label (object) is a required input attribute.
.sp
It is an error to specify both the \fB-T\fR and \fB-k\fR options. 
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 23n
.rt  
Requests more detailed information. The additional output includes the signer and, if the signature format contains it, the time the object was signed. This is not stable parsable output.
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fR
.ad
.RS 8n
.rt  
One or more elf objects to be signed or verified. At least one elf object must be specified either through the \fB-e\fR option or after all other options.
.RE

.SH EXAMPLES
.LP
\fBExample 1 \fRSigning an ELF Object Using a Key/Certificate in a File
.sp
.in +2
.nf
example$ elfsign sign -k myprivatekey -c mycert -e lib/libmylib.so.1
.fi
.in -2
.sp

.LP
\fBExample 2 \fRVerifying an \fBelf\fR Object's Signature
.sp
.in +2
.nf
example$ elfsign verify -c mycert -e lib/libmylib.so.1
elfsign: verification of lib/libmylib.so.1 passed
.fi
.in -2
.sp

.LP
\fBExample 3 \fRDetermining Information About an Object
.sp
.in +2
.nf
example$ elfsign list -f format -e lib/libmylib.so.1
rsa_md5_sha1

example$ elfsign list -f signer -e lib/libmylib.so.1
CN=VENDOR, OU=Software Development, O=Vendor Inc.
.fi
.in -2
.sp

.LP
\fBExample 4 \fRSigning an ELF Object Using a Token URI
.sp
.in +2
.nf
example$ \fBelfsign sign -c mycert -e lib/libmylib.so.1  
          -T 'pkcs11:token=Sun Software PKCS#11 softtoken; 
          object=mykey;pinfile=/path/to/pinfile'\fR
.fi
.in -2
.sp

.LP
\fBExample 5 \fRSigning an ELF Object Using a Token URI with interactive PIN
.sp
.in +2
.nf
example$ \fBelfsign sign -c mycert -e lib/libmylib.so.1 \
          -T 'pkcs11:token=Sun Software PKCS#11 softtoken;object=mykey'\fR
Enter PIN for Sun Software PKCS#11 softtoken:
.fi
.in -2
.sp

.LP
\fBExample 6 \fRSigning an ELF Object Using a Signature File
.sp
.LP
Create digest of the ELF object.

.sp
.in +2
.nf
example$ \fBelfsign digest -o /path/to/digest_file -e /lib/libmylib.so.1\fR
.fi
.in -2
.sp

.sp
.LP
Create private key and certificate file using the \fBopenssl\fR command.

.sp
.in +2
.nf
example$ \fBopenssl genrsa -out /path/to/private_key 2048\fR
example$ \fBopenssl req -new -x509 -days 999 -key /path/to/private_key\fR
     \fB-out /path/to/certificate_file\fR
.fi
.in -2
.sp

.sp
.LP
Create a signature file using the openssl command.

.sp
.in +2
.nf
example$ \fBopenssl rsautl -sign -in /path/to/digest_file\fR
           \fB-out /path/to/signature_file -inkey /path/to/private_key\fR
.fi
.in -2
.sp

.sp
.LP
Sign the ELF object using the signature file.

.sp
.in +2
.nf
example$ \fBelfsign sign -c /path/to/certificate_file\fR
           \fB-s /path/to/signature_file -e /lib/libmylib.so.1\fR
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp

.sp
.TS
tab();
cw(1i) cw(3i) cw(1.5i) 
lw(1i) lw(3i) lw(1.5i) 
.
VALUEMEANINGSUB-COMMAND
\fB0\fROperation successfulsign/verify
\fB1\fRInvalid arguments
\fB2\fRFailed to verify ELF object verify
3Unable to open ELF objectsign/verify
4Unable to load or invalid certificatesign/verify
5T{
Unable to load private key, private key is invalid, or token label is invalid
T}sign
6Failed to add signaturesign
7T{
Attempt to verify unsigned object or object not an ELF file
T}verify
.TE

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/etc/crypto/certs\fR\fR
.ad
.RS 21n
.rt  
Directory searched for the \fBverify\fR subcommand if the \fB-c\fR flag is not used
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Availabilitydeveloper/base-developer-utilities
_
Interface StabilitySee below.
.TE

.sp
.LP
The \fBelfsign\fR command and subcommands are Committed. While applications should not depend on the output format of \fBelfsign\fR, the output format of the \fBlist\fR subcommand is Committed.
.SH SEE ALSO
.sp
.LP
\fBdate\fR(1), \fBpktool\fR(1), \fBcryptoadm\fR(1M), \fBattributes\fR(5)
