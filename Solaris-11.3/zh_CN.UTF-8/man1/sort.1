'\" te
.\" Copyright 1989 AT&T
.\" Poertions Copyright (c) 2001, 2015, Oracle and/or its affiliates.All rights reserved.
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation.In the following statement, the phrase "this text" refers to portions of the system documentation.Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document.The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.This notice shall appear on any product containing this material. 
.TH sort 1 "2015 年 4 月 6 日" "SunOS 5.11" "用户命令"
.SH 名称
sort \- 对文本文件进行排序、合并或序列检查
.SH 用法概要
.LP
.nf
\fB/usr/bin/sort\fR [\fB-bcCdfimMnru\fR] [\fB-k\fR \fIkeydef\fR] [\fB-o\fR \fIoutput\fR] 
     [\fB-S\fR \fIkmem\fR] [\fB-t\fR \fIchar\fR] [\fB-T\fR \fIdirectory\fR]
     [+\fIpos1\fR [-\fIpos2\fR]] [\fIfile\fR]...
.fi

.LP
.nf
\fB/usr/xpg4/bin/sort\fR [\fB-bcCdfimMnru\fR] [\fB-k\fR \fIkeydef\fR] [\fB-o\fR \fIoutput\fR] 
     [\fB-S\fR \fIkmem\fR] [\fB-t\fR \fIchar\fR] [\fB-T\fR \fIdirectory\fR] [\fB-y\fR [\fIkmem\fR]] 
     [\fB-z\fR \fIrecsz\fR] [+\fIpos1\fR [-\fIpos2\fR]] [\fIfile\fR]...
.fi

.SH 描述
.sp
.LP
\fBsort\fR 命令用于对所有已命名文件的行整体进行排序，并将结果写入标准输出中。
.sp
.LP
以一个或多个从每行输入提取的排序键为基础进行比较。缺省情况下，整个输入行中有一个排序键。各行按照当前语言环境的整理序列进行排列。
.SH 选项
.sp
.LP
以下选项用于更改缺省行为：
.SS "/usr/bin/sort"
.sp
.ne 2
.mk
.na
\fB\fB-c\fR\fR
.ad
.RS 6n
.rt  
检查单个输入文件是否按参数指定的顺序和当前语言环境的整理序列进行排列。输出将不会发送到标准输出。退出代码将指示是否检测到顺序混乱或者出现错误。如果检测到顺序混乱（或者使用 \fB-u\fR 检测到重复键），将向标准错误发送一条警告消息，指出发现顺序混乱或重复键的位置。
.RE

.SS "/usr/xpg4/bin/sort"
.sp
.ne 2
.mk
.na
\fB\fB-C\fR\fR
.ad
.RS 12n
.rt  
与 \fB-c\fR 相同，但检测到顺序混乱或重复键（使用 \fB-u\fR）时不会向标准错误发送警告消息。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-y\fR \fIkmem\fR\fR
.ad
.RS 12n
.rt  
（过时）。此选项曾用于指定 \fBsort\fR 最初所使用的主内存量。其功能不适用于虚拟内存系统；现在，使用 \fB-S\fR 选项指定 \fBsort\fR 的内存使用情况。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-z\fR \fIrecsz\fR\fR
.ad
.RS 12n
.rt  
（过时）。此选项曾用于防止在遇到比依赖于系统的缺省缓冲区大小更长的行时出现异常终止。因为 \fBsort\fR 会自动分配足够容纳最长行的缓冲区，此选项已不起作用。
.RE

.SS "/usr/bin/sort 和 /usr/xpg4/bin/sort"
.sp
.ne 2
.mk
.na
\fB\fB-m\fR\fR
.ad
.RS 16n
.rt  
仅限于合并。假定已对输入文件完成排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fIoutput\fR\fR
.ad
.RS 16n
.rt  
指定要使用的输出文件的名称，而不是标准输出。该文件可以和其中一个输入文件相同。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-S\fR \fIkmem\fR\fR
.ad
.RS 16n
.rt  
指定排序时所使用的基于交换的内存的最大数量，以千字节为单位（缺省单位）。还可直接指定 \fIkmem\fR 来代表多个字节 (b)、千字节 (k)、兆字节 (m)、千兆字节 (g) 或兆兆字节 (t)；或代表已安装物理内存的百分比。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-T\fR \fIdirectory\fR\fR
.ad
.RS 16n
.rt  
指定用来放置临时文件的 \fIdirectory\fR。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.RS 16n
.rt  
唯一：对于包含相等键的每组行，只允许出现一次，其余均加以隐藏。如果与 \fB-c\fR 选项结合使用，则除检查输入文件是否已排序外，还会检查并确认不存在任何包含相同键的行。
.RE

.SS "排序选项"
.sp
.LP
缺省的排序顺序取决于 \fBLC_COLLATE\fR 的值。如果 \fBLC_COLLATE\fR 设置为 \fBC\fR，排序则采用 \fBASCII\fR 顺序。如果 \fBLC_COLLATE\fR 设置为 \fBen_US\fR，则除非两个字符串相等，而且其中一个字符串比另一个提前出现大写字母，否则排序不区分大小写。其他语言环境具有其他排序顺序。
.sp
.LP
以下选项会覆盖缺省的排序规则。当排序选项独立于所有键字段规范出现时，请求的字段排序规则会全局应用于所有的排序键。附加到某个特定键时（请参见\fB\fR“排序键选项”部分），指定的排序选项会覆盖该键的所有全局排序选项。在过时的形式中，如果一个或多个上述选项跟在 \fI+pos1\fR 之后，则它只影响由前面选项指定的键字段。
.sp
.ne 2
.mk
.na
\fB\fB-d\fR\fR
.ad
.RS 6n
.rt  
字典顺序：只有字母、数字和空白字符（空格和制表符）对比较有重要的影响。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 6n
.rt  
将小写字母转换为大字母。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-i\fR\fR
.ad
.RS 6n
.rt  
忽略不可输出的字符。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-M\fR\fR
.ad
.RS 6n
.rt  
以月份进行比较。字段中前三个非空字符将转换为大写形式并进行比较。例如，英文形式的排序顺序为 \fB"JAN" < "FEB" < . . .< "DEC"\fR。比较结果均低于 \fB"JAN"\fR 的字段视为无效字段。\fB-M\fR 选项隐含 \fB-b\fR 选项（请参见下文）。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 6n
.rt  
将排序键限制为初始的数字字符串，其中包含可选的空白字符、可选的负号、零个或多个带可选基数字符和千位分隔符的数字（根据当前语言环境定义），该字符串按算术值进行排序。空数字字符串将视为零。前导零和零上的符号不会影响排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR\fR
.ad
.RS 6n
.rt  
逆向读取比较。
.RE

.SS "字段分隔符选项"
.sp
.LP
可使用以下选项更改字段分隔符的处理方式：
.sp
.ne 2
.mk
.na
\fB\fB-b\fR\fR
.ad
.RS 11n
.rt  
在确定受限排序键的起始位置和结尾位置时忽略前导空白字符。如果在第一个排序键选项的前面指定了 \fB-b\fR 选项，该选项将应用于所有的排序键选项。否则，\fB-b\fR 选项可以独立附加到每个 \fB-k\fR \fIfield_start\fR、\fIfield_end\fR、+\fIpos1\fR 或 -\fIpos2\fR 选项参数（请参见下文）。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR \fIchar\fR\fR
.ad
.RS 11n
.rt  
使用 \fIchar\fR 作为字段分隔符字符。\fIchar\fR 不属于字段的一部分（虽然可将其包含在排序键中）。每次出现的 \fIchar\fR 都很重要（例如 \fI<char><char> \fR 用于分隔空白字段）。如果未指定 \fB-t\fR，则使用空白字符作为缺省的字段分隔符；非空白字符后跟随的每个最大非空空白字符序列都是一个字段分隔符。
.RE

.SS "排序键选项"
.sp
.LP
可使用以下选项来指定排序键：
.sp
.ne 2
.mk
.na
\fB\fB-k\fR \fIkeydef\fR\fR
.ad
.RS 19n
.rt  
\fIkeydef\fR 参数是受限排序键字段的定义。该定义的格式为： 
.sp
.in +2
.nf
\fB-k\fR \fIfield_start\fR [\fItype\fR] [\fB,\fR\fIfield_end\fR [\fItype\fR] ]
.fi
.in -2
.sp

其中： 
.sp
.ne 2
.mk
.na
\fB\fIfield_start\fR 和 \fIfield_end\fR\fR
.ad
.sp .6
.RS 4n
定义受限于行的一部分的键字段。
.RE

.sp
.ne 2
.mk
.na
\fB\fItype\fR\fR
.ad
.sp .6
.RS 4n
是 \fBbdfiMnr\fR 字符列表中的一个修饰符。\fBb\fR 修饰符的行为方式与 \fB-b\fR 选项相同，但仅应用于其所附加到的 \fIfield_start\fR 或 \fIfield_end\fR，而且字段中的字符将从字段中的第一个非空白字符开始计数。（这分别应用于 \fIfirst_character\fR 和 \fIlast_character\fR。）其他修饰符的行为方式与对应选项相同，但仅应用于其所附加到的键字段。修饰符会在指定了 \fIfield_start\fR 和/或 \fIfield_end\fR 的情况下起到上述作用。如何将任何修饰符附加到 \fIfield_start\fR 或 \fIfield_end\fR，则任何选项都不会应用于这两个字符。
.RE

存在多个键字段时，只有前面的所有键的比较结果相等之后才会对后面的键进行比较。除非指定了 \fB-u\fR 选项，否则比较结果为相等的行将按照不存在 \fB-d\fR、\fB-f\fR、\fB-i\fR、\fB- n\fR 或 \fB-k\fR 选项的方式进行排序（但已指定的 \fB-r\fR 仍有效），并将所有对比较有重要作用的字节包含在行中。
.sp
表示法：
.sp
.in +2
.nf
\fB-k\fR \fIfield_start\fR[\fItype\fR][\fB,\fR\fIfield_end\fR[\fItype\fR]]
.fi
.in -2
.sp

定义以 \fIfield_start\fR 为开头、以 \fIfield_end\fR 为结尾（包含这两个字符）的键字段，除非 \fIfield_start\fR 位于行结尾之外，或位于 \fIfield_end\fR 之后，在这两种情况下，键字段为空。缺少的 \fIfield_end\fR 表示行的最后一个字符。
.sp
字段由一个最大非分隔字符序列和前面的字段分隔符（如果缺少 \fB-t\fR 选项）组成。
.sp
\fIkeydef\fR 选项参数的 \fIfield_start\fR 部分采用以下格式：
.sp
.in +2
.nf
\fIfield_number\fR[\fB\&.\fR\fIfirst_character\fR]
.fi
.in -2
.sp

字段和字段中的字符均从 1 开始编号。\fIfield_number\fR 和 \fIfirst_character\fR（解释为十进制正整数）指定要用作排序键一部分的第一个字符。如果省略了 \fB\&.\fR\fIfirst_character \fR，则该值表示字段的第一个字符。
.sp
\fIkeydef\fR 选项参数的 \fIfield_end\fR 部分采用以下格式：
.sp
.in +2
.nf
\fIfield_number\fR[\fB\&.\fR\fIlast_character\fR]
.fi
.in -2
.sp

如上所述，\fIfield_number\fR 适用于 \fIfield_start\fR。\fIlast_character\fR（解释为非负十进制整数）指定要用作排序键一部分的最后一个字符。如果 \fIlast_character \fR 的求值结果为零，或省略了 \fB\&.\fR\fIlast_character\fR，则该值表示字段中通过 \fIfield_number\fR 指定的最后一个字符。
.sp
如果 \fB-b\fR 选项或 \fBb\fR 类型修饰符有效，则字段中的字符将从字段中的第一个非空白字符开始计数。（这分别应用于 \fIfirst_character\fR 和 \fIlast_character\fR。）
.RE

.sp
.ne 2
.mk
.na
\fB[\fB+\fR\fIpos1\fR [\fB-\fR\fIpos2\fR]]\fR
.ad
.RS 19n
.rt  
（过时）。提供与 \fB-k\fR\fIkeydef\fR 选项等效的功能。
.sp
\fIpos1\fR 和 \fIpos2\fR 均采用 \fIm\fR\fB\&.\fR\fIn\fR 格式，其后可有选择地跟随一个或多个 \fBbdfiMnr\fR 标志。\fB+\fR\fI m\fR\fB\&.\fR\fIn\fR 所指定的起始位置被解释为第 \fIm\fR+1 个字段中的第 \fIn\fR+1 个字符。缺少的 \fB\&.\fR\fIn\fR 代表 \fB\&.0\fR，表示第 \fIm\fR+1 个字段的第一个字符。如果 \fBb\fR 标志有效，\fIn\fR 将从第 \fIm\fR+1 个字段中的第一个非空白字符开始计数；\fB+\fR\fIm\fR\fB\&.0b\fR 表示第 \fIm\fR+1 个字段中的第一个非空白字符。
.sp
对 \fB-\fR\fIm\fR\fB\&.\fR\fIn\fR 所指定的最后位置被解释为自第 \fIm\fR 个字段的最后一个字符之后的第 \fIn\fR 个字符（包括分隔符）。缺少的 \fB\&.\fR\fIn\fR 代表 \fB\&.\fR0，表示第 \fIm\fR 个字段的最后一个字符。如果 \fBb\fR 标志有效，\fIn\fR 将从第 \fIm\fR+1 个字段的最后一个前导空白字符开始计数；\fB-\fR\fIm\fR\fB\&.\fR1\fBb\fR 表示 \fIm\fR+1 个字段中的第一个非空白字符。
.sp
使用类型修饰符 \fBT\fR 和 \fBU\fR 完全指定的 \fI+pos1\fR \fI-pos2\fR 格式为： 
.sp
.in +2
.nf
+\fBw\fR.\fBxT\fR -\fBy\fR.\fBzU\fR
.fi
.in -2
.sp

等效于：
.sp
.in +2
.nf
undefined (z==0 & U contains \fIb\fR & \fI-t\fR is present)
-k w+1.x+1T,y.0U     (z==0 otherwise)
-k w+1.x+1T,y+1.zU   (z > 0) 
.fi
.in -2
.sp

实现支持排序键（\fB-k\fR 选项和已过时的 \fB+\fR\fIpos1\fR 和 \fB-\fR\fIpos2\fR\fB\fR）至少出现 9 次，这对于命令行排序很重要。如果未指定任何排序键，则使用整个行的缺省排序键。
.RE

.SH 操作数
.sp
.LP
支持下列操作数：
.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fR
.ad
.RS 8n
.rt  
要进行排序、合并或检查的文件的路径名称。如果未指定 \fIfile\fR 操作数，或者如果 \fIfile\fR 操作数为 \fB-\fR，则会使用标准输入。
.RE

.SH 用法
.sp
.LP
有关 \fBsort\fR 遇到大于或等于 2 GB（2^31 字节）文件时行为的说明，请参见 \fBlargefile\fR(5)。
.SH 示例
.sp
.LP
在以下示例中，先后给出了指定 \fBsort\fR 键的首选方法和过时方法，以帮助理解这两种形式之间关系。
.LP
\fB示例 1 \fR以第二个字段作为排序键进行排序
.sp
.LP
以下两个命令都可以第二个字段作为排序键，对 \fBinfile\fR 的内容进行排序：

.sp
.in +2
.nf
example% \fBsort -k 2,2 infile\fR
example% \fBsort +1 \(mi2 infile\fR 
.fi
.in -2
.sp

.LP
\fB示例 2 \fR按相反顺序排序
.sp
.LP
以下两个命令都可以通过将输出放置在 \fBoutfile\fR 中，并使用第二个字段的第二个字符作为排序键，按照相反的顺序对 \fBinfile1\fR 和 \fBinfile2\fR 的内容进行排序（假定第二个字段的第一个字符为字段分隔符）：

.sp
.in +2
.nf
example% \fBsort -r -o outfile -k 2.2,2.2 infile1 infile2\fR 
example% \fBsort -r -o outfile +1.1 \(mi1.2 infile1 infile2\fR
.fi
.in -2
.sp

.LP
\fB示例 3 \fR使用其中一个文件中的指定字符进行排序
.sp
.LP
以下两个命令都可以使用第二个字段的第二个非空白字符作为排序键，对 \fBinfile1\fR 和 \fBinfile2\fR 的内容进行排序：

.sp
.in +2
.nf
example% \fBsort -k 2.2b,2.2b infile1 infile2\fR 
example% \fBsort +1.1b \(mi1.2b infile1 infile2\fR
.fi
.in -2
.sp

.LP
\fB示例 4 \fR按照数字用户 ID 进行排序
.sp
.LP
以下两个命令都可以输出按照数字用户 ID（第三个以冒号分隔的字段）进行排序的 \fBpasswd\fR(4) 文件（用户数据库）：

.sp
.in +2
.nf
example% \fBsort -t : -k 3,3n /etc/passwd\fR 
example% \fBsort -t : +2 \(mi3n /etc/passwd\fR
.fi
.in -2
.sp

.LP
\fB示例 5 \fR列显已排序的行（与某个字段完全相同的行除外）
.sp
.LP
以下两个命令都可以输出已经过排序的文件 \fBinfile\fR 中的行，对于第三个字段相同的行，将允许出现一次，其余均加以隐藏：

.sp
.in +2
.nf
example% \fBsort -um -k 3.1,3.0 infile\fR 
example% \fBsort -um +2.0 \(mi3.0 infile\fR 
.fi
.in -2
.sp

.LP
\fB示例 6 \fR按主机 IP 地址进行排序
.sp
.LP
以下两个命令都可以输出按照数字 \fBIP\fR 地址（前四个数字字段）进行排序的 \fBhosts\fR(4) 文件（IPv4 主机数据库）：

.sp
.in +2
.nf
example$ \fBsort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n /etc/hosts\fR
example$ \fBsort -t . +0 -1n +1 -2n +2 -3n +3 -4n /etc/hosts\fR
.fi
.in -2
.sp

.sp
.LP
因为 '\fB\&.\fR' 同时属于字段分隔符和小数分隔符（在许多语言环境下），如果未能指定字段两端的字符，则会导致第二个字段被解释为第一个字段的小数部分，以此类推。

.SH 环境变量
.sp
.LP
有关影响 \fBsort\fR 执行的以下环境变量的说明，请参见 \fBenviron\fR(5)：\fBLANG\fR、\fBLC_ALL\fR、\fBLC_COLLATE\fR、\fBLC_MESSAGES\fR 和 \fBNLSPATH\fR。
.sp
.ne 2
.mk
.na
\fB\fBLC_CTYPE\fR\fR
.ad
.RS 14n
.rt  
确定将文本数据的字节序列解释为字符（例如参数和输入文件中的单字节及多字节字符）以及对 \fB-b\fR、\fB-d\fR、\fB-f\fR、\fB- i\fR 和 \fB-n\fR 选项采取字符分类行为的语言环境。
.RE

.sp
.ne 2
.mk
.na
\fB\fBLC_NUMERIC\fR\fR
.ad
.RS 14n
.rt  
确定为 \fB-n\fR 选项定义基数字符和千位分隔符的语言环境。
.RE

.SH 退出状态
.sp
.LP
将返回以下退出值：
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
所有输入文件均已成功输出，或者已指定 \fB-c\fR 并对输入文件进行了正确的排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fB1\fR\fR
.ad
.RS 6n
.rt  
如果是在 \fB-c\fR 选项下，则表示文件未按指定顺序排序；如果同时指定了 \fB-c\fR 和 \fB-u\fR 选项，则表示两个输入行中包含相等的键。
.RE

.sp
.ne 2
.mk
.na
\fB\fB>1\fR\fR
.ad
.RS 6n
.rt  
出现错误。
.RE

.SH 文件
.sp
.ne 2
.mk
.na
\fB\fB/var/tmp/stm???\fR\fR
.ad
.RS 19n
.rt  
临时文件
.RE

.SH 属性
.sp
.LP
有关下列属性的说明，请参见 \fBattributes\fR(5)：
.SS "/usr/bin/sort"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
可用性system/core-os
_
CSIEnabled（已启用）
.TE

.SS "/usr/xpg4/bin/sort"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
可用性system/xopen/xcu4
_
CSIEnabled（已启用）
_
接口稳定性Committed（已确定）
_
标准请参见 \fBstandards\fR(5)。
.TE

.SH 另请参见
.sp
.LP
\fBcomm\fR(1)、\fBjoin\fR(1)、\fBuniq\fR(1)、\fBnl_langinfo\fR(3C)、\fBstrftime\fR(3C)、\fBhosts\fR(4)、\fBpasswd\fR(4)、\fBattributes\fR(5)、\fBenviron\fR(5)、\fBlargefile\fR(5)、\fBstandards\fR(5)
.SH 诊断
.sp
.LP
针对各种故障情况（例如输入行过长）以及在使用 \fB-c\fR 选项时发现的顺序混乱问题，提供注释并以非零状态退出。
.SH 附注
.sp
.LP
当输入文件的最后一行缺少\fB换行\fR字符时，\fBsort\fR 会附加一个，并输出一条警告消息，然后继续。
.sp
.LP
\fBsort\fR 不能保证对相等的键保留相对的行排序。
.sp
.LP
用户可以使用 \fB-S\fR 选项对特定方案的 \fBsort\fR 效果进行调整。但是，用户应特别注意的是，与虚拟内存系统相比，\fBsort\fR 更加了解如何使用有限数量的内存进行排序。因此，如果通过 \fB-S\fR 选项调用排序以请求极大量的内存，其效果可能极差。
.sp
.LP
如上所述，可以使用某些字段修饰符（如 \fB-M\fR 和 \fB-d\fR）对输入数据作出与特定于语言环境的设置有关的解释。如果用户的期望与语言环境所确立的约定不一致，则此解释的结果可能会出乎意料。如果是表示月份的键，\fBsort\fR 不会尝试补偿大致的月份缩写。只有 \fBnl_langinfo\fR(3C) 或 \fBstrftime\fR(3C) 中的确切月份缩写是经过认可的。对于可输出顺序或字典顺序，如果语言环境未明确定义这些概念，结果可能是一个空排序键，从而导致下一个键对确定适当排序起重要作用。
