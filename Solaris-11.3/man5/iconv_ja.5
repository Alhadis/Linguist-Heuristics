'\" te
.\" Copyright (c) 1999, 2014, Oracle and/or its affiliates. All rights reserved.
.TH iconv_ja 5 "8 Jan 2014" "" "Standards, Environments, and Macros"
.SH NAME
iconv_ja \- code set conversions in ja locale
.SH DESCRIPTION
.sp
.LP
The following code set conversions are supported:
.sp

.sp
.TS
tab() box;
lw(2.08i) |lw(3.42i) 
lw(2.08i) |lw(3.42i) 
.
Code Set Conversions Supported
_
Source CodeTarget Code
_
eucJPPCK
eucJPISO-2022-JP
eucJPISO-2022-JP.RFC1468
eucJPJIS7
eucJPSJIS
eucJP"Unicode"s
eucJPUTF-8-Java
eucJPjis
eucJPibmj
eucJPibmj-EBCDIK
SJISeucJP
SJISISO-2022-JP
SJIS"Unicode"s
SJISjis
SJISibmj
PCKeucJP
PCK"Unicode"s
PCKUTF-8-Java
PCKISO-2022-JP
PCKISO-2022-JP.RFC1468
PCKjis
PCKibmj
PCKibmj-EBCDIK
ISO-2022-JPeucJP
ISO-2022-JPPCK
ISO-2022-JPSJIS
ISO-2022-JPUTF-8
"Unicode"seucJP
"Unicode"sSJIS
"Unicode"sPCK
UTF-8ISO-2022-JP
UTF-8ISO-2022-JP.RFC1468
UTF-8-JavaeucJP
UTF-8-JavaPCK
JIS7eucJP
jiseucJP
jisPCK
jisSJIS
ibmjeucJP
ibmjPCK
ibmjSJIS
ibmj-EBCDIKeucJP
ibmj-EBCDIKPCK
.TE

.sp

.sp
.TS
tab() box;
lw(1.94i) |lw(3.56i) 
lw(1.94i) |lw(3.56i) 
.
Code Set Conversions Supported
_
Source CodeTarget Code
_
eucJPibm930
eucJPibm931
eucJPibm939
eucJPibm5026
eucJPibm5035
eucJPFujitsuJEF-ascii-code
eucJPFujitsuJEF-kana-code
eucJPFujitsuJEF-ascii-face
eucJPFujitsuJEF-kana-face
eucJPHitachiKEIS83
eucJPHitachiKEIS90
eucJPNECJIPS
PCKibm930
PCKibm931
PCKibm939
PCKibm5026
PCKibm5035
PCKFujitsuJEF-ascii-code
PCKFujitsuJEF-kana-code
PCKFujitsuJEF-ascii-face
PCKFujitsuJEF-kana-face
PCKHitachiKEIS83
PCKHitachiKEIS90
PCKNECJIPS
UTF-8ibm930
UTF-8ibm931
UTF-8ibm939
UTF-8ibm5026
UTF-8ibm5035
"Unicode"sms932
"Unicode"seucJP-ms
UTF-8UTF-8-ms932
UTF-8FujitsuJEF-ascii-code
UTF-8FujitsuJEF-kana-code
UTF-8FujitsuJEF-ascii-face
UTF-8FujitsuJEF-kana-face
UTF-8HitachiKEIS83
UTF-8HitachiKEIS90
UTF-8NECJIPS
UTF-8-ms932UTF-8
ibm930eucJP
ibm930PCK
ibm930UTF-8
ibm931eucJP
ibm931PCK
ibm931UTF-8
ibm939eucJP
ibm939PCK
ibm939UTF-8
ibm5026eucJP
ibm5026PCK
ibm5026UTF-8
ibm5035eucJP
ibm5035PCK
ibm5035UTF-8
FujitsuJEF-ascii-codeeucJP
FujitsuJEF-ascii-codePCK
FujitsuJEF-ascii-codeUTF-8
FujitsuJEF-kana-codeeucJP
FujitsuJEF-kana-codePCK
FujitsuJEF-kana-codeUTF-8
FujitsuJEF-ascii-faceeucJP
FujitsuJEF-ascii-facePCK
FujitsuJEF-ascii-faceUTF-8
.TE

.sp

.sp
.TS
tab() box;
lw(1.94i) |lw(3.56i) 
lw(1.94i) |lw(3.56i) 
.
Code Set Conversions Supported
_
Source CodeTarget Code
_
FujitsuJEF-kana-faceeucJP
FujitsuJEF-kana-facePCK
FujitsuJEF-kana-faceUTF-8
HitachiKEIS83eucJP
HitachiKEIS83PCK
HitachiKEIS83UTF-8
HitachiKEIS90eucJP
HitachiKEIS90PCK
HitachiKEIS90UTF-8UTF-8
NECJIPSeucJP
NECJIPSPCK
NECJIPSUTF-8
ms932"Unicode"s
eucJP-ms"Unicode"s
.TE

.sp
.LP
The descriptions of each code sets in the above table are as follows:
.sp

.sp
.TS
tab() box;
lw(1.94i) |lw(3.56i) 
lw(1.94i) |lw(3.56i) 
.
Description of Supported Code Sets
_
CodesetDescription
_
eucJPJapanese EUC
PCKPC kanji
SJISthe same as PC kanji (eol in future)
ISO-2022-JPT{
Coded representation of the character sets ISO 646 IRV or JIS X 0201, JIS X 0208, and JIS X 0212  according to  \fIUI/OSF Application Platform Profile for Japanese Environment Version 1.1 item 7.1\fR using the designation sequence to G0 specified by ISO 2022
T}
.TE

.sp

.sp
.TS
tab() box;
lw(1.94i) |lw(3.56i) 
lw(1.94i) |lw(3.56i) 
.
Description of Supported Code Sets
_
CodesetDescription
_
JIS7same as ISO-2022-JP
ISO-2022-JP.RFC1468T{
Coded representation of the character sets ISO 646 IRV or JIS X 0201-1976 (except for figure character set for katakana),  and JIS X 0208-1983 according to RFC1468 (Request for Comments: 1468 Japanese Character Encoding for Internet Messages) using the designation sequence to G0 specified by ISO 2022
T}
jisT{
JIS 7bit code used in JLE, JFP 2.4 and the preceding releases
T}
ibmjIBM Kanji code
ibmj-EBCDIKT{
Maps single-byte code set (SBCS) of IBM host code to the character set that is called the EBCDIK code set in general.  The character code set includes the IBM code page 290 and threee more characters '`' (0x79),'{' (0xc0), and \&'}' (0xd0).  Japanese katakana characters are included, but lowercase alphabet letters are not.  In case of double-byte code set (DBCS), the description is the same as the code set "ibmj."
T}
"Unicode"sThe following encoding can be specified:
UTF8, UTF-16, UTF-32, UCS-2, UCS-4
Or either Endian can be specified:
T{
Big Endian: UTF-16BE, UTF-32BE, UCS-2BE, UCS-4BE
T}
T{
Little Endian: UTF-16LE, UTF-32LE, UCS-2LE, UCS-4LE
T}
UTF-8UNI CODE in UTF-8 representation
UTF-8-JavaUNI CODE implemented in Java
.TE

.sp

.sp
.TS
tab() box;
lw(1.94i) |lw(3.56i) 
lw(1.94i) |lw(3.56i) 
.
Description of Supported Code Sets
_
CodesetDescription
_
ibm930T{
IBM CCSID 930:  SBSC code page 290 (extended), character set 1172, DBCS code page 300, character set 1001 4370 user defined characters
T}
ibm931T{
IBM CCSID 931:  SBSC code page 37, character set 101, DBCS code page 300, character set 1001  4370 user defined characters
T}
ibm939T{
IBM CCSID 930:  SBSC code page 1027, character set 1172, DBCS code page 300, character set 1001 4370 user defined characters
T}
ibm5026T{
IBM CCSID 5026:  same as ibm930, except this code set supports 1880 user defined characters
T}
ibm5035T{
IBM CCSID 5035:  same as ibm939, except this code set supports 1880 user defined characters
T}
FujitsuJEF-ascii-codeT{
Fujitsu JEF code which uses EBCDIC(ASCII) as single byte character set. Charatcters differently handled between JIS C 6226:1978 and JIS X 0208:1983 are mapped based on code value.
T}
FujitsuJEF-ascii-faceT{
Fujitsu JEF code which uses EBCDIC(ASCII) as single byte character set. Charatcters differently handled between JIS C 6226:1978 and JIS X 0208:1983 are mapped based on character face.
T}
FujitsuJEF-kana-codeT{
Fujitsu JEF code which uses EBCDIC(Kana) as single byte character set. Caratcters differently handled between JIS C 6226:1978 and JIS X 0208:1983 are mapped based on code value.
T}
FujitsuJEF-kana-faceT{
Fujitsu JEF code which uses EBCDIC(Kana) as single byte character set. Charatcters differently handled between JIS C 6226:1978 and JIS X 0208:1983 are mapped based on character face.
T}
.TE

.sp

.sp
.TS
tab() box;
lw(1.94i) |lw(3.56i) 
lw(1.94i) |lw(3.56i) 
.
Description of Supported Code Sets
_
CodesetDescription
_
HitachiKEIS8Hitachi KEIS83
HitachiKEIS90Hitachi KEIS83
NECJIPSNEC JIPS code
ms932T{
Shift JIS codeset which is supported by Windows NT 3.51. Conversion betwenn this codeset and UTF-8 is done in the same way Windows NT 3.51 does.
T}
UTF-8-ms932T{
UTF-8 encoded Unicode which was converted from ms932
T}
.TE

.sp
.LP
Conversions are performed as described below. For all conversions, if the source code set includes characters not included in the target code set, conversion and output for all such characters will be done using a substitute character.
.sp
.ne 2
.mk
.na
\fBeucJP to PCK (SJIS) and PCK (SJIS) to eucJP\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and PCK (SJIS) can be used to convert JIS X 0201, JIS X 0208, JIS X 0212, and user-defined and vendor-defined characters based on \fITOG Japanese Vendors Council (TOG/JVC) Recommended Code Set Conversion Specification\fR  between Japanese EUC and Shift-JIS. If input data which does not belong to the source code set is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBeucJP to ISO-2022-JP(JIS7) and ISO-2022-JP(JIS7) to eucJP\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and ISO-2022-JP(JIS7) can be used to convert JIS X 0201, JIS X 0208 and JIS X 0212. If input data which does not belong to the source code set is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBeucJP to ISO-2022-JP.RFC1468\fR
.ad
.sp .6
.RS 4n
Conversion from eucJP to ISO-2022-JP.RFC1468 can be used to convert JIS X 0201 (except for figure character set for katakana) and JIS X 0208. If JIS X 0201 (figure character set for katakana), JIS X 0212, a user-defined, or a vendor-defined character is encountered among input data, it will be replaced with the substitute character ` ? ' (0x3f). If input data which does not belong to these code sets is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBeucJP to jis and jis to eucJP\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and jis is provided for the compatibility with  \fBujtojis7\fR(\|) and  \fBjis7touj\fR(\|) libraries, and  \fBeuctojis\fR and jistoeuc utilities. It is extended to handle JIS X 0212. See \fBjistoeuc\fR(1). 
.RE

.sp
.ne 2
.mk
.na
\fBeucJP to "Unicode"s and "Unicode"s to eucJP\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and UTF-8  can be used to convert JIS X 0201, JIS X 0208, JIS X 0212,  a user-defined, and a vendor-defined character.  If input data which does not have the corresponding character in the target code set is encountered, it will be replaced with the substitute character (eucJP: ` ? ' (0x3f), UTF-8: U+FFFD (0xefbfbd)).  If input data which does not belong to these code sets is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBeucJP to UTF-8-Java and UTF-8-Java to eucJP\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and UTF-8-Java can be used to convert JIS X 0201, JIS X 0208, and JIS X 0212. If a user-defined or vendor-defined character is encountered among input data, it will be replaced with the substitute character (eucJP: ` ? ' (0x3f), UTF-8: U+FFFD (0xefbfbd)). If input data which does  not belong to these code sets is encountered, \fBiconv\fR(3C) will return  \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBeucJP to ibmj and ibmj to eucJP\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and ibmj is based on the IBM Kanji codebook  (4th edition - September 1987), JIS X 0201, and JIS X 0208-1983. If you convert eucJP to ibmj,  JISX 0201 and JIS X 0201 are all converted to substitute character. 
.RE

.sp
.ne 2
.mk
.na
\fBeucJP to ibmj-EBCDIK and ibmj-EBCDIK to eucJP\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and ibmj-EBCDIK is based on the IBM Kanji codebook  (4th edition - September 1987), JIS X 0201, and JIS X 0208-1983.  If you convert eucJP to ibmj-EBCDIK,  JISX 0201 and JIS X 0201 that have not correspondence characters with ibmj-EBCDIKare all converted to substitute character. 
.RE

.sp
.ne 2
.mk
.na
\fBPCK (SJIS) to ISO-2022-JP and ISO-2022-JP to PCK (SJIS)\fR
.ad
.sp .6
.RS 4n
Conversion between PCK (SJIS) and ISO-2022-JP can be used to convert JIS X 0201, JIS X 0208, JIS X 0212, and user-defined and vendor-defined characters based on \fITOG Japanese Vendors Council (TOG/JVC) Recommended Code Set Conversion Specification between Japanese EUC and Shift-JIS\fR. If input data which does not belong to the source code set is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBPCK (SJIS) to ISO-2022-JP.RFC1468\fR
.ad
.sp .6
.RS 4n
Conversion from PCK (SJIS) to ISO-2022-JP.RFC1468 can be used to convert JIS X 0201 (except for figure character set for katakana) and JIS X 0208. If JIS X 0201 (figure character set for katakana), a user-defined, or a vendor-defined character is encountered among input data, it will be replaced with the substitute character ` ? ' (0x3f). If input data which does not belong to these code sets is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBPCK (SJIS) to "Unicode"s and "Unicode"s to PCK (SJIS)\fR
.ad
.sp .6
.RS 4n
Conversion between PCK (SJIS) and UTF-8 can be used to convert JIS X 0201, JIS X 0208, a user-defined, and a vendor-defined character. If input data which does not have the corresponding character in the target code set is encountered, it will be replaced with the substitute character (PCK: ` ? ' (0x3f), UTF-8: U+FFFD (0xefbfbd)). If input data which does not belong to these code sets is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBPCK (SJIS) to UTF-8-Java and UTF-8-Java to PCK (SJIS)\fR
.ad
.sp .6
.RS 4n
Conversion between PCK (SJIS) and UTF-8-Java can be used to convert JIS X 0201 and JIS X 0208. If a user-defined or vendor-defined character is encountered among input data, it will be replaced with the substitute character (PCK: ` ? ' (0x3f), UTF-8: U+FFFD (0xefbfbd)). If input data which does not belong to these code sets is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBPCK (SJIS) to jis and jis to PCK (SJIS)\fR
.ad
.sp .6
.RS 4n
Conversion between PCK (SJIS) and jis is provided for the compatibility with \fBsjtojis7\fR(\|) and \fBjis7tosj\fR(\|) libraries , and \fBsjtojis\fR \fBjistosj\fR utilities. It is extended besed on \fITOG Japanese Vendors Council (TOG/JVC) Recommended Code Set Conversion Specification between Japanese EUC and Shift-JIS\fR. See \fBjistosj\fR(1). 
.RE

.sp
.ne 2
.mk
.na
\fBPCK (SJIS) to ibmj and ibmj to PCK (SJIS)\fR
.ad
.sp .6
.RS 4n
Conversion between PCK (SJIS) and ibmj is based on the IBM Kanji codebook  (4th edition - September 1987), JIS X 0201, and JIS X 0208-1983. If you convert PCK (SJIS) to ibmj, all characters converted to JIS X 0212 by kana characters (0xa1 to 0xdf) and \fITOG Japanese Vendors Council (TOG/JVC) Recommended Code Set Conversion Specification between Japanese EUC and Shift-JIS\fR are all converted to substitute character. 
.RE

.sp
.ne 2
.mk
.na
\fBPCK to ibmj-EBCDIK and ibmj-EBCDIK to PCK\fR
.ad
.sp .6
.RS 4n
Conversion between PCK and ibmj-EBCDIK is based on the IBM Kanji codebook  (4th edition - September 1987), JIS X 0201, and JIS X 0208-1983. If you convert PCK to ibmj-EBCDIK, all characters converted to JIS X 0212 by JIS X 0212 and \fITOG Japanese Vendors Council (TOG/JVC) Recommended Code Set Conversion Specification between Japanese EUC and Shift-JIS\fR are all converted to substitute character. 
.RE

.sp
.ne 2
.mk
.na
\fBISO-2022-JP to UTF-8 and UTF-8 to ISO-2022-JP\fR
.ad
.sp .6
.RS 4n
Conversion between ISO-2022-JP and UTF-8 can be used to convert JIS X 0201, JIS X 0208, JIS X 0212, and user-defined and vendor-defined characters. If input data which does not have the corresponding character in the target code set is encountered, it will be replaced with the substitute character (ISO-2022-JP: ` ? ' (0x3f), UTF-8: U+FFFD (0xefbfbd)). If input data which does not belong to these code sets is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBUTF-8 to ISO-2022-JP.RFC1468\fR
.ad
.sp .6
.RS 4n
Conversion from UTF-8 to ISO-2022-JP.RFC1468 can be used to convert JIS X 0201 (except for figure character set for katakana) and JIS X 0208. If JIS X 0201 (figure character set for katakana), JIS X 0212, a user-defined, or a vendor-defined character is encountered among input data, it will be replaced with the substitute character ` ? ' (0x3f). If input data which does not belong to these code sets is encountered, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBeucJP, PCK, UTF-8 to ibm930, ibm931, ibm939, ibm5026, ibm5035\fR
.ad
.sp .6
.RS 4n
Conversion from eucJP, PCK, or UTF-8 to ibm930, ibm931, ibm939, ibm5026, ibm5035 can be used to convert characters defined in input code set. DBCS code page 300 and character set 1001 (CGCSGID 01001 00300) referenced in this release supports characters in JIS X 0208, IBM extension characters, and user defined characters. Any character which does not have corresponding character in the target code set is replaced with the substitute character. Since ibm931 does not support Kana characters in its single byte code set (SBCS), JIS X 0201 Kana characters are replaced with substitute characters in conversion to ibm931.
.RE

.sp
.ne 2
.mk
.na
\fBibm930, ibm931, ibm939, ibm5026, or ibm5035 to eucJP, PCK, or UTF-8\fR
.ad
.sp .6
.RS 4n
Conversion from ibm930, ibm931, ibm939, ibm5026, or ibm5035 to eucJP, PCK, or UTF-8 can be used to convert SBCS/DBCS characters defined in input code set. As described above, CGCSGID 01001 00300 referenced in this release supports characters in JIS X 0208, IBM extension characters, and user defined characters. Any character which does not have corresponding character in the target code set is replaced with the substitute character. And also, the range of the 1st byte of CGCSGID 01001 00300 is from 40 to 7F in hexadecimal. When the 1st byte is out of that range, \fBiconv\fR(3C) will return \fBEILSEQ\fR for \fBerrno\fR. \fBiconv\fR(1) stops at the last point of successful conversion.
.RE

.sp
.ne 2
.mk
.na
\fBFujitsuJEF-ascii-code or FujitsuJEF-kana-code to eucJP, PCK, or UTF-8: eucJP, PCK, or UTF-8 to FujitsuJEF-ascii-code or FujitsuJEF-kana-code\fR
.ad
.sp .6
.RS 4n
Conversion from FujitsuJEF-ascii-code or FujitsuJEF-kana-code to eucJP, PCK, or UTF-8 and eucJP, PCK, or UTF-8 to FujitsuJEF-ascii-code or FujitsuJEF-kana-code can be used to convert JIS X 0201, JIS X 0208, and JIS X 0212 characters defined in input code set. Input data which does not have corresponding character in the target code set is replaced with the substitude character. Characters handled differently between JIS C 6226:1978 and JIS X 0208:1983 are converted based on code value. In conversion to FujitsuJEF-kana-code, JIS X 0201 Katakana characters are replaced with the substitute character.
.RE

.sp
.ne 2
.mk
.na
\fBFujitsuJEF-ascii-face or FujitsuJEF-kana-face to eucJP, PCK, or UTF-8: eucJP, PCK, UTF-8 to FujitsuJEF-ascii-face or FujitsuJEF-kana-face\fR
.ad
.sp .6
.RS 4n
Characters handled differently between JIS C 6226:1978 and JIS X 0208:1983 are converted based on character face. Other behavior is same as that of FujitsuJEF-ascii-code or FujitsuJEF-kana-code.
.RE

.sp
.ne 2
.mk
.na
\fBHitachiKEIS83 to eucJP, PCK, or UTF-8: eucJP, PCK, UTF-8 to HitachiKEIS83\fR
.ad
.sp .6
.RS 4n
Conversion from HitachiKEIS83 to eucJP, PCK, or UTF-8 and from eucJP, PCK, UTF-8 to HitachiKEIS83 can be used to convert JIS X 0201, JIS X 0208, and JIS X 0212 characters. Input data which does not have corresponding character in the target code set is replaced with the substitude character. 
.RE

.sp
.ne 2
.mk
.na
\fBHitachiKEIS90 to eucJP, PCK, or UTF-8: eucJP, PCK, or UTF-8 to HitachiKEIS90\fR
.ad
.sp .6
.RS 4n
Behavior of conversion from HitachiKEIS90 to eucJP, PCK, or UTF-8 and from eucJP, PCK, or UTF-8 to HitachiKEIS90 is  same as that of KEIS83 except that this conversion uses KEIS90 instead of KEIS83.
.RE

.sp
.ne 2
.mk
.na
\fBNECJIPS to eucJP, PCK, or UTF-8: eucJP, PCK, or UTF-8 to NECJIPS\fR
.ad
.sp .6
.RS 4n
Conversion from NECJIPS to eucJP, PCK, or UTF-8 and eucJP, PCK, or UTF-8 to NECJIPS can be used to convert JIS X 0201, JIS X 0208, and JIS X 0212 characters. Input data which does not have corresponding character in the target code set is replaced with the substitude character. EBCDIC Katakana (EK) code is used for single byte character set.
.RE

.sp
.ne 2
.mk
.na
\fBms932 to "Unicode"s and "Unicode"s to ms932\fR
.ad
.sp .6
.RS 4n
Conversion between ms932 and UTF-8 is done using same way of mapping characters between the two codesets as Windows NT 3.51 does.
.RE

.sp
.ne 2
.mk
.na
\fBeucJP-ms to "Unicode"s and "Unicode"s to eucJP-ms\fR
.ad
.sp .6
.RS 4n
Conversion between eucJP and Unicodes is done using same way of mapping characters between the two codesets as Windows NT 3.51 does.
.RE

.sp
.ne 2
.mk
.na
\fBUTF-8 to UTF-8-ms932 and UTF-8-ms932 to UTF-8\fR
.ad
.sp .6
.RS 4n
This converts between  "UTF-8" and "UTF-8-ms932", which are UTF-8 encoded Unicode converted from PCK, and that converted from ms932.
.RE

.SH SEE ALSO
.sp
.LP
\fBiconv\fR(1), \fBjistoeuc\fR(1), \fBjistosj\fR(1), \fBiconv\fR(3C), \fBiconv\fR(5), \fBiconv_unicode\fR(5) 
