'\" te
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Portions Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material.
.TH y0 3M "12 Jul 2006" "SunOS 5.11" "Mathematical Library Functions"
.SH NAME
y0, y0f, y0l, y1, y1f, y1l, yn, ynf, ynl \- Bessel functions of the second kind
.SH SYNOPSIS
.LP
.nf
c99 [ \fIflag\fR... ] \fIfile\fR... \fB-lm\fR [ \fIlibrary\fR... ]
#include <math.h>

\fBdouble\fR \fBy0\fR(\fBdouble\fR \fIx\fR);
.fi

.LP
.nf
\fBfloat\fR \fBy0f\fR(\fBfloat\fR \fIx\fR);
.fi

.LP
.nf
\fBlong double\fR \fBy0l\fR(\fBlong double\fR \fIx\fR);
.fi

.LP
.nf
\fBdouble\fR \fBy1\fR(\fBdouble\fR \fIx\fR);
.fi

.LP
.nf
\fBfloat\fR \fBy1f\fR(\fBfloat\fR \fIx\fR);
.fi

.LP
.nf
\fBlong double\fR \fBy1l\fR(\fBlong double\fR \fIx\fR);
.fi

.LP
.nf
\fBdouble\fR \fByn\fR(\fBint\fR \fIn\fR, \fBdouble\fR \fIx\fR);
.fi

.LP
.nf
\fBfloat\fR \fBynf\fR(\fBint\fR \fIn\fR, \fBfloat\fR \fIx\fR);
.fi

.LP
.nf
\fBlong double\fR \fBynl\fR(\fBint\fR \fIn\fR, \fBlong double\fR \fIx\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions compute Bessel functions of \fIx\fR of the second kind of orders 0, 1 and \fIn\fR, respectively.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return the relevant Bessel value of \fIx\fR of the second kind.
.sp
.LP
If \fIx\fR is NaN, a NaN is returned.
.sp
.LP
If \fIx\fR is negative, \(mi\fBHUGE_VAL\fR or NaN is returned.
.sp
.LP
If \fIx\fR is 0.0, \(mi\fBHUGE_VAL\fR is returned.
.sp
.LP
If the correct result would cause overflow, \(mi\fBHUGE_VAL\fR is returned.
.sp
.LP
For exceptional cases, \fBmatherr\fR(3M) tabulates the values to be returned as specified by SVID3 and XPG3.
.SH ERRORS
.sp
.LP
No errors are returned.
.SH USAGE
.sp
.LP
An application wanting to check for exceptions should call \fBfeclearexcept\fR(\fBFE_ALL_EXCEPT\fR) before calling these functions. On return, if \fBfetestexcept\fR(\fBFE_INVALID\fR | \fBFE_DIVBYZERO\fR | \fBFE_OVERFLOW\fR | \fBFE_UNDERFLOW\fR) is non-zero, an exception has been raised. An application should either examine the return value or check the floating point exception flags to detect exceptions.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee below.
.TE

.sp
.LP
For \fBy0()\fR, \fBy1()\fR, and \fByn()\fR, see \fBstandards\fR(5)
.SH SEE ALSO
.sp
.LP
\fBisnan\fR(3M), \fBfeclearexcept\fR(3M), \fBfetestexcept\fR(3M), \fBj0\fR(3M), \fBmath.h\fR(3HEAD), \fBmatherr\fR(3M), \fBattributes\fR(5), \fBstandards\fR(5)
