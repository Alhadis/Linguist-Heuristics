'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 1980 Regents of the University of California
.\" Copyright (c) 2001, 2012, Oracle and/or its affiliates.All rights reserved.
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation.Original documentation from The Open Group can be obtained online at http://www.opengroup.org/bookstore/. 
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation.In the following statement, the phrase "this text" refers to portions of the system documentation.Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document.The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.This notice shall appear on any product containing this material. 
.TH ctags 1 "2011 年 6 月 8 日" "SunOS 5.11" "用户命令"
.SH 名称
ctags \- 创建用于 ex 和 vi 的标记文件
.SH 用法概要
.LP
.nf
\fB/usr/bin/ctags\fR [\fB-aBFtuvwx\fR] [\fB-f\fR \fItagsfile\fR] \fIfile\fR...
.fi

.LP
.nf
\fB/usr/xpg4/bin/ctags\fR [\fB-aBFuvwx\fR] [\fB-f\fR \fItagsfile\fR] \fIfile\fR...
.fi

.SH 描述
.sp
.LP
\fBctags\fR 实用程序基于指定的 C、C++、Pascal、FORTRAN、\fByacc\fR(1) 和 \fBlex\fR(1) 资源为 \fBex\fR(1) 创建标记文件。标记文件给出指定对象（在本例中为函数和 typedef）在一组文件中的位置。标记文件的每一行都包含对象名称、定义了该对象的文件以及该对象定义的地址指定。函数将通过模式进行搜索，typedef 将通过行号进行搜索。说明符是在行上的各个字段中指定的，由 SPACE 或 TAB 字符分隔。使用标记文件，\fBex\fR 可以快速查找这些对象的定义。
.sp
.LP
通常情况下，\fBctags\fR 将标记说明放置在一个名为 \fBtags\fR 的文件中；可以使用 \fB-f\fR 选项覆盖此行为。
.sp
.LP
名称以 \fB\&.c\fR 或 \fB\&.h\fR 结尾的文件将被认为是 C 或 C++ 源文件并将在其中搜索 C/C++ 例程和宏定义。名称以 \fB\&.cc\fR、\fB .C\fR 或 \fB\&.cxx\fR 结尾的文件将被认为是 C++ 源文件。名称以 \fB\&.y\fR 结尾的文件将被认为是 \fByacc\fR 源文件。名称以 \fB\&.l\fR 结尾的文件将被认为是 \fBlex\fR 文件。对于其他文件，则会首先检查它们是否包含任何 Pascal 或 \fBFORTRAN\fR 例程定义；如果未包含，则会再次对其进行处理以查找 C 定义。
.sp
.LP
在 C 或 C++ 程序中，标记 \fBmain\fR 将被特殊对待。构成的标记是通过以下方式创建的：将 \fBM\fR 附加到 \fIfile\fR 之前，并删除结尾 \fB\&.c\fR、\fB\&.cc\fR、\fB\&.C\fR 或 \fB\&.cxx\fR（如果有），还将删除前导路径名组件。这使得 \fBctags\fR 可以在具有多个程序的目录中使用。
.SH 选项
.sp
.LP
与输出相关的选项的优先顺序是：\fB-x\fR、\fB-v\fR，然后是其余的选项。支持以下选项：
.sp
.ne 2
.mk
.na
\fB\fB-a\fR\fR
.ad
.RS 15n
.rt  
将输出附加到现有的 \fBtags\fR 文件。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-B\fR\fR
.ad
.RS 15n
.rt  
使用后向搜索模式 (\fB?\fR. . . \fB ?\fR).
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fItagsfile\fR\fR
.ad
.RS 15n
.rt  
将标记说明放置在名为 \fItagsfile\fR 而非 \fBtags\fR 的文件中。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-F\fR\fR
.ad
.RS 15n
.rt  
使用前向搜索模式 (\fB/\fR. . . \fB /\fR)（缺省值）。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR\fR
.ad
.RS 15n
.rt  
为 typedef 创建标记。\fB/usr/xpg4/bin/ctags\fR 缺省情况下为 typedef 创建标记。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.RS 15n
.rt  
在标记中更新指定的文件，也就是说，将删除对它们的所有引用，并且将新值附加到文件。注意：此选项是以一种相当慢的方式实现的；仅重新生成 \fBtags\fR 文件通常更快。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 15n
.rt  
在标准输出上生成索引，列出函数名称、文件名称和页号（采用 64 行页面）。因为输出按词典顺序排序，所以通过 \fBsort\fR \fB-f\fR 运行输出可能更可取。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-w\fR\fR
.ad
.RS 15n
.rt  
禁止警告诊断消息。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR\fR
.ad
.RS 15n
.rt  
生成对象名称列表、定义了每个名称的行号和文件名，以及该行的文本，并在标准输出上输出该信息。这是可输出为脱机可读取函数索引的一个简单索引。
.RE

.SH 操作数
.sp
.LP
支持以下 \fIfile\fR 操作数：
.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fB\&.c\fR\fR
.ad
.RS 12n
.rt  
基名以 \fB\&.c\fR 后缀结尾的文件将被视为 C 语言源代码。
.RE

.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fB\&.h\fR\fR
.ad
.RS 12n
.rt  
基名以 \fB\&.h\fR 后缀结尾的文件将被视为 C 语言源代码。
.RE

.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fB\&.f\fR\fR
.ad
.RS 12n
.rt  
基名以 \fB\&.f\fR 后缀结尾的文件将被视为 FORTRAN 语言源代码。
.RE

.SH 示例
.LP
\fB示例 1 \fR按字母顺序生成条目
.sp
.LP
将 \fBctags\fR 与 \fB-v\fR 选项一起使用将按可能不是始终适合 \fBvgrind\fR 的某种顺序生成条目。要按字母顺序生成结果，您可能需要通过 \fB sort\fR \fB-f\fR 运行输出。

.sp
.in +2
.nf
example% \fBctags -v filename.c filename.h | sort -f \|>\| index\fR
example% \fBvgrind -x index\fR
.fi
.in -2
.sp

.LP
\fB示例 2 \fR构建标记文件
.sp
.LP
要为根目录为 \fIsourcedir\fR 的目录分层结构中的 C 源文件构建标记文件，请首先创建一个空的标记文件，然后运行 \fBfind\fR(1)。

.sp
.in +2
.nf
example% \fBcd \fIsourcedir\fR ; rm -f tags ; touch tags\fR
example% \fBfind . \e( -name SCCS -prune -name \e\e
       '*.c' -o -name '*.h' \e) -exec ctags -u {} \e;\fR
.fi
.in -2
.sp

.sp
.LP
请注意，必须严格按照示例所示输入空格。

.SH 环境变量
.sp
.LP
有关影响 \fBctags\fR 执行的以下环境变量的说明，请参见 \fBenviron\fR(5)：\fBLANG\fR、\fBLC_ALL\fR、\fBLC_COLLATE\fR、\fBLC_CTYPE\fR、\fBLC_MESSAGES\fR 和 \fBNLSPATH\fR。
.SH 退出状态
.sp
.LP
将返回以下退出值：
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
成功完成。
.RE

.sp
.ne 2
.mk
.na
\fB\fB>0\fR\fR
.ad
.RS 6n
.rt  
出现错误。
.RE

.SH 文件
.sp
.ne 2
.mk
.na
\fB\fBtags\fR\fR
.ad
.RS 8n
.rt  
输出标记文件
.RE

.SH 属性
.sp
.LP
有关下列属性的说明，请参见 \fBattributes\fR(5)：
.SS "/usr/bin/ctags"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
可用性developer/base-developer-utilities
.TE

.SS "/usr/xpg4/bin/ctags"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
可用性system/xopen/xcu4
_
接口稳定性Committed（已确定）
_
标准请参见 \fBstandards\fR(5)。
.TE

.SH 另请参见
.sp
.LP
\fBex\fR(1)、\fBlex\fR(1)、\fBvgrind\fR(1)、\fBvi\fR(1)、\fByacc\fR(1)、\fBattributes\fR(5)、\fBenviron\fR(5)、\fBstandards\fR(5)
.SH 附注
.sp
.LP
对于 \fBFORTRAN\fR 和 Pascal，对\fB函数\fR、\fB子例程\fR和\fB过程\fR的识别是以一种非常简单的方式执行的。不会尝试处理块结构；如果在不同的块中有同名的两个 Pascal 过程，则会失败。
.sp
.LP
用于确定是查找 C 函数还是查找 Pascal 和 \fBFORTRAN\fR 函数的方法是 hack。
.sp
.LP
\fBctags\fR 实用程序不了解有关 \fB#ifdefs\fR 的信息。
.sp
.LP
\fBctags\fR 实用程序应当了解 Pascal 类型。要检测 typedef，需要依赖格式良好的输入。使用 \fB-tx\fR 将仅显示 typedef 的最后一行。
