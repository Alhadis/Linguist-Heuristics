'\" te
.\" Copyright 1989 AT&T Copyright (c)
.\" Copyright (c) 2008, 2012, Oracle and/or its affiliates.All rights reserved.
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation.Original documentation from The Open Group can be obtained online at http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation.In the following statement, the phrase "this text" refers to portions of the system documentation.Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document.The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.This notice shall appear on any product containing this material. 
.TH find 1 "2012 年 3 月 5 日" "SunOS 5.11" "用户命令"
.SH 名称
find \- 查找文件
.SH 用法概要
.LP
.nf
\fB/usr/bin/find\fR [\fB-H\fR | \fB-L\fR] \fIpath\fR... \fIexpression\fR
.fi

.LP
.nf
\fB/usr/xpg4/bin/find\fR [\fB-H\fR | \fB-L\fR] \fIpath\fR... \fIexpression\fR
.fi

.SH 描述
.sp
.LP
\fBfind\fR 实用程序将以递归方式向下搜索目录分层结构的每个 \fIpath\fR，查找与使用下面指定的主要元素编写的布尔型 \fIexpression\fR 相匹配的文件。
.sp
.LP
\fBfind\fR 能够向下搜索任意深度的文件分层结构而不会由于路径长度限制而失败，除非应用程序指定的 \fIpath\fR 操作数超出 \fIPATH_MAX\fR 要求。
.sp
.LP
\fBfind\fR 可检测死循环，也即，进入了一个先前访问过的目录，该目录是所遇到的上一文件的祖先。 
.SH 选项
.sp
.LP
支持以下选项：
.sp
.ne 2
.mk
.na
\fB\fB-H\fR\fR
.ad
.RS 6n
.rt  
使得针对命令行中出现的每个符号链接所计算出的文件信息和文件类型归属于链接所引用的文件，而不是链接本身。如果引用的文件不存在，则文件信息和类型用于链接本身。未含在命令行中的所有符号链接的文件信息均属于链接本身。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-L\fR\fR
.ad
.RS 6n
.rt  
使得针对每个符号链接所计算出的文件信息和文件类型归属于链接所引用的文件，而不是链接本身。请参见\fB\fR“附注”部分。
.RE

.sp
.LP
指定多个 \fB-H\fR 和 \fB-L\fR 互斥选项不会被视为错误。指定的最后一个选项将决定实用程序的行为。
.SH 操作数
.sp
.LP
支持下列操作数：
.sp
.ne 2
.mk
.na
\fB\fIpath\fR\fR
.ad
.RS 14n
.rt  
目录分层结构中起点的路径名。
.RE

.sp
.ne 2
.mk
.na
\fB\fIexpression\fR\fR
.ad
.RS 14n
.rt  
以 \fB-\fR 开头的或者为 \fB!\fR 或 \fB(\fR 的第一个参数与所有后续参数均被解释为 \fIexpression\fR，由以下主要元素和操作数组成。具体来讲，只要 \fIn\fR 用作主参数，就会被解释为十进制整数，可以选择在其前面添加加号 (\fB+\fR) 或减号 (\fB-\fR)，如下所示：
.sp
.ne 2
.mk
.na
\fB+\fIn\fR\fR
.ad
.RS 6n
.rt  
大于 \fIn\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fIn\fR\fR
.ad
.RS 6n
.rt  
正好等于 \fIn\fR
.RE

.sp
.ne 2
.mk
.na
\fB-\fIn\fR\fR
.ad
.RS 6n
.rt  
小于 \fIn\fR
.RE

.RE

.SS "表达式"
.sp
.LP
有效表达式包括：
.sp
.ne 2
.mk
.na
\fB\fB-acl\fR\fR
.ad
.RS 18n
.rt  
如果文件定义了其他 ACL，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-amin\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
文件的上次访问是在 \fIn\fR 分钟之前。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-atime\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
如果于 \fIn\fR 天之前访问了文件，则为 True。对 \fIpath\fR 中目录的访问时间由 \fBfind\fR 自身进行更改。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-cmin\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
文件状态的上次更改是在 \fIn\fR 分钟之前。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-cpio\fR \fIdevice\fR\fR
.ad
.RS 18n
.rt  
始终为 True。以 \fBcpio\fR 格式（记录大小为 5120 字节）在 \fIdevice\fR 上编写当前文件。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-ctime\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
如果已于 \fIn\fR 天之前更改了文件状态，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-depth\fR\fR
.ad
.RS 18n
.rt  
始终为 True。可对目录分层结构执行向下搜索，以便在处理目录本身之前先处理其中的所有条目。在将 \fBfind\fR 与 \fBcpio\fR(1) 结合使用以传输无写入权限的目录中包含的文件时，这会很有用。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-exec\fR \fIcommand\fR\fR
.ad
.RS 18n
.rt  
如果执行的命令返回零值作为退出状态，则为 True。命令的结尾必须添加转义的分号 (\fB;\fR)。命令参数 \fB{}\fR 将替换为当前路径名。如果 \fB-exec\fR 的最后一个参数为 \fB{}\fR 且指定的是 \fB+\fR 而不是分号 (\fB;\fR)，则调用该命令的次数会较少，且 \fB{}\fR 会替换为路径名组。如果对该命令的任何调用返回了非零值作为退出状态，则 find 也会返回非零值的退出状态。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-follow\fR\fR
.ad
.RS 18n
.rt  
不管出现在 \fIexpression\fR 的何处，都将始终为 True 且始终进行计算。如果在调用带 \fB-H\fR 或 \fB-L\fR 选项的 \fBfind\fR 命令时使用 \fB-follow\fR，则行为是不明确的。这可导致跟随符号链接。在跟随符号链接时，\fBfind\fR 将跟踪记录访问过的目录，以便检测死循环。例如，如果符号链接指向祖先，则会发生此类死循环。该表达式不应与查找类型 \fBl\fR 表达式一起使用。请参见\fB\fR“附注”部分。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-fstype\fR \fItype\fR\fR
.ad
.RS 18n
.rt  
如果文件所属的文件系统类型为 \fItype\fR，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-group\fR \fIgname\fR\fR
.ad
.RS 18n
.rt  
如果文件属于名为 \fIgname\fR 的组，则为 True。如果 \fIgname\fR 是个数字且未出现在 \fBgroup\fR(4) 数据库中，则其被认为是组 \fBID\fR。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-iname\fR \fIpattern\fR\fR
.ad
.RS 18n
.rt  
与 \fB-name\fR 类似，但模式与当前文件名的基名之间进行匹配时不区分大小写。（请参见\fB\fR“示例”部分）。与 \fB-name\fR 选项不同的是，对于 \fB/usr/bin/find\fR 和 \fB/usr/xpg4/bin/find\fR，对前导句点没有特殊处理且通配符文件名生成字符可以与以 \fB\&.\fR 开头的文件名进行匹配。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-inum\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
如果文件具有 inode 编号 \fIn\fR，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-links\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
如果文件具有 \fIn\fR 个链接，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-local\fR\fR
.ad
.RS 18n
.rt  
如果文件系统类型不是 \fB/etc/dfs/fstypes\fR 文件中定义的一个远程文件系统类型，则为 True。如果 \fB/etc/dfs/fstypes\fR 文件不存在，则 \fBnfs\fR 会用作缺省远程文件系统类型。\fB-local\fR 选项可向下搜索非本地目录的分层结构。有关如何以非向下方式搜索本地文件的示例，请参见\fB\fR“示例”部分。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-ls\fR\fR
.ad
.RS 18n
.rt  
始终为 True。列显当前路径名及其关联的统计信息。这些信息包括（分别）：
.RS +4
.TP
.ie t \(bu
.el o
inode 编号
.RE
.RS +4
.TP
.ie t \(bu
.el o
以千字节（1024 字节）为单位的大小
.RE
.RS +4
.TP
.ie t \(bu
.el o
保护模式
.RE
.RS +4
.TP
.ie t \(bu
.el o
硬链接数
.RE
.RS +4
.TP
.ie t \(bu
.el o
用户
.RE
.RS +4
.TP
.ie t \(bu
.el o
组
.RE
.RS +4
.TP
.ie t \(bu
.el o
大小，以字节为单位
.RE
.RS +4
.TP
.ie t \(bu
.el o
修改时间。
.RE
如果文件是一个特殊文件，则大小字段将改为包含主设备号和从设备号。
.sp
如果文件是一个符号链接，则列显所链接文件的路径名，路径名前面加上 `\fB->\fR'。格式与 \fBls\fR \fB-gilds\fR 的格式相同（请参见 \fBls\fR(1B)）。 
.sp
格式设置操作将在内部完成，无需执行 \fBls\fR 程序。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-mmin\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
文件数据的上次修改是在 \fIn\fR 分钟之前。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-mount\fR\fR
.ad
.RS 18n
.rt  
始终为 True。将搜索范围限定于包含指定目录的文件系统。不会列出其他文件系统的挂载点。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-mtime\fR \fIn\fR\fR
.ad
.RS 18n
.rt  
如果已于 \fIn\fR 天之前修改了文件数据，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-name\fR \fIpattern\fR\fR
.ad
.RS 18n
.rt  
如果 \fIpattern\fR 匹配当前文件名的基名，则为 True。可使用普通的 shell 文件名生成字符（请参见 \fBsh\fR(1)）。在模式中使用反斜杠 (\fB \ \fR) 作为转义符。从 shell 调用 \fBfind\fR 时，应对模式进行转义或加上引号。
.sp
在使用 \fB/usr/bin/find\fR 时，除非在 \fIpattern\fR 的开头显式指定了字符 '\fB\&.\fR'，否则以 '\fB\&.\fR' 开头的当前文件名不会与 \fIpattern\fR 进行匹配。\fB/usr/xpg4/bin/find\fR 不会对此进行区分；通配符文件名字符可以与以 '\fB\&.\fR' 开头的文件名进行匹配。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-ncpio\fR \fIdevice\fR\fR
.ad
.RS 18n
.rt  
始终为 True。以 \fBcpio\fR \fB-c\fR 格式（记录大小为 5120 字节）在 \fIdevice\fR 上编写当前文件。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-newer\fR \fIfile\fR\fR
.ad
.RS 18n
.rt  
如果当前文件的最近修改时间晚于参数 \fIfile\fR 的时间，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-nogroup\fR\fR
.ad
.RS 18n
.rt  
如果文件所属的组不位于 \fBgroup\fR(4) 数据库中，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-nouser\fR\fR
.ad
.RS 18n
.rt  
如果文件所属的用户不位于 \fBpasswd\fR(4) 数据库中，则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-ok\fR \fIcommand\fR\fR
.ad
.RS 18n
.rt  
与 \fB-exec\fR 类似，区别在于生成的命令行在开头列显有问号且仅在得到肯定性响应时才执行。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-perm\fR [\fB-\fR]\fImode\fR\fR
.ad
.RS 18n
.rt  
\fImode\fR 参数用于表示文件模式位。在格式上，它与 \fBchmod\fR(1) 中所述的符号模式操作数 \fIsymbolic_mode_list\fR 相同，且如下进行解释。开始时，假设模板中的所有文件模式位已清除。\fIop\fR 符号为：
.sp
.ne 2
.mk
.na
\fB\fB+\fR\fR
.ad
.RS 5n
.rt  
在模板中设置相应的模式位
.RE

.sp
.ne 2
.mk
.na
\fB\fB-\fR\fR
.ad
.RS 5n
.rt  
清除相应位
.RE

.sp
.ne 2
.mk
.na
\fB\fB=\fR\fR
.ad
.RS 5n
.rt  
设置相应的模式位，且不考虑进程的文件模式创建掩码的内容
.RE

\fIop\fR 符号 \fB-\fR 不能为 \fImode\fR 的第一个字符，以避免可能将其误认为前导连字符。因为初始模式是禁用所有位，所以不存在需要使用 \fB-\fR 作为第一个字符的符号模式。
.sp
如果忽略连字符，则在文件权限位完全匹配所生成的模板的值时，主表达式将计算为 True。
.sp
否则，如果 \fImode\fR 的前缀为连字符，则至少在文件权限位中设置所生成的模板的所有位时，主表达式才会计算为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-perm\fR [\fB-\fR]\fIonum\fR\fR
.ad
.RS 18n
.rt  
如果文件权限标志完全匹配八进制数字 \fIonum\fR，则为 True（请参见 \fBchmod\fR(1)）。如果 \fIonum\fR 的前缀为减号 (\fB-\fR)，则仅将 \fIonum\fR 中设置的位与文件权限标志进行比较，如果匹配，则表达式会计算为 True。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-print\fR\fR
.ad
.RS 18n
.rt  
始终为 True。可列显当前路径名。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-print0\fR\fR
.ad
.RS 18n
.rt  
始终为 True。使列显的当前路径名后跟空字符，而不是 \fB-print\fR 使用的换行符。 
.sp
通过此表达式，处理 \fBfind\fR 输出的程序可正确解释包含换行符或其他类型的空格的文件名。此选项对应于 \fBcpio\fR 和 \fBxargs\fR 的 \fB-0\fR 选项。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-prune\fR\fR
.ad
.RS 18n
.rt  
始终为 True。只要 \fIpattern\fR 匹配，就不会检查目录结构中的任何目录或文件。（请参见“示例”部分）。如果指定 \fB-depth\fR，则 \fB-prune\fR 不再有效。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-size\fR \fIn\fR[\fBc\fR]\fR
.ad
.RS 18n
.rt  
如果文件的长度为 \fIn\fR 个块（每个块 512 个字节），则为 True。如果 \fIn\fR 后面跟 \fBc\fR，则大小以字节为单位。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-type\fR \fIc\fR\fR
.ad
.RS 18n
.rt  
如果文件的类型为 \fIc\fR，则为 True，其中 \fIc\fR 为 \fBb\fR、\fBc\fR、\fBd\fR、\fBD\fR、\fBf\fR、\fBl\fR、\fBp\fR 或 \fBs\fR，分别代表块特殊文件、字符特殊文件、目录、门文件、纯文本文件、符号链接、fifo（命名管道）或套接字。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-user\fR \fIuname\fR\fR
.ad
.RS 18n
.rt  
如果文件属于用户 \fIuname\fR，则为 True。如果 \fIuname\fR 是数字且未作为登录名出现在 \fBpasswd\fR(4) 数据库中，则认为其是用户 \fBID\fR。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-xdev\fR\fR
.ad
.RS 18n
.rt  
与 \fB-mount\fR 主参数相同。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-xattr\fR\fR
.ad
.RS 18n
.rt  
如果文件具有扩展属性，则为 True。
.RE

.SS "复杂表达式"
.sp
.LP
使用以下操作数可以组合主表达式（按优先级递减顺序）：
.sp
.ne 2
.mk
.na
\fB1)\fB(\fR\fIexpression\fR\fB)\fR\fR
.ad
.sp .6
.RS 4n
如果带有括号的表达式为 True（括号对 shell 有特殊含义，必须进行转义），则为 True。
.RE

.sp
.ne 2
.mk
.na
\fB2)\fB!\fR\fIexpression\fR\fR
.ad
.sp .6
.RS 4n
主表达式的否定（\fB!\fR 是一元 \fInot\fR 运算符）。
.RE

.sp
.ne 2
.mk
.na
\fB3) \fIexpression\fR\fB[\fR\fB-a\fR\fB]\fR \fIexpression\fR\fR
.ad
.sp .6
.RS 4n
主表达式的串联（通过两个并列的主表达式来暗示 \fIand\fR 运算）。
.RE

.sp
.ne 2
.mk
.na
\fB4) \fIexpression\fR\fB\fR\fB-o\fR\fIexpression\fR\fR
.ad
.sp .6
.RS 4n
主表达式的备选项（\fB-o\fR 是 \fIor\fR 运算符）。
.RE

.sp
.LP
在将 \fBfind\fR 与 \fBcpio\fR 结合使用时，如果将 \fB-L\fR 选项与 \fBcpio\fR 一起使用，则必须将 \fB-L\fR 选项或 \fB-follow\fR 基元与 \fBfind\fR 一起使用，反之亦然。否则，会产生意外的结果。
.sp
.LP
如果不存在 \fIexpression\fR，则会将 \fB-print\fR 用作表达式。否则，如果指定的表达式不包含任何 \fB-exec\fR、\fB-ok\fR、\fB-ls\fR 或 \fB-print\fR 主表达式，则指定的表达式事实上会由以下项代替：
.sp
.LP
(\fIspecified\fR) \fB-print\fR
.sp
.LP
\fB-user\fR、\fB-group\fR 和 \fB-newer\fR 主表达式每个仅计算一次其各自的参数。调用 \fB-exec\fR 或 \fB-ok\fR 指定的 \fIcommand\fR 不会影响同一文件中的后续主表达式。
.SH 用法
.sp
.LP
有关 \fBfind\fR 遇到大于或等于 2 GB（2^31 字节）文件时行为的说明，请参见 \fBlargefile\fR(5)。
.SH 示例
.LP
\fB示例 1 \fR写出分层结构目录
.sp
.LP
以下命令是等效的：

.sp
.in +2
.nf
example% \fBfind .\fR
example% \fBfind . -print\fR
.fi
.in -2
.sp

.sp
.LP
它们均会写出当前目录的整个目录分层结构。

.LP
\fB示例 2 \fR删除文件
.sp
.LP
以下命令可删除起始目录中一周内未访问的名为 \fBa.out\fR 或 \fB*.o\fR 的所有文件。

.sp
.in +2
.nf
example% \fBfind $HOME \e( -name a.out -o -name '*.o' \e) \e
       -atime +7 -exec rm {} \e;\fR 
.fi
.in -2
.sp

.LP
\fB示例 3 \fR列显所有文件名但跳过 SCCS 目录
.sp
.LP
以下命令以递归方式列显当前目录及其下目录中的所有文件名，但会跳过 \fBSCCS\fR 目录：

.sp
.in +2
.nf
example% \fBfind . -name SCCS -prune -o -print\fR
.fi
.in -2
.sp

.LP
\fB示例 4 \fR列显所有文件名和 SCCS 目录名
.sp
.LP
以递归方式列显当前目录及其下目录中的所有文件名，将跳过 \fBSCCS\fR 目录的内容，但会列显 \fBSCCS\fR 目录名：

.sp
.in +2
.nf
example% \fBfind . -print -name SCCS -prune\fR
.fi
.in -2
.sp

.LP
\fB示例 5 \fR测试较新文件
.sp
.LP
以下命令基本上与 \fBtest\fR(1) 的 \fB-nt\fR 扩展等效：

.sp
.in +2
.nf
example$ \fBif [ -n "$(find
file1 -prune -newer file2)" ]; then

printf %s\e\en "file1 is newer than file2"\fR
.fi
.in -2
.sp

.LP
\fB示例 6 \fR使用 24 小时模式选择文件
.sp
.LP
\fB-atime\fR、\fB-ctime\fR 和 \fB-mtime\fR 的说明使用了术语 \fIn\fR，即“24 小时期间”。例如，可通过以下命令选择于 23:59 访问过的文件：

.sp
.in +2
.nf
example% \fBfind . -atime -1 -print\fR
.fi
.in -2
.sp

.sp
.LP
执行命令的时间是下一日的 00:01（下一日为该时刻之后不超过 24 小时，之前不超过一天）。两天之间的午夜边界不会影响 24 小时计算。

.LP
\fB示例 7 \fR列显与用户的权限模式匹配的文件
.sp
.LP
以下命令以递归方式列显其权限模式与用户的读写和执行访问权限、组以及其他人员的读和执行访问权限完全匹配的所有文件名：

.sp
.in +2
.nf
example% \fBfind . -perm u=rwx,g=rx,o=rx\fR
.fi
.in -2
.sp

.sp
.LP
以上命令还可以按如下方式指定：

.sp
.in +2
.nf
example% \fBfind . -perm a=rwx,g-w,o-w\fR
.fi
.in -2
.sp

.LP
\fB示例 8 \fR列显\fB其他人员\fR具有写访问权限的文件
.sp
.LP
以下命令以递归方式列显其权限包括但不仅限于其他人员的写访问权限的所有文件名：

.sp
.in +2
.nf
example% \fBfind . -perm -o+w\fR
.fi
.in -2
.sp

.LP
\fB示例 9 \fR列显本地文件，不向下搜索非本地目录
.sp
.in +2
.nf
example% \fBfind . ! -local -prune -o -print\fR
.fi
.in -2
.sp

.LP
\fB示例 10 \fR列显具有扩展属性的名称空间中的文件
.sp
.in +2
.nf
example% \fBfind . -xattr\fR
.fi
.in -2
.sp

.LP
\fB示例 11 \fR列显所有 PDF 文件名（不考虑大小写）
.sp
.LP
以下示例可查找扩展名为 \fB\&.pdf\fR、\fB\&.PDF\fR、\fB\&.Pdf\fR 等的所有文件名。

.sp
.in +2
.nf
example% \fBfind . -iname '*.pdf'\fR
.fi
.in -2
.sp

.SH 环境变量
.sp
.LP
有关影响 \fBfind\fR 执行的以下环境变量的说明，请参见 \fBenviron\fR(5)：\fBLANG\fR、\fBLC_ALL\fR、\fBLC_COLLATE\fR、\fBLC_CTYPE\fR、\fBLC_MESSAGES\fR 和 \fBNLSPATH\fR。
.sp
.ne 2
.mk
.na
\fB\fBPATH\fR\fR
.ad
.RS 8n
.rt  
确定 \fB-exec\fR 和 \fB-ok\fR 主表达式的 \fIutility_name\fR 位置。
.RE

.sp
.LP
肯定的回答使用为用户语言环境中 \fBLC_MESSAGES\fR 类别的 \fByesexpr\fR 关键字定义的扩展正则表达式进行处理。\fBLC_COLLATE\fR 类别中指定的语言环境定义为 \fByesexpr\fR 定义的表达式中使用的范围、等效类和多字符整理元素的行为。\fBLC_CTYPE\fR 中指定的语言环境确定文本数据字符字节序列解释的语言环境，以及为 \fByesexpr\fR 定义的表达式中使用的字符类的行为。请参见 \fBlocale\fR(5)。
.SH 退出状态
.sp
.LP
将返回以下退出值：
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
已成功遍历所有 \fIpath\fR 操作数。
.RE

.sp
.ne 2
.mk
.na
\fB\fB>0\fR\fR
.ad
.RS 6n
.rt  
出现错误。
.RE

.SH 文件
.sp
.ne 2
.mk
.na
\fB\fB/etc/passwd\fR\fR
.ad
.RS 20n
.rt  
口令文件
.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/group\fR\fR
.ad
.RS 20n
.rt  
组文件
.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/dfs/fstypes\fR\fR
.ad
.RS 20n
.rt  
用于注册分布式文件系统软件包的文件
.RE

.SH 属性
.sp
.LP
有关下列属性的说明，请参见 \fBattributes\fR(5)：
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
可用性system/core-os
_
CSIEnabled（已启用）
_
接口稳定性Committed（已确定）
_
标准请参见 \fBstandards\fR(5)。
.TE

.SH 另请参见
.sp
.LP
\fBchmod\fR(1)、\fBcpio\fR(1)、\fBsh\fR(1)、\fBtest\fR(1)、\fBls\fR(1B)、\fBacl\fR(2)、\fBstat\fR(2)、\fBumask\fR(2)、\fBgroup\fR(4)、\fBpasswd\fR(4)、\fBattributes\fR(5)、\fBenviron\fR(5)、\fBfsattr\fR(5)、\fBlargefile\fR(5)、\fBlocale\fR(5)、\fBstandards\fR(5)
.SH 警告
.sp
.LP
以下选项已过时，在将来的发行版中将不受支持：
.sp
.ne 2
.mk
.na
\fB\fB-cpio\fR \fIdevice\fR\fR
.ad
.RS 17n
.rt  
始终为 True。以 \fBcpio\fR 格式（记录大小为 5120 字节）在 \fIdevice\fR 上编写当前文件。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-ncpio\fR \fIdevice\fR\fR
.ad
.RS 17n
.rt  
始终为 True。以 \fBcpio\fR \fB-c\fR 格式（记录大小为 5120 字节）在 \fIdevice\fR 设备上编写当前文件。
.RE

.SH 附注
.sp
.LP
使用 \fBfind\fR 确定某时间范围内修改的文件时，请在 \fB-print\fR 参数\fB前面\fR使用 \fB-mtime\fR 参数。否则，\fBfind\fR 会列出所有文件。
.sp
.LP
位于 Solaris 根文件系统下的某些文件实际上是虚拟文件系统（例如 \fBmntfs\fR 或 \fBnamefs\fR）的挂载点。在与 \fBufs\fR 文件系统进行比较时，如果在 \fBfind\fR 表达式中指定了 \fB-mount\fR 或 \fB-xdev\fR，则不会选择此类文件。
.sp
.LP
在向下搜索受其他用户控制的文件系统分层结构时，不建议使用 \fB-L\fR 或 \fB-follow\fR 选项。尤其是在使用 \fB-exec\fR 时，符号链接可能会导致 \fBfind\fR 命令脱离其启动时所在的分层结构。使用 \fB-type\fR 不足以限定运行 \fB-exec\fR 命令的文件类型，因为在 \fBfind\fR 命令执行的类型检查与已执行的命令针对文件参数运行的时间之间，存在固有竞争情况。
