'\" te
.\" Copyright © 2002, Sun Microsystems, Inc. All Rights Reserved
.TH eqn 1 "2002 年 7 月 12 日" "SunOS 5.11" "用户命令"
.SH 名称
eqn, neqn, checkeq \- 编排数学测试
.SH 用法概要
.LP
.nf
\fBeqn\fR [\fB-d\fR \fIxy\fR] [\fB -f\fR \fIn\fR] [\fB-p\fR \fIn\fR] [\fB -s\fR \fIn\fR] [\fIfile\fR]...
.fi

.LP
.nf
\fBneqn\fR [\fIfile\fR]...
.fi

.LP
.nf
\fBcheckeq\fR [\fIfile\fR]...
.fi

.SH 描述
.sp
.LP
\fBeqn\fR 和 \fBneqn\fR 是用于帮助描述方程式的语言处理器。\fBeqn\fR 是 \fBtroff\fR(1) 的预处理程序，适用于可列显 \fBtroff\fR 输出内容的设备。\fBneqn\fR 是 \fBnroff\fR(1) 的预处理程序，适用于终端。用法几乎始终如下：
.sp
.in +2
.nf
example% \fBeqn file ... | troff\fR
example% \fBneqn file ... | nroff\fR
.fi
.in -2
.sp

.sp
.LP
如果未指定 \fIfile\fR，则 \fBeqn\fR 和 \fBneqn\fR 会从标准输入进行读取。以 \fB\&.EQ\fR 开头的行表示方程式开始。以 \fB\&.EN\fR 开头的行表示方程式结束。这些行都不会更改，从而可以在宏软件包中进行定义以实现居中、编号等功能。还可以将两个字符设置为“分隔符”；分隔符之间的后续文本也被视为 \fBeqn\fR 输入。
.sp
.LP
\fBcheckeq\fR 可报告缺失或不对称的分隔符以及 \fB\&.EQ\fR/\fB\&.EN\fR 对。
.SH 选项
.sp
.LP
支持以下选项：
.sp
.ne 2
.mk
.na
\fB\fB-d\fR\fIxy\fR \fR
.ad
.RS 9n
.rt  
使用命令行参数将方程式分隔符集设置为字符 \fIx\fR 和 \fIy\fR。执行此操作的更常见方法是在 \fB\&.EQ\fR 和 \fB\&.EN\fR 之间使用 \fBdelim\fR\fI xy\fR。左、右分隔符可以相同。分隔符由文本中出现的 \fBdelim\fR \fBoff\fR 关闭。既不在分隔符之间，也不在 \fB\&.EQ\fR 和 \fB\&.EN\fR 之间的所有文本传递后保持不变。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fIn\fR \fR
.ad
.RS 9n
.rt  
将文档中的字体全局更改为 \fIn\fR。还可使用 \fBgfont\fR\fI n\fR 指令（其中 \fIn\fR 为字体规范）全局更改文档正文的字体。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-p\fR\fIn\fR \fR
.ad
.RS 9n
.rt  
将下标和上标由以前的磅值减小 \fIn\fR 个磅值。缺少 \fB-p\fR 选项时，下标和上标会由以前的磅值减小 3 个磅值。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR\fIn\fR \fR
.ad
.RS 9n
.rt  
将文档中的磅值全局更改为 \fIn\fR。还可使用 \fBgsize\fR\fI n\fR 指令（其中 \fIn\fR 为磅值）全局更改文档正文的磅值。
.RE

.SH 操作数
.sp
.LP
支持下列操作数：
.sp
.ne 2
.mk
.na
\fB\fIfile\fR \fR
.ad
.RS 9n
.rt  
由 \fBeqn\fR 或 \fBneqn\fR 处理的 nroff 或 troff 文件。 
.RE

.SH EQN LANGUAGE
.sp
.LP
此描述的 nroff 版本说明了 \fBneqn\fR 向终端屏幕的输出，也正是 \fBneqn\fR 实际能够显示的内容。要查看对输出的准确描述，请查看本页的打印版本。
.sp
.LP
\fBeqn\fR 中的单词符号用括号、双引号、波浪号、抑扬符、空格、制表符或换行符等字符分隔。花括号 { } 用于进行分组。一般而言，在单个字符（如 \fIx\fR）可能出现的任何地方，可能会改为使用带花括号的复杂结构。波浪号 (\fB~\fR) 在输出中表示整个空格；而抑扬符 (\fB^\fR) 只表示半个。
.sp
.ne 2
.mk
.na
\fB下标和上标：\fR
.ad
.sp .6
.RS 4n
这些符号分别使用关键字 \fBsub\fR 和 \fBsup\fR 生成。  
.sp
.ne 2
.mk
.na
\fB\fBx sub i\fR\fR
.ad
.RS 29n
.rt  
生成 
.EQ
delim $$
.EN
$x sub i$
.sp
.RE

.sp
.ne 2
.mk
.na
\fB\fBa sub i sup 2\fR \fR
.ad
.RS 29n
.rt  
生成 
.EQ
delim $$
.EN
$a sub i sup 2$
.sp
.RE

.sp
.ne 2
.mk
.na
\fB\fBe sup {x sup 2 + y sup 2}\fR\fR
.ad
.RS 29n
.rt  
生成 e^(x^2+y^2)
.sp
.RE

.RE

.sp
.ne 2
.mk
.na
\fB分数：\fR
.ad
.sp .6
.RS 4n
分数使用 \fBover\fR 生成。  
.sp
.ne 2
.mk
.na
\fB\fBa over b\fR \fR
.ad
.RS 13n
.rt  
生成 
.EQ
delim $$
.EN
$a over b$
.sp
.RE

.RE

.sp
.ne 2
.mk
.na
\fB平方根：\fR
.ad
.sp .6
.RS 4n
平方根使用 \fBsqrt\fR 生成  
.sp
.ne 2
.mk
.na
\fB\fB1 over sqrt {ax sup 2 +bx+c}\fR \fR
.ad
.sp .6
.RS 4n
生成 
.EQ
delim $$
.EN
$1 over sqrt {ax sup 2 +bx+c}$
.sp
.RE

.RE

.sp
.ne 2
.mk
.na
\fB限制：\fR
.ad
.sp .6
.RS 4n
关键字 \fBfrom\fR 和 \fBto\fR 可对任意对象引入下限和上限： 
.sp
.ne 2
.mk
.na
\fB\fBlim from {n-> inf } sum from 0 to n x sub i\fR\fR
.ad
.sp .6
.RS 4n
 生成 
.EQ
delim $$
.EN
$lim from {n-> inf } sum from 0 to n x sub i$
.sp
.RE

.RE

.sp
.ne 2
.mk
.na
\fB方括号和花括号：\fR
.ad
.sp .6
.RS 4n
适当高度的左右方括号、花括号以及类似符号使用 \fBleft\fR 和 \fBright\fR 生成。 
.sp
.ne 2
.mk
.na
\fB\fBleft [ x sup 2 + y sup 2 over alpha right ] ~=~1\fR \fR
.ad
.sp .6
.RS 4n
生成 
.EQ
delim $$
.EN
$left [ x sup 2 + y sup 2 over alpha right ] ~=~1$
.sp
.sp
\fBright\fR 子句是可选的。\fBleft\fR 和 \fBright\fR 之后的合法字符有括号、方括号、竖线、\fBc\fR 和 \fBf\fR（表示上取整和下取整）以及 \fB""\fR（表示无任何内容）（适用于仅有右侧方括号的情况）。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB垂直堆叠：\fR
.ad
.sp .6
.RS 4n
垂直堆叠使用 \fBpile\fR、\fBlpile\fR、\fBcpile\fR 和 \fBrpile\fR 生成。  
.sp
.ne 2
.mk
.na
\fB\fBpile {a above b above c}\fR\fR
.ad
.RS 28n
.rt  
 生成 
.EQ
delim $$
.EN
$pile {a above b above c}$
.sp
.sp
一个堆叠中可以有任意数量的元素。\fBlpile\fR 为左对齐，\fBpile\fR 和 \fBcpile\fR 为居中对齐（垂直间距不同），\fBrpile\fR 为右对齐。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB矩阵：\fR
.ad
.sp .6
.RS 4n
矩阵使用 \fBmatrix\fR 生成。  
.sp
.ne 2
.mk
.na
\fB\fBmatrix { lcol { x sub i above y sub 2 } ccol { 1 above 2 } }\fR \fR
.ad
.sp .6
.RS 4n
生成
.EQ
delim $$
.EN
$matrix { lcol { x sub i above y sub 2 } ccol { 1 above 2 } }$
.sp
.sp
此外，\fBrcol\fR 表示右对齐的列。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB变音符号：\fR
.ad
.sp .6
.RS 4n
变音符号使用 \fBdot\fR、\fBdotdot\fR、\fBhat\fR、\fBtilde\fR、\fBbar\fR、\fB vec\fR、\fBdyad\fR 和 \fBunder\fR 生成。  
.sp
.ne 2
.mk
.na
\fB\fBx dot = f(t) bar\fR\fR
.ad
.RS 28n
.rt  
 显示为 
.EQ
delim $$
.EN
$x dot = f(t) bar$
.sp
.RE

.sp
.ne 2
.mk
.na
\fB\fBy dotdot bar ~=~ n under\fR\fR
.ad
.RS 28n
.rt  
 显示为 
.EQ
delim $$
.EN
$y dotdot bar ~=~ n under$
.sp
.RE

.sp
.ne 2
.mk
.na
\fB\fBx vec ~=~ y dyad\fR \fR
.ad
.RS 28n
.rt  
显示为 
.EQ
delim $$
.EN
$x vec ~=~ y dyad$
.sp
.RE

.RE

.sp
.ne 2
.mk
.na
\fB字号和字体：\fR
.ad
.sp .6
.RS 4n
字号和字体可使用 \fBsize\fR \fI n\fR 或 \fBsize\fR \fB±\fR\fI n、\fR\fBroman\fR、\fBitalic\fR、\fBbold \fR 和 \fBfont\fR \fIn\fR 进行更改。文档中的字号和字体可通过 \fBgsize\fR \fI n\fR 和 \fBgfont\fR \fIn\fR，或通过命令行参数 \fB-s\fR\fIn\fR 和 \fB- f\fR\fIn\fR 进行全局更改。 
.RE

.sp
.ne 2
.mk
.na
\fB连续显示参数：\fR
.ad
.sp .6
.RS 4n
连续显示参数可进行对齐。将 \fBmark\fR 放置在第一个方程式中所需的对齐点之前；将 \fBlineup\fR 放置在后续方程式中要垂直对齐的位置。
.RE

.sp
.ne 2
.mk
.na
\fB简写：\fR
.ad
.sp .6
.RS 4n
通过 \fBdefine\fR\fI\fR 可定义简写或重新定义现有关键字：  
.sp
.ne 2
.mk
.na
\fB\fBdefine\fR\fI thing \fR\fB %\fR\fI replacement \fR\fB%\fR \fR
.ad
.sp .6
.RS 4n
定义称为 \fIthing\fR 的新单词符号，在此后每次显示时将其替换为 \fIreplacement\fR。\fB%\fR 可以是未出现在 \fIreplacement\fR 中的任意字符。 
.RE

.RE

.sp
.ne 2
.mk
.na
\fB关键字和简写：\fR
.ad
.sp .6
.RS 4n
可识别 \fBsum\fR \fBint\fR \fB inf\fR 等关键字和 \fB>=\fR \fB->\fR 以及 \fB !=\fR 等简写。
.RE

.sp
.ne 2
.mk
.na
\fB希腊字母：\fR
.ad
.sp .6
.RS 4n
希腊字母按所需的大小写进行拼写，如 \fBalpha\fR 或 \fBGAMMA\fR。 
.RE

.sp
.ne 2
.mk
.na
\fB数学词语：\fR
.ad
.sp .6
.RS 4n
数学词语（如 \fBsin\fR、\fBcos\fR 和 \fBlog\fR）会自动转换为罗马字符。
.RE

.sp
.LP
\fBtroff\fR(1) 四字符转义符（如 \(bu (·)）可用于任何位置。双引号 \fB"\fR. . .\fB"\fR 中的字符串会原样传递；这可允许将关键字作为文本输入，并且在所有其他方法都无效时与 \fBtroff\fR 进行通信。
.SH 属性
.sp
.LP
有关下列属性的说明，请参见 \fBattributes\fR(5)：
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
可用性text/doctools
.TE

.SH 另请参见
.sp
.LP
\fBnroff\fR(1)、\fBtbl\fR(1)、\fBtroff\fR(1)、\fBattributes\fR(5)、\fBms\fR(5) 
.SH 已知问题
.sp
.LP
要将字符（如数字和括号）加粗，必须为其加上引号，如 `\fBbold "12.3"\fR' 所示。
