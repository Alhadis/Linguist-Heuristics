'\" te
.\" Copyright (c) 2007, 2015, Oracle and/or its affiliates.All rights reserved.
.TH resource-controls  5 "2015 年 5 月 21 日" "SunOS 5.11" "标准、环境和宏"
.SH 名称
resource-controls \- 通过项目数据库提供的资源控制
.SH 描述
.sp
.LP
资源控制工具通过项目数据库进行配置。请参见 \fBproject\fR(4)。您可以通过以下实用程序设置和修改资源控制：
.RS +4
.TP
.ie t \(bu
.el o
\fBprctl\fR(1)
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBprojadd\fR(1M)
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBprojmod\fR(1M)
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBrctladm\fR(1M)
.RE
.sp
.LP
在程序中，您可以使用 \fBsetrctl\fR(2) 来设置资源控制值。
.sp
.LP
除了前述资源控制以外，还存在可通过 \fBpooladm\fR(1M) 和 \fBpoolcfg\fR(1M) 实用程序访问的资源池。在程序中，可通过 \fBlibpool\fR(3LIB) 库操作资源池。
.sp
.LP
下面列出了一些可用的资源控制：
.sp
.ne 2
.mk
.na
\fB\fBprocess.max-address-space\fR\fR
.ad
.sp .6
.RS 4n
此进程可用的最大地址空间量，即段大小的总和，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-core-size\fR\fR
.ad
.sp .6
.RS 4n
此进程创建的最大核心文件大小，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-cpu-time\fR\fR
.ad
.sp .6
.RS 4n
此进程可用的最长 CPU 时间，以秒数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-data-size\fR\fR
.ad
.sp .6
.RS 4n
此进程可用的最大堆内存，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-file-descriptor\fR\fR
.ad
.sp .6
.RS 4n
此进程可用的最大文件描述符索引，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-file-size\fR\fR
.ad
.sp .6
.RS 4n
此进程可写入的最大文件偏移，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocesss.max-itimers\fR\fR
.ad
.sp .6
.RS 4n
允许的最大间隔计时器数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-msg-messages\fR\fR
.ad
.sp .6
.RS 4n
消息队列中的最大消息数（在 \fBmsgget()\fR 时间从资源控制复制的值），表示为整数。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-msg-qbytes\fR\fR
.ad
.sp .6
.RS 4n
消息队列中消息的最大字节数（在 \fBmsgget()\fR 时间从资源控制复制的值），以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-port-events\fR\fR
.ad
.sp .6
.RS 4n
每事件端口允许的最大事件数，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-sem-nsems\fR\fR
.ad
.sp .6
.RS 4n
每信号集允许的最大信号数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-sem-ops\fR\fR
.ad
.sp .6
.RS 4n
每 \fBsemop\fR 调用允许的最大信号操作数（在 \fBsemget()\fR 时从资源控制复制的值）。以整数表示，用于指定操作数目。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-sigqueue-size\fR\fR
.ad
.sp .6
.RS 4n
进程可具有的待处理排队信号最大数目。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-stack-size\fR\fR
.ad
.sp .6
.RS 4n
此进程可用的最大栈内存区段，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.cpu-caps\fR\fR
.ad
.sp .6
.RS 4n
项目可以使用的 CPU 资源最大量。使用的单位是项目中所有用户线程可使用的单个 CPU 的百分比。以整数表示。上限不适用于实时调度类中运行的线程。此资源控制不支持 \fBsyslog\fR 操作。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.cpu-shares\fR\fR
.ad
.sp .6
.RS 4n
授予项目的 CPU 份额数，用于公平份额调度器（请参见 \fBFSS\fR(7)）。使用的单位是共享数目（整数）。此资源控制不支持 \fBsyslog\fR 操作。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-contracts\fR\fR
.ad
.sp .6
.RS 4n
项目中允许的最大合同数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-crypto-memory\fR\fR
.ad
.sp .6
.RS 4n
可用于加密操作的最大内核内存量。内核中对缓冲区的分配以及与会话相关的结构分配都按照此资源控制执行。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprocess.max-deferred-posts\fR\fR
.ad
.sp .6
.RS 4n
允许的最大延迟发布数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-locked-memory\fR\fR
.ad
.sp .6
.RS 4n
设备驱动程序和用户进程（包括 DISM/ISM/OSM）锁定的物理内存总量，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-lwps\fR\fR
.ad
.sp .6
.RS 4n
项目可同时使用的最大 LWP 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-msg-ids\fR\fR
.ad
.sp .6
.RS 4n
项目允许的最大消息队列 ID 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-port-ids\fR\fR
.ad
.sp .6
.RS 4n
允许的最大事件端口数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-processes\fR\fR
.ad
.sp .6
.RS 4n
项目可同时使用的最大进程数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-sem-ids\fR\fR
.ad
.sp .6
.RS 4n
项目允许的最大信号 ID 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-shm-ids\fR\fR
.ad
.sp .6
.RS 4n
项目允许的最大共享内存 ID 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-shm-memory\fR\fR
.ad
.sp .6
.RS 4n
项目允许的共享内存总量，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.max-tasks\fR\fR
.ad
.sp .6
.RS 4n
项目中允许的最大任务数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject.pool\fR\fR
.ad
.sp .6
.RS 4n
将指定的资源池与项目绑定。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrcap.max-rss\fR\fR
.ad
.sp .6
.RS 4n
项目中的进程可用的物理内存总量（字节）。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtask.max-cpu-time\fR\fR
.ad
.sp .6
.RS 4n
此任务的进程可用的最长 CPU 时间，以秒数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtask.max-lwps\fR\fR
.ad
.sp .6
.RS 4n
此任务的进程可同时使用的最大 LWP 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtask.max-processes\fR\fR
.ad
.sp .6
.RS 4n
任务可同时使用的最大进程数目，以整数表示。
.RE

.sp
.LP
以下是可用的区域范围的资源控制：
.sp
.ne 2
.mk
.na
\fB\fBzone.cpu-cap\fR\fR
.ad
.sp .6
.RS 4n
设置可供某个区域使用的 CPU 时间量的限制。使用的单位是区域中所有用户线程可使用的单个 CPU 的百分比。以整数表示。当设置有上限的区域中的项目有其自己的上限时，优先采用最小值。此资源控制不支持 \fBsyslog\fR 操作。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.cpu-shares\fR\fR
.ad
.sp .6
.RS 4n
对区域的公平份额调度器 (fair share scheduler, FSS) CPU 份额数设置限制。CPU 份额首先分配给区域，然后在区域内的项目之间进一步分配，如 \fBproject.cpu-shares\fR 项中所述。以整数表示。此资源控制不支持 \fBsyslog\fR 操作。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-locked-memory\fR\fR
.ad
.sp .6
.RS 4n
区域可用的锁定物理内存的总量
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-lofi\fR\fR
.ad
.sp .6
.RS 4n
区域可用的最大 \fBlofi\fR(7D) 设备数目。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-lwps\fR\fR
.ad
.sp .6
.RS 4n
通过阻止一个区域中的过多 LWP 影响其他区域来增强资源隔离。区域的 LWP 总数可以使用 \fBproject.max-lwps\fR 条目在区域内的项目之间进一步细分。以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-msg-ids\fR\fR
.ad
.sp .6
.RS 4n
区域允许的最大消息队列 ID 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-processes\fR\fR
.ad
.sp .6
.RS 4n
区域可同时使用的最大进程数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-sem-ids\fR\fR
.ad
.sp .6
.RS 4n
区域允许的最大信号 ID 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-shm-ids\fR\fR
.ad
.sp .6
.RS 4n
区域允许的最大共享内存 ID 数目，以整数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-shm-memory\fR\fR
.ad
.sp .6
.RS 4n
区域允许的共享内存总量，以字节数表示。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzone.max-swap\fR\fR
.ad
.sp .6
.RS 4n
可用于此区域的用户进程地址空间映射和 \fBtmpfs\fR 挂载的交换空间总量
.RE

.sp
.LP
请参见 \fBzones\fR(5)。
.SS "资源控制中使用的单位"
.sp
.LP
资源控制可以采用大小（字节）、时间（秒）或计数（整数）单位来表示。这些单位使用以下指定的字符串。
.sp
.in +2
.nf
Category             Res Ctrl      Modifier  Scale
                     Type String
-----------          -----------   --------  -----
Size                 bytes         B         1
                                   KB        2^10
                                   MB        2^20
                                   GB        2^30
                                   TB        2^40
                                   PB        2^50
                                   EB        2^60

Time                 seconds       s         1
                                   Ks        10^3
                                   Ms        10^6
                                   Gs        10^9
                                   Ts        10^12
                                   Ps        10^15
                                   Es        10^18

Count                integer       none      1
                                   K         10^3
                                   M         10^6
                                   G         10^9
                                   T         10^12
                                   P         10^15
                                   Es        10^18
.fi
.in -2

.sp
.LP
标度值可用于资源控制。以下示例显示了标度阈值：
.sp
.in +2
.nf
task.max-lwps=(priv,1K,deny)
.fi
.in -2

.sp
.LP
在 \fBproject\fR 文件中，值 \fB1K\fR 扩展为 \fB1000\fR：
.sp
.in +2
.nf
task.max-lwps=(priv,1000,deny)
.fi
.in -2

.sp
.LP
第二个示例使用较大的比例值：
.sp
.in +2
.nf
process.max-file-size=(priv,5G,deny)
.fi
.in -2

.sp
.LP
在 \fBproject\fR 文件中，值 \fB5G\fR 扩展为 \fB5368709120\fR：
.sp
.in +2
.nf
process.max-file-size=(priv,5368709120,deny)
.fi
.in -2

.sp
.LP
前述示例使用上表中指定的比例系数。
.sp
.LP
请注意，\fBprctl\fR(1)、\fBprojadd\fR(1M) 和 \fBprojmod\fR(1M) 命令接受单位修饰符（例如，\fB5G\fR）。您不能在project数据库本身中使用单位修饰符。
.SS "资源控制值和特权级别"
.sp
.LP
资源控制的阈值相当于可能会引发本地操作或进行全局操作（如记录）的某个点。
.sp
.LP
资源控制的每个阈值都必须与某个特权级别相关联。特权级别必须为以下三种类型之一：
.sp
.ne 2
.mk
.na
\fB\fBbasic\fR\fR
.ad
.sp .6
.RS 4n
可由调用进程的所有者修改。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprivileged\fR\fR
.ad
.sp .6
.RS 4n
可由当前进程（需要 \fBsys_resource\fR 特权）或由 \fBprctl\fR(1)（需要 \fBproc_owner\fR 特权）修改。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsystem\fR\fR
.ad
.sp .6
.RS 4n
在操作系统实例的持续时间内固定不变。
.RE

.sp
.LP
每个资源控制都保证有一个由系统或资源提供器定义的 \fBsystem\fR 值。\fBsystem\fR 值表示操作系统的当前实现可以提供的资源量。
.sp
.LP
可以定义任意数量的特权值，但仅允许定义一个基本值。缺省情况下，将为没有指定特权值时执行的操作指定基本特权。
.sp
.LP
资源控制值的特权级别在资源控制块（如 \fBRCTL_BASIC\fR、\fBRCTL_PRIVILEGED\fR 或 \fBRCTL_SYSTEM\fR）的特权字段中定义。有关更多信息，请参见 \fBsetrctl\fR(2)。您可以使用 \fBprctl\fR 命令来修改与基本级别和特权级别关联的值。
.sp
.LP
在指定 \fBprivileged\fR 的特权级别时，您可以使用缩写 \fBpriv\fR。例如：
.sp
.in +2
.nf
task.max-lwps=(priv,1K,deny)
.fi
.in -2

.SS "针对资源控制值的全局和本地操作"
.sp
.LP
针对资源控制值可执行两种类别的操作：全局操作和本地操作。
.sp
.LP
全局操作应用于系统中每个资源控制的资源控制值。您可以使用 \fBrctladm\fR(1M) 执行以下操作：
.RS +4
.TP
.ie t \(bu
.el o
显示活动系统资源控制的全局状态。
.RE
.RS +4
.TP
.ie t \(bu
.el o
设置全局日志操作。
.RE
.sp
.LP
您可以对资源控制禁用或启用全局日志操作。通过指定严重性级别（\fBsyslog=\fR\fIlevel\fR），您可以将 \fBsyslog\fR 操作设置为特定的级别。\fIlevel\fR 的可能设置如下：
.RS +4
.TP
.ie t \(bu
.el o
\fBdebug\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBinfo\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBnotice\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBwarning\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBerr\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBcrit\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBalert\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBemerg\fR
.RE
.sp
.LP
缺省情况下，没有资源控制违规的全局日志。
.sp
.LP
本地操作对试图超过控制值的进程执行。对于为资源控制设定的每个阈值，您都可以关联一个或多个操作。有三种类型的本地操作： \fBnone\fR、\fBdeny\fR 和 \fBsignal=\fR。这三种操作按以下方式使用：
.sp
.ne 2
.mk
.na
\fB\fBnone\fR\fR
.ad
.sp .6
.RS 4n
对于请求数量大于阈值的资源请求不执行任何操作。在不影响应用程序进度的情况下监视资源的使用情况时，此操作非常有用。您还可以启用在超过资源控制时显示的全局消息，而同时不会影响超过阈值的进程。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdeny\fR\fR
.ad
.sp .6
.RS 4n
您可以拒绝请求数量大于阈值的资源请求。例如，如果新的进程超过控制值，则带有操作拒绝的 \fBtask.max-lwps\fR 资源控制会导致 \fBfork()\fR 系统调用失败。请参见 \fBfork\fR(2)。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsignal=\fR\fR
.ad
.sp .6
.RS 4n
您可以在超过资源控制时启用全局信号消息操作。当超过阈值时，会向进程发送信号。如果进程占用了其他资源，则不会发送其他信号。下面列出了可用的信号。
.RE

.sp
.LP
并非所有的操作都可应用于每个资源控制。例如，某个进程的 CPU 份额数不能超过为其所属的项目指定的 CPU 份额数。因此，不允许对 \fBproject.cpu-shares\fR 资源控制执行拒绝操作。
.sp
.LP
由于存在实现限制，因此，每个控制的全局属性可以限制可对阈值设置的可用操作的范围。（请参见 \fBrctladm\fR(1M)。）下面列出了可用信号操作。有关信号的其他信息，请参见 \fBsignal\fR(3HEAD)。
.sp
.LP
以下列出了可用于资源控制值的信号：
.sp
.ne 2
.mk
.na
\fB\fBSIGABRT\fR\fR
.ad
.sp .6
.RS 4n
终止进程。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSIGHUP\fR\fR
.ad
.sp .6
.RS 4n
发送挂起信号。当载波在断开的线路上停止时出现。发送给控制终端的进程组的信号。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSIGTERM\fR\fR
.ad
.sp .6
.RS 4n
终止进程。由软件发送的终止信号。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSIGKILL\fR\fR
.ad
.sp .6
.RS 4n
终止进程并中止程序。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSIGSTOP\fR\fR
.ad
.sp .6
.RS 4n
停止进程。作业控制信号。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSIGXRES\fR\fR
.ad
.sp .6
.RS 4n
超过了资源控制限制。由资源控制功能生成。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSIGXFSZ\fR\fR
.ad
.sp .6
.RS 4n
终止进程。超过了文件大小限制。仅可用于具有 \fBRCTL_GLOBAL_FILE_SIZE\fR 属性的资源控制 (\fBprocess.max-file-size\fR)。请参见 \fBrctlblk_set_value\fR(3C)。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSIGXCPU\fR\fR
.ad
.sp .6
.RS 4n
终止进程。超过了 CPU 时间限制。仅可用于具有 \fBRCTL_GLOBAL_CPUTIME\fR 属性的资源控制 (\fBprocess.max-cpu-time\fR)。请参见 \fBrctlblk_set_value\fR(3C)。
.RE

.SS "资源控制标志和属性"
.sp
.LP
系统的每个资源控制都有一组特定的关联属性。这组属性定义为一组标志，这些标志与此资源的所有受控实例关联。不能修改全局标志，但是可以使用 \fBrctladm\fR(1M) 或 \fBsetrctl\fR(2) 系统调用检索这些标志。
.sp
.LP
本地标志可为特定进程或进程集合中资源控制的特定阈值定义缺省行为和配置。一个阈值的本地标志不会影响同一资源控制的其他已定义阈值的行为。但是，全局标志会影响与特定控制关联的每个值的行为。可以在本地标志对应的全局标志提供的约束内，使用 \fBprctl\fR 命令或 \fBsetrctl\fR 系统调用对本地标志进行修改。请参见 \fBsetrctl\fR(2)。
.sp
.LP
有关本地标志、全局标志及其定义的完整列表，请参见 \fBrctlblk_set_value\fR(3C)。
.sp
.LP
要确定在达到特定资源控制的阈值时的系统行为，请使用 \fBrctladm\fR 显示此资源控制的全局标志。例如，要显示 \fBprocess.max-cpu-time\fR 的值，请输入：
.sp
.in +2
.nf
$ rctladm process.max-cpu-time
process.max-cpu-time  syslog=off [ lowerable no-deny cpu-time inf seconds ]
.fi
.in -2

.sp
.LP
全局标志表示以下内容：
.sp
.ne 2
.mk
.na
\fB\fBlowerable\fR\fR
.ad
.sp .6
.RS 4n
不需要超级用户特权来减小此控制的特权值。
.RE

.sp
.ne 2
.mk
.na
\fB\fBno-deny\fR\fR
.ad
.sp .6
.RS 4n
即使当超过阈值时，也从不拒绝对资源的访问。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcpu-time\fR\fR
.ad
.sp .6
.RS 4n
当达到此资源的阈值时可发送 \fBSIGXCPU\fR。
.RE

.sp
.ne 2
.mk
.na
\fB\fBseconds\fR\fR
.ad
.sp .6
.RS 4n
资源控制的时间值。
.RE

.sp
.LP
使用 \fBprctl\fR 命令可以显示资源控制的本地值和操作。例如：
.sp
.in +2
.nf
$ prctl -n process.max-cpu-time $$
    process 353939: -ksh
    NAME    PRIVILEGE    VALUE    FLAG   ACTION              RECIPIENT
 process.max-cpu-time
         privileged   18.4Es    inf   signal=XCPU                 -
         system       18.4Es    inf   none
.fi
.in -2

.sp
.LP
为两个阈值都设置了 \fBmax\fR (\fBRCTL_LOCAL_MAXIMAL\fR) 标志，并且为此资源控制定义了 \fBinf\fR (\fBRCTL_GLOBAL_INFINITE\fR) 标志。\fBinf\fR 值可以是无穷大，但从不会达到。因此，如同配置的那样，两个阈值都表示从不会超过的无穷大值。
.SS "资源控制执行"
.sp
.LP
一个资源可以存在多个资源控制。进程模型中的每个内嵌项目级别均可存在资源控制。如果同一资源的不同容器级别上的资源控制都处于活动状态，则首先执行最小容器的控制。因此，如果同时遇到 \fBprocess.max-cpu-time\fR 和 \fBtask.max-cpu-time\fR 这两个控制，则先对前者执行操作。
.SH 属性
.sp
.LP
有关以下属性的说明，请参见 \fBattributes\fR(5)：
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
接口稳定性Committed（已确定）
.TE

.SH 另请参见
.sp
.LP
\fBprctl\fR(1)、\fBpooladm\fR(1M)、\fBpoolcfg\fR(1M)、\fBprojadd\fR(1M)、\fBprojmod\fR(1M)、\fBrctladm\fR(1M)、\fBsetrctl\fR(2)、\fBrctlblk_set_value\fR(3C)、\fBlibpool\fR(3LIB)、\fBproject\fR(4)、\fBattributes\fR(5)、\fBFSS\fR(7)、\fBlofi\fR(7D)、\fBmemcntl\fR(2)
.sp
.LP
\fI《Administering Resource Management in Oracle         Solaris 11.3》\fR
