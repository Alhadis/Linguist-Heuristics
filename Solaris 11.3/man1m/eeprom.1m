'\" te
.\" Copyright (c) 2009, 2015, Oracle and/or its affiliates. All rights reserved.
.TH eeprom 1M "26 Mar 2015" "SunOS 5.11" "System Administration Commands"
.SH NAME
eeprom \- EEPROM display and load utility
.SH SYNOPSIS
.LP
.nf
\fB/usr/sbin/eeprom\fR [\fB-\fR] [\fB-f\fR \fIdevice\fR] [\fIparameter\fR[=\fIvalue\fR]]
.fi

.LP
.nf
\fB/usr/sbin/eeprom\fR \fB-u\fR [\fB-i\fR] [\fB-x\fR] [\fB-\fR] [\fIuefi-variable\fR[=\fIvalue\fR]] ... 
.fi

.LP
.nf
\fB/usr/sbin/eeprom\fR \fB-u\fR \fB-d\fR \fIuefi-variable\fR ... 
.fi

.SH DESCRIPTION
.sp
.LP
\fBeeprom\fR displays or changes the values of parameters in the \fBEEPROM.\fR It processes parameters in the order given. When processing a \fIparameter\fR accompanied by a \fIvalue\fR, \fBeeprom\fR makes the indicated alteration to the \fBEEPROM;\fR otherwise, it displays the \fIparameter\fR's value. When given no parameter specifiers, \fBeeprom\fR displays the values of all \fBEEPROM\fR parameters. A `\|\(mi\fB\&'\fR (hyphen) flag specifies that parameters and values are to be read from the standard input (one \fIparameter\fR or \fIparameter\fR\fB=\fR\fIvalue\fR per line).
.sp
.LP
Only the super-user may alter the \fBEEPROM\fR contents.
.sp
.LP
\fBeeprom\fR verifies the \fBEEPROM\fR checksums and complains if they are incorrect.
.sp
.LP
\fIplatform-name\fR is the name of the platform implementation and can be found using the \fB-i\fR option of \fBuname\fR(1).
.SS "SPARC"
.sp
.LP
\fBSPARC\fR based systems implement firmware password protection with \fBeeprom\fR, using the \fBsecurity-mode\fR, \fBsecurity-password\fR and \fBsecurity-#badlogins\fR properties.
.SS "x86"
.sp
.LP
\fBEEPROM\fR storage is simulated using a file residing in the platform-specific boot area. The \fB/boot/solaris/bootenv.rc\fR file simulates \fBEEPROM\fR storage.
.sp
.LP
Because x86 based systems typically implement password protection in the system \fBBIOS,\fR there is no support for password protection in the \fBeeprom\fR program. While it is possible to set the \fBsecurity-mode\fR, \fBsecurity-password\fR and \fBsecurity-#badlogins\fR properties on x86 based systems, these properties have no special meaning or behavior on x86 based systems.
.SS "UEFI"
.sp
.LP
In addition to simulating EEPROM storage, UEFI capable x86 systems implement NVRAM storage for variables specific to the UEFI environment, as defined by the UEFI specification. All privileges are required for both reading and writing UEFI variables.
.SH OPTIONS
.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fIdevice\fR\fR
.ad
.sp .6
.RS 4n
Use \fIdevice\fR as the \fBEEPROM\fR device.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.sp .6
.RS 4n
Access UEFI variables instead of Solaris system variables. When used alone prints all UEFI variables. Otherwise, individual variables can be listed on the command line to be printed or written to using the same format style as Solaris system variables.
.sp
Most UEFI variables are in a binary format and are translated to a readable format. When translation is not possible, a hexdump is printed.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR \fIuefi-variable\fR\fR
.ad
.sp .6
.RS 4n
Outputs a hexdump of a specified UEFI variable without attempting translation. When used on a set operation, it will have no effect. 
.RE

.sp
.ne 2
.mk
.na
\fB\fB-d\fR \fIuefi-variable\fR\fR
.ad
.sp .6
.RS 4n
Deletes a UEFI variable specified on the command line.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR \fB-\fR\fR
.ad
.sp .6
.RS 4n
`-` when used under \fB-u\fR option works the same way as it does with the regular \fBeeprom\fR command except now it operates on UEFI variables.
.RE

.SH OPERANDS
.SS "x86 Only"
.sp
.ne 2
.mk
.na
\fB\fIacpi-user-options\fR\fR
.ad
.sp .6
.RS 4n
A configuration variable that controls the use of Advanced Configuration and Power Interface (ACPI), a power management specification. The acceptable values for this variable depend on the release of the Solaris operating system you are using.
.sp
For all releases of Solaris 10 and Solaris 11, a value of of \fB0x0\fR means that there will be an attempt to use ACPI if it is available on the system. A value of \fB0x2\fR disables the use of ACPI.
.sp
For the Solaris 10 1/06 release, a value of \fB0x8\fR means that there will be an attempt to use ACPI in a mode compatible with previous releases of Solaris 10 if it is available on the system. The default for Solaris 10 1/06 is \fB0x8\fR.
.sp
For releases of Solaris 10 after the 1/06 release and for Solaris 11, the default is \fB0x0\fR.
.sp
Most users can safely accept the default value, which enables ACPI if available. If issues related to the use of ACPI are suspected on releases of Solaris after Solaris 1/06, it is suggested to first try a value of \fB0x8\fR and then, if you do not obtain satisfactory results, \fB0x02\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIconsole\fR\fR
.ad
.sp .6
.RS 4n
Specifies the console device. Possible values are \fBttya\fR, \fBttyb\fR, \fBtext\fR, \fBgraphics\fR and \fBforce-text\fR. In \fBtext\fR mode, console output goes to the frame buffer and input comes from the keyboard. A variant of text mode, \fBgraphics\fR displays an image with an animation until either a key is pressed or console interaction is required by console login, \fBsulogin\fR, or \fBkmdb\fR. A further variant of \fBtext\fR, \fBforce-text\fR will avoid using a VGA adapter as a bitmapped device setting it to VGA text mode. When this property is not present, the console device falls back to the device specified by \fBinput-device\fR and \fBoutput-device\fR. When neither the \fBconsole\fR property nor the \fBinput-device\fR and \fBoutput-device\fR property pair are present, the console defaults to the frame buffer and keyboard.
.RE

.sp
.ne 2
.mk
.na
\fB\fBscreen-\fR\fI#columns\fR \fBscreen-\fR\fI#rows\fR\fR
.ad
.sp .6
.RS 4n
When \fBscreen\fR is set to either \fBgraphics\fR or \fBtext\fR on a bitmapped device, \fBscreen-\fR\fI#columns\fR and \fBscreen-\fR\fI#rows\fR allow the desired number columns and rows of text to be specified. They default to \fB80\fR and \fB24\fR respectively.
.RE

.SS "UEFI Only"
.sp
.ne 2
.mk
.na
\fB\fBBootOrder\fR\fR
.ad
.sp .6
.RS 4n
The ordered boot option load list.
.RE

.sp
.ne 2
.mk
.na
\fB\fBBootNext\fR\fR
.ad
.sp .6
.RS 4n
The boot option for the next boot only.
.RE

.sp
.ne 2
.mk
.na
\fB\fBBootCurrent\fR\fR
.ad
.sp .6
.RS 4n
The boot option that was selected for the current boot.
.RE

.sp
.ne 2
.mk
.na
\fB\fBBoot\fR\fI####\fR\fR
.ad
.sp .6
.RS 4n
A boot load option. \fI####\fR is a printed hex value. No \fB0x\fR or \fBh\fR is included in the hex value.
.RE

.sp
.ne 2
.mk
.na
\fB\fBConIn\fR\fR
.ad
.sp .6
.RS 4n
The device path of the default input console.
.RE

.sp
.ne 2
.mk
.na
\fB\fBConOut\fR\fR
.ad
.sp .6
.RS 4n
The device path of the default output console.
.RE

.sp
.ne 2
.mk
.na
\fB\fBConInDev\fR\fR
.ad
.sp .6
.RS 4n
The device path of all possible console input devices. 
.RE

.sp
.ne 2
.mk
.na
\fB\fBConOutDev\fR\fR
.ad
.sp .6
.RS 4n
The device path of all possible console output devices.
.RE

.sp
.ne 2
.mk
.na
\fB\fBErrOut\fR\fR
.ad
.sp .6
.RS 4n
The device path of the default error output device. 
.RE

.sp
.ne 2
.mk
.na
\fB\fBErrOutDev\fR\fR
.ad
.sp .6
.RS 4n
The device path of all possible error output devices.
.RE

.sp
.ne 2
.mk
.na
\fB\fBLang\fR\fR
.ad
.sp .6
.RS 4n
The language code that the system is configured for. This value is deprecated.
.RE

.sp
.ne 2
.mk
.na
\fB\fBPlatformLang\fR\fR
.ad
.sp .6
.RS 4n
The language code that the system is configured for.
.RE

.sp
.ne 2
.mk
.na
\fB\fBLangCodes\fR\fR
.ad
.sp .6
.RS 4n
The language codes that the firmware supports. This value is deprecated.
.RE

.sp
.ne 2
.mk
.na
\fB\fBPlatformLangCodes\fR\fR
.ad
.sp .6
.RS 4n
The language codes that the firmware supports.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTimeout\fR\fR
.ad
.sp .6
.RS 4n
The firmware's boot managers timeout, in seconds, before initiating the default boot selection.
.RE

.SH NVRAM CONFIGURATION PARAMETERS
.sp
.LP
Not all OpenBoot systems support all parameters. Defaults vary depending on the system and the \fBPROM\fR revision. See the output in the "Default Value" column of the \fBprintenv\fR command, as entered at the \fBok\fR (OpenBoot) prompt, to determine the default for your system.
.sp
.ne 2
.mk
.na
\fBauto-boot?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, boots automatically after power-on or reset. Defaults to \fBtrue\fR. On x86, this parameter is controlled by the grub menu file. See \fBinstallgrub\fR(1M).
.RE

.sp
.ne 2
.mk
.na
\fBansi-terminal?\fR
.ad
.sp .6
.RS 4n
Configuration variable used to control the behavior of the terminal emulator. The value \fBfalse\fR makes the terminal emulator stop interpreting \fBANSI\fR escape sequences; instead, echoes them to the output device. Defaults to \fBtrue\fR.
.RE

.sp
.ne 2
.mk
.na
\fBboot-args\fR
.ad
.sp .6
.RS 4n
Holds a string of arguments that are passed to the boot subsystem. For example, you can use \fBboot-args=' - install dhcp'\fR to request a customer jumpstart installation. See \fBboot\fR(1M), \fBkmdb\fR(1), and \fBkernel\fR(1M).
.RE

.sp
.ne 2
.mk
.na
\fBboot-command\fR
.ad
.sp .6
.RS 4n
Command executed if \fBauto-boot?\fR is \fBtrue\fR. Defaults to \fBboot\fR.
.RE

.sp
.ne 2
.mk
.na
\fBboot-device\fR
.ad
.sp .6
.RS 4n
Device from which to boot. \fIboot-device\fR may contain 0 or more device specifiers separated by spaces. Each device specifier may be either a prom device alias or a prom device path. The boot prom will attempt to open each successive device specifier in the list beginning with the first device specifier. The first device specifier that opens successfully will be used as the device to boot from. Defaults to \fBdisk net\fR.
.RE

.sp
.ne 2
.mk
.na
\fBboot-device-index\fR
.ad
.sp .6
.RS 4n
Keeps track onf the device index into the \fBboot-device\fR variable.
.RE

.sp
.ne 2
.mk
.na
\fBboot-file\fR
.ad
.sp .6
.RS 4n
File to boot (an empty string lets the secondary booter choose default). Defaults to empty string.
.RE

.sp
.ne 2
.mk
.na
\fBboot-from\fR
.ad
.sp .6
.RS 4n
Boot device and file (OpenBoot PROM version 1.\fIx\fR only). Defaults to \fBvmunix\fR.
.RE

.sp
.ne 2
.mk
.na
\fBboot-from-diag\fR
.ad
.sp .6
.RS 4n
Diagnostic boot device and file (OpenBoot PROM version 1.\fIx\fR only). Defaults to \fBle(\|)unix\fR.
.RE

.sp
.ne 2
.mk
.na
\fBboot-ncpus\fR
.ad
.sp .6
.RS 4n
Configuration variable that controls the number of processors with which the system should boot. By default, the system boots with maximum supported number of processors.
.RE

.sp
.ne 2
.mk
.na
\fBboot-pool-list\fR
.ad
.sp .6
.RS 4n
If the platform supports dedicated devices to be used as a boot pool (a dedicated ZFS pool to be used for booting the system with an operating system that can mount its root filesystem from a device other than the boot device), this variable is a space-separated list of device paths to storage devices that can be used by the operating system to create the boot pool.
.RE

.sp
.ne 2
.mk
.na
\fBcom\fIX\fR-noprobe\fR
.ad
.sp .6
.RS 4n
Where \fIX\fR is the number of the serial port, prevents device probe on serial port \fIX.\fR
.RE

.sp
.ne 2
.mk
.na
\fBdiag-device\fR
.ad
.sp .6
.RS 4n
Diagnostic boot source device. Defaults to \fBnet\fR.
.RE

.sp
.ne 2
.mk
.na
\fBdiag-file\fR
.ad
.sp .6
.RS 4n
File from which to boot in diagnostic mode. Defaults to empty string.
.RE

.sp
.ne 2
.mk
.na
\fBdiag-level\fR
.ad
.sp .6
.RS 4n
Diagnostics level. Values include \fBoff\fR, \fBmin\fR, \fBmax\fR and \fBmenus\fR. There may be additional platform-specific values. When set to \fBoff\fR, \fBPOST\fR is not called. If \fBPOST\fR is called, the value is made available as an argument to, and is interpreted by \fBPOST.\fR Defaults to \fBplatform-dependent\fR.
.RE

.sp
.ne 2
.mk
.na
\fBdiag-switch?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, run in diagnostic mode. Defaults to \fBfalse\fR on most desktop systems, \fBtrue\fR on most servers.
.RE

.sp
.ne 2
.mk
.na
\fBerror-reset-recovery\fR
.ad
.sp .6
.RS 4n
Recover after an error reset trap. Defaults to platform-specific setting.
.sp
On platforms supporting this variable, it replaces the \fBwatchdog-reboot?\fR, \fBwatchdog-sync?\fR, \fBredmode-reboot?\fR, \fBredmode-sync?\fR, \fBsir-sync?\fR, and \fBxir-sync?\fR parameters. 
.sp
The options are:
.sp
.ne 2
.mk
.na
\fBnone\fR
.ad
.sp .6
.RS 4n
Print a message describing the reset trap and go to OpenBoot PROM's user interface, \fBaka\fR \fBOK\fR prompt.
.RE

.sp
.ne 2
.mk
.na
\fBsync\fR
.ad
.sp .6
.RS 4n
Invoke OpenBoot PROM's \fBsync\fR word after the reset trap. Some platforms may treat this as \fBnone\fR after an externally initiated reset (\fBXIR\fR) trap.
.RE

.sp
.ne 2
.mk
.na
\fBboot\fR
.ad
.sp .6
.RS 4n
Reboot after the reset trap. Some platforms may treat this as \fBnone\fR after an \fBXIR\fR trap.
.RE

.RE

.sp
.ne 2
.mk
.na
\fBfcode-debug?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, include name parameter for plug-in device FCodes. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBhardware-revision\fR
.ad
.sp .6
.RS 4n
System version information.
.RE

.sp
.ne 2
.mk
.na
\fBinput-device\fR
.ad
.sp .6
.RS 4n
Input device used at power-on (usually \fBkeyboard\fR, \fBttya\fR, or \fBttyb\fR). Defaults to \fBkeyboard\fR.
.RE

.sp
.ne 2
.mk
.na
\fBkeyboard-click?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, enable keyboard click. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBkeyboard-layout\fR
.ad
.sp .6
.RS 4n
A string that specifies the layout name for non-self-identifying keyboards (type 7c). Invoke \fBkbd\fR \fB-s\fR to obtain a list of acceptable layout names. See \fBkbd\fR(1). 
.RE

.sp
.ne 2
.mk
.na
\fBkeymap\fR
.ad
.sp .6
.RS 4n
Keymap for custom keyboard.
.RE

.sp
.ne 2
.mk
.na
\fBlast-hardware-update\fR
.ad
.sp .6
.RS 4n
System update information.
.RE

.sp
.ne 2
.mk
.na
\fBload-base\fR
.ad
.sp .6
.RS 4n
Default load address for client programs. Default value is \fB16384\fR.
.RE

.sp
.ne 2
.mk
.na
\fBlocal-mac-address?\fR
.ad
.sp .6
.RS 4n
If true, network drivers use their own MAC address, not the system's. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBmfg-mode\fR
.ad
.sp .6
.RS 4n
Manufacturing mode argument for \fBPOST.\fR Possible values include \fBoff\fR or \fBchamber\fR. The value is passed as an argument to \fBPOST.\fR Defaults to \fBoff\fR.
.RE

.sp
.ne 2
.mk
.na
\fBmfg-switch?\fR
.ad
.sp .6
.RS 4n
If true, repeat system self-tests until interrupted with STOP-A. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBmultipath-boot?\fR
.ad
.sp .6
.RS 4n
If true, is used by the PROM to cycle through the list of I/O devices provided in the \fBboot-device\fR variable, until a successful boot is performed with a device from the list.
.RE

.sp
.ne 2
.mk
.na
\fBnvramrc\fR
.ad
.sp .6
.RS 4n
Contents of NVRAMRC. Defaults to empty.
.RE

.sp
.ne 2
.mk
.na
\fBnetwork-boot-arguments\fR
.ad
.sp .6
.RS 4n
Arguments to be used by the PROM for network booting. Defaults to an empty string. \fBnetwork-boot-arguments\fR can be used to specify the boot protocol (RARP/DHCP) to be used and a range of system knowledge to be used in the process.
.sp
The syntax for arguments supported for network booting is:
.sp
.in +2
.nf
[\fIprotocol\fR,] [\fIkey\fR=\fIvalue\fR,]*
.fi
.in -2
.sp

All arguments are optional and can appear in any order. Commas are required unless the argument is at the end of the list. If specified, an argument takes precedence over any default values, or, if booting using DHCP, over configuration information provided by a DHCP server for those parameters.
.sp
\fIprotocol\fR, above, specifies the address discovery protocol to be used.
.sp
Configuration parameters, listed below, are specified as \fIkey\fR=\fIvalue\fR attribute pairs.
.sp
.ne 2
.mk
.na
\fB\fBtftp-server\fR\fR
.ad
.sp .6
.RS 4n
IP address of the TFTP server
.RE

.sp
.ne 2
.mk
.na
\fB\fBfile\fR\fR
.ad
.sp .6
.RS 4n
file to download using TFTP or URL for WAN boot
.RE

.sp
.ne 2
.mk
.na
\fB\fBhost-ip\fR\fR
.ad
.sp .6
.RS 4n
IP address of the client (in dotted-decimal notation)
.RE

.sp
.ne 2
.mk
.na
\fB\fBrouter-ip\fR\fR
.ad
.sp .6
.RS 4n
IP address of the default router (in dotted-decimal notation)
.RE

.sp
.ne 2
.mk
.na
\fB\fBsubnet-mask\fR\fR
.ad
.sp .6
.RS 4n
subnet mask (in dotted-decimal notation)
.RE

.sp
.ne 2
.mk
.na
\fB\fBclient-id\fR\fR
.ad
.sp .6
.RS 4n
DHCP client identifier
.RE

.sp
.ne 2
.mk
.na
\fB\fBhostname\fR\fR
.ad
.sp .6
.RS 4n
hostname to use in DHCP transactions
.RE

.sp
.ne 2
.mk
.na
\fB\fBhttp-proxy\fR\fR
.ad
.sp .6
.RS 4n
HTTP proxy server specification (IPADDR[:PORT])
.RE

.sp
.ne 2
.mk
.na
\fB\fBtftp-retries\fR\fR
.ad
.sp .6
.RS 4n
maximum number of TFTP retries
.RE

.sp
.ne 2
.mk
.na
\fB\fBdhcp-retries\fR\fR
.ad
.sp .6
.RS 4n
maximum number of DHCP retries
.RE

If no parameters are specified (that is, \fBnetwork-boot-arguments\fR is an empty string), the PROM will use the platform-specific default address discovery protocol.
.sp
Absence of the protocol parameter when other configuration parameters are specified implies manual configuration.
.sp
Manual configuration requires that the client be provided with all the information necessary for boot. If using manual configuration, information required by the PROM to load the second-stage boot program must be provided in \fBnetwork-boot-arguments\fR while information required for the second-stage boot program can be specified either as arguments to the \fBboot\fR program or by means of the \fBboot\fR program's interactive command interpreter.
.sp
Information required by the PROM when using manual configuration includes the booting client's IP address, name of the boot file, and the address of the server providing the boot file image. Depending on network configuration, it might be required that the subnet mask and address of the default router to use also be specified.
.RE

.sp
.ne 2
.mk
.na
\fBoem-banner\fR
.ad
.sp .6
.RS 4n
Custom OEM banner (enabled by setting \fBoem-banner?\fR to \fBtrue\fR). Defaults to empty string.
.RE

.sp
.ne 2
.mk
.na
\fBoem-banner?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, use custom \fBOEM\fR banner. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBoem-logo\fR
.ad
.sp .6
.RS 4n
Byte array custom OEM logo (enabled by setting \fBoem-logo?\fR to \fBtrue\fR). Displayed in hexadecimal.
.RE

.sp
.ne 2
.mk
.na
\fBoem-logo?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, use custom OEM logo (else, use Sun logo). Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBos-root-device\fR
.ad
.sp .6
.RS 4n
If set, wholly describes one or more root filesystem and device that will be used to store the root pool. On platforms that import their root pools from storage that is not directly accessible by firmware (e.g. no FCode or ROM exists with code that can access the root device), this variable is used to configure the root device and filesystem in early Solaris kernel boot. The value of this property is only interpreted by an operating system (e.g. Solaris).
.sp
The general form of os-root-device is a set of key-value pairs, separated by semicolons (\fB;\fR). Multiple root descriptors are separated by double-semicolons (\fB;;\fR).
.sp
For example (a single root descriptor (reassembled, it forms a single, uinterrupted line of text)):
.sp
.in +2
.nf
osroot-type=ZFS/iSCSI/IPv4/IPoIB;osroot-iscsi-port=3260;\            

osroot-iscsi-target-ip=141.141.1.2;osroot-iscsi-partition=a;\        

osroot-iscsi-lun=2;osroot-iscsi-target-name=iqn.1986-03.\            

com.sun:02:3a9d3d74-b3ec-43ac-ed6f-c9358c98a366;\                    

osroot-subnet-mask=255.255.255.0;osroot-host-ip=\                    

141.141.1.1;osroot-path=/pci@301/pci@1/pciex15b3,1003@0:\            

port=1,pkey=FFFF,protocol=ip
.fi
.in -2
.sp

Another example (multiple root descriptors (reassembled, it forms a single, uinterrupted line of text)):
.sp
.in +2
.nf
osroot-type=ZFS/iSCSI/IPv4/IPoIB;osroot-iscsi-port=3260;\            

osroot-iscsi-target-ip=141.141.1.2;osroot-iscsi-partition=a;\        

osroot-iscsi-lun=2;osroot-iscsi-target-name=iqn.1986-03.\            

com.sun:02:3a9d3d74-b3ec-43ac-ed6f-c9358c98a366;\                    

osroot-subnet-mask=255.255.255.0;osroot-host-ip=\                    

141.141.1.1;osroot-path=/pci@301/pci@1/pciex15b3,1003@0:\            

port=1,pkey=FFFF,protocol=ip;;\                                      

osroot-type=ZFS/iSCSI/IPv4/IPoIB;osroot-iscsi-port=3260;\            

osroot-iscsi-target-ip=141.141.1.2;osroot-iscsi-partition=a;\        

osroot-iscsi-lun=2;osroot-iscsi-target-name=iqn.1986-03.\            

com.sun:02:3a9d3d74-b3ec-43ac-ed6f-c9358c98a366;\                    

osroot-subnet-mask=255.255.255.0;osroot-host-ip=\                    

141.141.1.1;osroot-path=/pci@315/pci@2/pciex15b3,1003@0:\            

port=2,pkey=FFFF,protocol=ip
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fBpci-mem64?\fR
.ad
.sp .6
.RS 4n
If true, the OpenBoot PROM allocates 64-bit PCI memory addresses to a PCI device that can support 64-bit addresses.
.sp
This variable is available on SPARC platforms only and is optional. Some versions of SunOS do not support PCI \fBMEM64\fR addresses and will fail in unexpected ways if the OpenBoot PROM allocates PCI \fBMEM64\fR addresses.
.sp
The default value is system-dependent. If the variable exists, the default value is appropriate to the lowest version of the SunOS that shipped with a specific platform.
.RE

.sp
.ne 2
.mk
.na
\fBoutput-device\fR
.ad
.sp .6
.RS 4n
Output device used at power-on (usually \fBscreen\fR, \fBttya\fR, or \fBttyb\fR). Defaults to \fBscreen\fR.
.RE

.sp
.ne 2
.mk
.na
\fBredmode-reboot?\fR
.ad
.sp .6
.RS 4n
Specify \fBtrue\fR to reboot after a redmode reset trap. Defaults to \fBtrue\fR. (Sun Enterprise 10000 only.)
.RE

.sp
.ne 2
.mk
.na
\fBredmode-sync?\fR
.ad
.sp .6
.RS 4n
Specify \fBtrue\fR to invoke OpenBoot PROM's \fBsync\fR word after a redmode reset trap. Defaults to \fBfalse\fR. (Sun Enterprise 10000 only.)
.RE

.sp
.ne 2
.mk
.na
\fBrootpath\fR
.ad
.sp .6
.RS 4n
Specifies the root device of the operating system.
.RE

.sp
.ne 2
.mk
.na
\fBsbus-probe-list\fR
.ad
.sp .6
.RS 4n
Designate which SBus slots are probed and in what order. Defaults to \fB0123\fR.
.RE

.sp
.ne 2
.mk
.na
\fBscreen-#columns\fR
.ad
.sp .6
.RS 4n
Number of on-screen columns (characters/line). Defaults to \fB80\fR.
.RE

.sp
.ne 2
.mk
.na
\fBscreen-#rows\fR
.ad
.sp .6
.RS 4n
Number of on-screen rows (lines). Defaults to \fB34\fR.
.RE

.sp
.ne 2
.mk
.na
\fBscsi-initiator-id\fR
.ad
.sp .6
.RS 4n
\fBSCSI\fR bus address of host adapter, range 0-7. Defaults to \fB7\fR.
.RE

.sp
.ne 2
.mk
.na
\fBsd-targets\fR
.ad
.sp .6
.RS 4n
Map \fBSCSI\fR disk units (OpenBoot PROM version 1.\fIx\fR only). Defaults to \fB31204567\fR, which means that unit 0 maps to target \fB3\fR, unit 1 maps to target \fB1\fR, and so on.
.RE

.sp
.ne 2
.mk
.na
\fBsecurity-#badlogins\fR
.ad
.sp .6
.RS 4n
Report the number of incorrect security password attempts. \fBeeprom security-#badlogins=0\fR will reset the value. This property has no special meaning or behavior on x86 based systems.
.RE

.sp
.ne 2
.mk
.na
\fBsecurity-mode\fR
.ad
.sp .6
.RS 4n
Firmware security level (options: \fBnone\fR, \fBcommand\fR, or \fBfull\fR). If set to \fBcommand\fR or \fBfull\fR, system will prompt for \fBPROM\fR security password. Defaults to \fBnone\fR.This property has no special meaning or behavior on x86 based systems.
.RE

.sp
.ne 2
.mk
.na
\fBsecurity-password\fR
.ad
.sp .6
.RS 4n
Firmware security password (never displayed). Can be set only when \fBsecurity-mode\fR is set to \fBcommand\fR or \fBfull\fR.This property has no special meaning or behavior on x86 based systems.
.sp
.in +2
.nf
example# eeprom security-password=

Changing PROM password:

New password:

Retype new password:
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fBselftest-#megs\fR
.ad
.sp .6
.RS 4n
Megabytes of \fBRAM\fR to test. Ignored if \fBdiag-switch?\fR is \fBtrue\fR. Defaults to \fB1\fR.
.RE

.sp
.ne 2
.mk
.na
\fBsir-sync?\fR
.ad
.sp .6
.RS 4n
Specify \fBtrue\fR to invoke OpenBoot PROM's \fBsync\fR word after a software-initiated reset (\fBSIR\fR) trap. Defaults to \fBfalse\fR. (Sun Enterprise 10000 only.)
.RE

.sp
.ne 2
.mk
.na
\fBskip-vme-loopback?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, POST does not do VMEbus loopback tests. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBst-targets\fR
.ad
.sp .6
.RS 4n
Map \fBSCSI\fR tape units (OpenBoot PROM version 1.\fIx\fR only). Defaults to \fB45670123\fR, which means that unit 0 maps to target \fB4\fR, unit 1 maps to target \fB5\fR, and so on.
.RE

.sp
.ne 2
.mk
.na
\fBsunmon-compat?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, display Restricted Monitor prompt (\|>). Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBtboot-list\fR
.ad
.sp .6
.RS 4n
If the platform supports a fallback boot mechanism (a device or set of devices that describe storage devices that hold bootable images that can allow the system to boot in the event of failure of the primary boot devices), this variable holds a space-separated list of device paths that should be added to the boot-device variable (usually at the end, after the primary boot devices) by the operating system.
.RE

.sp
.ne 2
.mk
.na
\fBtestarea\fR
.ad
.sp .6
.RS 4n
One-byte scratch field, available for read/write test. Defaults to \fB0\fR.
.RE

.sp
.ne 2
.mk
.na
\fBtpe-link-test?\fR
.ad
.sp .6
.RS 4n
Enable 10baseT link test for built-in twisted pair Ethernet. Defaults to \fBtrue\fR.
.RE

.sp
.ne 2
.mk
.na
\fBttya-mode\fR
.ad
.sp .6
.RS 4n
\fBTTYA\fR (baud rate, #bits, parity, #stop, handshake). Defaults to \fB9600,8,n,1,\(mi\fR.
.sp
Fields, in left-to-right order, are: 
.sp
.ne 2
.mk
.na
\fBBaud rate:\fR
.ad
.sp .6
.RS 4n
110, 300, 1200, 4800, 9600\|.\|.\|.
.RE

.sp
.ne 2
.mk
.na
\fBData bits:\fR
.ad
.sp .6
.RS 4n
5, 6, 7, 8
.RE

.sp
.ne 2
.mk
.na
\fBParity:\fR
.ad
.sp .6
.RS 4n
n(none), e(even), o(odd), m(mark), s(space)
.RE

.sp
.ne 2
.mk
.na
\fBStop bits:\fR
.ad
.sp .6
.RS 4n
1, 1.5, 2
.RE

.sp
.ne 2
.mk
.na
\fBHandshake:\fR
.ad
.sp .6
.RS 4n
\(mi(none), h(hardware:rts/cts), s(software:xon/xoff)
.RE

.RE

.sp
.ne 2
.mk
.na
\fBttyb-mode\fR
.ad
.sp .6
.RS 4n
\fBTTYB\fR (baud rate, #bits, parity, #stop, handshake). Defaults to \fB9600,8,n,1,\(mi\fR.
.sp
Fields, in left-to-right order, are: 
.sp
.ne 2
.mk
.na
\fBBaud rate:\fR
.ad
.sp .6
.RS 4n
110, 300, 1200, 4800, 9600\|.\|.\|.
.RE

.sp
.ne 2
.mk
.na
\fBData bits:\fR
.ad
.sp .6
.RS 4n
5, 6, 7, 8
.RE

.sp
.ne 2
.mk
.na
\fBStop bits:\fR
.ad
.sp .6
.RS 4n
1, 1.5, 2
.RE

.sp
.ne 2
.mk
.na
\fBParity:\fR
.ad
.sp .6
.RS 4n
n(none), e(even), o(odd), m(mark), s(space)
.RE

.sp
.ne 2
.mk
.na
\fBHandshake:\fR
.ad
.sp .6
.RS 4n
\(mi(none), h(hardware:rts/cts), s(software:xon/xoff)
.RE

.RE

.sp
.ne 2
.mk
.na
\fBttya-ignore-cd\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, operating system ignores carrier-detect on TTYA. Defaults to \fBtrue\fR.
.RE

.sp
.ne 2
.mk
.na
\fBttyb-ignore-cd\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, operating system ignores carrier-detect on TTYB. Defaults to \fBtrue\fR.
.RE

.sp
.ne 2
.mk
.na
\fBttya-rts-dtr-off\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, operating system does not assert DTR and RTS on TTYA. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBttyb-rts-dtr-off\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, operating system does not assert DTR and RTS on TTYB. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBuse-nvramrc?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, execute commands in \fBNVRAMRC\fR during system start-up. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBverbosity\fR
.ad
.sp .6
.RS 4n
Controls the level of verbosity of PROM messages. Can be one of \fBdebug\fR, \fBmax\fR, \fBnormal\fR, \fBmin\fR, or \fBnone\fR. Defaults to \fBnormal\fR.
.RE

.sp
.ne 2
.mk
.na
\fBversion2?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, hybrid (1.\fIx\fR/2.\fIx\fR) PROM comes up in version 2.\fIx\fR. Defaults to \fBtrue\fR.
.RE

.sp
.ne 2
.mk
.na
\fBwatchdog-reboot?\fR
.ad
.sp .6
.RS 4n
If \fBtrue\fR, reboot after watchdog reset. Defaults to \fBfalse\fR.
.RE

.sp
.ne 2
.mk
.na
\fBwatchdog-sync?\fR
.ad
.sp .6
.RS 4n
Specify \fBtrue\fR to invoke OpenBoot PROM's \fBsync\fR word after a watchdog reset trap. Defaults to \fBfalse\fR. ( Sun Enterprise 10000 only.)
.RE

.sp
.ne 2
.mk
.na
\fBxir-sync?\fR
.ad
.sp .6
.RS 4n
Specify \fBtrue\fR to invoke OpenBoot PROM's \fBsync\fR word after an \fBXIR\fR trap. Defaults to \fBfalse\fR. (Sun Enterprise 10000 only.)
.RE

.SH EXAMPLES
.LP
\fBExample 1 \fRChanging the Number of Megabytes of RAM.
.sp
.LP
The following example demonstrates the method for changing from one to two the number of megabytes of \fBRAM\fR that the system will test.

.sp
.in +2
.nf
example# \fBeeprom selftest-#megs\fR

selftest-#megs=1



example# eeprom selftest-#megs=2



example# \fBeeprom selftest-#megs\fR

selftest-#megs=2
.fi
.in -2
.sp

.LP
\fBExample 2 \fRSetting the \fBauto-boot?\fR Parameter to \fBtrue\fR.
.sp
.LP
The following example demonstrates the method for setting the \fBauto-boot?\fR parameter to \fBtrue\fR.

.sp
.in +2
.nf
example# \fBeeprom auto-boot?=true\fR
.fi
.in -2
.sp

.sp
.LP
When the \fBeeprom\fR command is executed in user mode, the parameters with a trailing question mark (?) need to be enclosed in double quotation marks (" ") to prevent the shell from interpreting the question mark. Preceding the question mark with an escape character (\fB\e\fR) will also prevent the shell from interpreting the question mark.

.sp
.in +2
.nf
\fBexample% eeprom "auto-boot?"=true\fR
.fi
.in -2
.sp

.LP
\fBExample 3 \fRUsing \fBnetwork-boot-arguments\fR
.sp
.LP
To use DHCP as the boot protocol and a hostname of \fBabcd.example.com\fR for network booting, set these values in \fBnetwork-boot-arguments\fR as:

.sp
.in +2
.nf
example# \fBeeprom network-boot-arguments="dhcp,hostname=abcd.example.com"\fR
.fi
.in -2
.sp

.sp
.LP
\&...then boot using the command:

.sp
.in +2
.nf
ok \fBboot net\fR
.fi
.in -2
.sp

.sp
.LP
Note that network boot arguments specified from the PROM command line cause the contents of \fBnetwork-boot-arguments\fR to be ignored. For example, with \fBnetwork-boot-arguments\fR set as shown above, the \fBboot\fR command:

.sp
.in +2
.nf
ok \fBboot net:dhcp\fR
.fi
.in -2
.sp

.sp
.LP
\&...causes DHCP to be used, but the \fBhostname\fR specified in \fBnetwork-boot-arguments\fR will not be used during network boot.

.LP
\fBExample 4 \fRSetting System Console to Auxiliary Device
.sp
.LP
The command below assigns the device \fB/dev/term/a\fR as the system console device. You would make such an assignment prior to using \fBtip\fR(1) to establish a \fBtip\fR connection to a host.

.sp
.LP
On a SPARC machine:

.sp
.in +2
.nf
# \fBeeprom output-device=/dev/term/a\fR
.fi
.in -2
.sp

.sp
.LP
On an x86 machine:

.sp
.in +2
.nf
# \fBeeprom console=ttya\fR
.fi
.in -2
.sp

.sp
.LP
On a SPARC machine, the preceding command would be sufficient for assigning the console to an auxiliary device. For an x86 machine, you might, in addition, need to set the characteristics of the serial line, for which you would have to consult the BIOS documentation for that machine. Also, on some x86 machines, you might use a device other than device \fBa\fR, as shown above. For example, you could set console to \fBttyb\fR if the second serial port is present.

.LP
\fBExample 5 \fRSpecifying that SPARC System Boots into \fBkmdb\fR
.sp
.LP
To specify that a SPARC machine boots into \fBkmdb\fR(1), enter the following command:

.sp
.in +2
.nf
# \fBeeprom boot-command="boot -k"\fR
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/boot/solaris/bootenv.rc\fR\fR
.ad
.sp .6
.RS 4n
File storing \fBeeprom\fR values on x86 machines.
.RE

.sp
.ne 2
.mk
.na
\fB\fB/dev/openprom\fR\fR
.ad
.sp .6
.RS 4n
Device file
.RE

.sp
.ne 2
.mk
.na
\fB\fB/usr/platform/\fR\fIplatform-name\fR\fB/sbin/eeprom\fR\fR
.ad
.sp .6
.RS 4n
Platform-specific version of \fBeeprom\fR. Use \fBuname\fR \fB-i\fR to obtain \fIplatform-name\fR.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Availabilitysystem/core-os
.TE

.SH SEE ALSO
.sp
.LP
\fBkmdb\fR(1), \fBpasswd\fR(1), \fBsh\fR(1), \fBsvcs\fR(1), \fBtip\fR(1), \fBuname\fR(1), \fBboot\fR(1M), \fBkernel\fR(1M), \fBinit\fR(1M), \fBsvcadm\fR(1M), \fBattributes\fR(5), \fBsmf\fR(5)
.sp
.LP
\fIOpenBoot 3.x Command Reference Manual\fR
.sp
.LP
\fIONC+ RPC Developer\&'s Guide\fR 
