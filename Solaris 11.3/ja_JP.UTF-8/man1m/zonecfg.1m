'\" te
.\" Copyright (c) 2004, 2015, Oracle and/or its affiliates.All rights reserved.
.TH zonecfg 1M "2015 年 7 月 14 日" "SunOS 5.11" "システム管理コマンド"
.SH 名前
zonecfg \- ゾーン構成の設定
.SH 形式
.LP
.nf
\fBzonecfg\fR \fB-z\fR \fIzonename\fR [-r]
.fi

.LP
.nf
\fBzonecfg\fR \fB-z\fR \fIzonename\fR [-r] \fIsubcommand\fR
.fi

.LP
.nf
\fBzonecfg\fR \fB-z\fR \fIzonename\fR [-r]  \fB-f\fR \fIcommand_file\fR
.fi

.LP
.nf
\fBzonecfg\fR help
.fi

.SH 機能説明
.sp
.LP
\fBzonecfg\fR ユーティリティーは、ゾーンの構成を作成、変更、および一覧表示します。作成機能と変更機能は承認されたユーザーだけが使用でき、ルートの実効ユーザー ID でプロセスを実行する必要があります。それ以外の場合には、読み取り専用モードで実行されます。
.sp
.LP
ゾーン構成は、いくつかのリソースおよびプロパティーで構成されます。
.sp
.LP
ユーザーインタフェースを簡素化するために、\fBzonecfg\fR ではスコープの概念が使用されます。デフォルトのスコープは大域です。
.sp
.LP
次の形式の \fBzonecfg\fR コマンドは、非対話形式で使用されます。 
.sp
.in +2
.nf
zonecfg \fB-z\fR \fIzonename subcommand\fR
.fi
.in -2
.sp

.sp
.LP
\fBzonecfg\fR ユーティリティーは 2 つの編集モードで実行できます。
.sp
.ne 2
.mk
.na
\fBデフォルト\fR
.ad
.RS 19n
.rt  
安定したストレージに格納されている永続的なゾーン構成の作成、変更、および一覧表示が可能です。デフォルトモードで \fBzonecfg\fR によって変更されたパラメータは、稼働中のゾーンには影響しません。変更を有効にするには、ゾーンを \fBzoneadm\fR(1M) \fBapply\fR サブコマンドを使用して再構成するか、リブートする必要があります。
.sp
永続的な構成の変更を許可するには、\fBsolaris.zone.config/zonename\fR の承認が必要です。
.RE

.sp
.ne 2
.mk
.na
\fBライブ\fR
.ad
.RS 19n
.rt  
実行中のゾーンのライブ構成の作成、変更、および一覧表示が可能です。ライブモードで \fBzonecfg\fR によって変更されたパラメータは、確定された直後に反映され、ゾーンの次回のリブートまでアクティブなままになります。ライブモードは実行中のゾーンでのみ使用可能で、\fBsolaris.zone.liveconfig/zonename\fR の承認が必要です。
.sp
ライブゾーン再構成によってサポートされるリソースについての詳細は、それぞれのブランドマニュアルページを参照してください。
.RE

.sp
.LP
ゾーンの作成と変更のほか、\fBzonecfg\fR ユーティリティーは大域ゾーンのリソース管理設定を永続的に指定したり、\fBfs-allowed\fR、データセット、およびデバイスの設定と組み合わせて file-mac-profile を指定することによって、大域ゾーンを不変大域ゾーンとして構成したりできます。
.sp
.LP
以降の文では、「rctl」を「resource control」(リソース制御) の略語として使用します。\fBresource-controls \fR(5) を参照してください。
.sp
.LP
すべてのゾーンに、それぞれ関連するブランドが構成されます。ブランドによって、ゾーン内で使用されるユーザーレベルの環境のみでなく、ゾーンがインストール、ブート、またはシャットダウンされるときのゾーンのさまざまな動作も決まります。ゾーンのインストールが完了したあとは、そのブランドを変更することはできません。デフォルトのブランドは、大域ゾーンにインストールされているディストリビューションによって決まります。ブランドの中には、\fBzonecfg\fR のすべてのプロパティーおよびリソースをサポートしないものがあります。各ブランドについての詳細は、ブランド固有のマニュアルページを参照してください。ブランドの概要については、\fBbrands\fR(5) のマニュアルページを参照してください。
.SS "リソース"
.sp
.LP
次のリソースタイプがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fBattr\fR\fR
.ad
.sp .6
.RS 4n
汎用属性。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcapped-cpu\fR\fR
.ad
.sp .6
.RS 4n
CPU 使用率の制限。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcapped-memory\fR\fR
.ad
.sp .6
.RS 4n
物理メモリー、スワップメモリー、およびロックされたメモリーの制限。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdataset\fR\fR
.ad
.sp .6
.RS 4n
\fBZFS\fR データセット。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdedicated-cpu\fR\fR
.ad
.sp .6
.RS 4n
稼働している間、このゾーン専用に割り当てられるシステムプロセッサのサブセット。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdevice\fR\fR
.ad
.sp .6
.RS 4n
デバイス。
.RE

.sp
.ne 2
.mk
.na
\fB\fBfs\fR\fR
.ad
.sp .6
.RS 4n
ファイルシステム。
.RE

.sp
.ne 2
.mk
.na
\fB\fBib-vhca\fR\fR
.ad
.sp .6
.RS 4n
仮想 InfiniBand デバイス。
.RE

.sp
.ne 2
.mk
.na
\fB\fBport\fR\fR
.ad
.sp .6
.RS 4n
仮想 InfiniBand デバイスのポート。ポートリソースは、\fBib-vhca\fR リソーススコープでのみ有効です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBkeysource\fR\fR
.ad
.sp .6
.RS 4n
暗号化鍵
.RE

.sp
.ne 2
.mk
.na
\fB\fBnet\fR\fR
.ad
.sp .6
.RS 4n
ネットワークインタフェース。
.RE

.sp
.ne 2
.mk
.na
\fB\fBanet\fR\fR
.ad
.sp .6
.RS 4n
自動ネットワークインタフェース。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac\fR\fR
.ad
.sp .6
.RS 4n
ゾーン用に構成される追加の MAC アドレス。mac リソースは \fBanet\fR リソース内でのみ有効です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBadmin\fR\fR
.ad
.sp .6
.RS 4n
委任された管理者。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrctl\fR\fR
.ad
.sp .6
.RS 4n
リソース制御。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsuspend\fR\fR
.ad
.sp .6
.RS 4n
一時停止イメージ
.RE

.sp
.ne 2
.mk
.na
\fB\fBrootzpool\fR\fR
.ad
.sp .6
.RS 4n
ゾーンのインストール専用の ZFS zpool です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvirtual-cpu\fR\fR
.ad
.sp .6
.RS 4n
ゾーン用に構成された仮想 CPU。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool\fR\fR
.ad
.sp .6
.RS 4n
ゾーンに委任される ZFS zpool です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBnpiv\fR\fR
.ad
.sp .6
.RS 4n
ファイバチャネル NPIV ポート。
.RE

.sp
.ne 2
.mk
.na
\fB\fBverified-boot\fR\fR
.ad
.sp .6
.RS 4n
ゾーンのベリファイドブート設定。
.RE

.sp
.LP
複数インスタンスリソースには、リソースの各インスタンスを一意に識別する識別子があります。この識別子は、\fBinfo\fR サブコマンドの出力で、すべての複数インスタンスリソースの各インスタンスの横に表示される数字です。識別子は自動的に生成され、ユーザーが変更することはできず、\fBzonecfg\fR セッションでのみ一貫性があります。
.SS "疎ルートおよび完全ルート非大域ゾーン"
.sp
.LP
Solaris の以前のリリースで使用されていた\fB疎ルートゾーン\fRの概念。この機能は、SVr4 パッケージングシステムと密接に関連しており、ディスク容量の節約と管理作業の軽減を目的としていました。
.sp
.LP
新しいパッケージングシステムである IPS では、ゾーンにインストールするパッケージをより柔軟に選択できるようになっています。したがって、ファイルシステムテクノロジが進歩したこと (特に ZFS \fB複製解除\fR) も考慮すれば、疎ルートゾーンを削除することは非常に実用的です。IPS パッケージングとファイルシステムの進歩が組み合わされた結果、すべてのゾーンに疎ルートゾーンのメリットがもたらされています。
.SS "プロパティー"
.sp
.LP
各リソースタイプには、1 つまたは複数のプロパティーが割り当てられます。また、いくつかの大域プロパティー (特定のリソースのプロパティーではなく、構成全体のプロパティー) も割り当てられます。
.sp
.LP
次のプロパティーがサポートされています。
.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBzonename\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBzonepath\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBautoboot\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBautoshutdown\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBglobal-time\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBbootargs\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBプール\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBlimitpriv\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBブランド\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBcpu-shares\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBhostid\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBmax-lwps\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBmax-msg-ids\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBmax-processes\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBmax-sem-ids\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBmax-shm-ids\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBmax-shm-memory\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBscheduling-class\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBfs-allowed\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
file-mac-profile
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBtenant\fR
.RE

.sp
.ne 2
.mk
.na
\fB(大域)\fR
.ad
.sp .6
.RS 4n
\fBcpu-arch\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBfs\fR\fR
.ad
.sp .6
.RS 4n
\fBdir\fR、\fBspecial\fR、\fBraw\fR、\fBtype\fR、\fBoptions\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBnet\fR\fR
.ad
.sp .6
.RS 4n
\fBaddress\fR、\fBallowed-address\fR、\fBconfigure-allowed-address\fR、\fBphysical\fR、\fBdefrouter\fR、\fBid\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBanet\fR\fR
.ad
.sp .6
.RS 4n
\fBlinkname\fR、\fBlower-link\fR、\fBallowed-address\fR、\fBauto-mac-address\fR、\fBconfigure-allowed-address\fR、\fBdefrouter\fR、\fBmac-address\fR、\fBmac-slot\fR、\fBmac-prefix\fR、\fBmtu\fR、\fBmaxbw\fR、\fBbwshare\fR、\fBpriority\fR、\fBvlan-id\fR、\fBvsi-typeid\fR、\fBvsi-vers\fR、\fBvsi-mgrid\fR、\fBrxfanout\fR、\fBrxrings\fR、\fBtxrings\fR、\fBlink-protection\fR、\fBallowed-dhcp-cids\fR、\fBpkey\fR、\fBlinkmode\fR、\fBetsbw-lcl\fR、\fBcos\fR、\fBid\fR、\fBevs\fR、\fBvport\fR、\fBiov\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac\fR\fR
.ad
.sp .6
.RS 4n
\fBauto-mac-address\fR、\fBmac-address\fR、\fBmac-prefix\fR、\fBid\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBdevice\fR\fR
.ad
.sp .6
.RS 4n
\fBmatch\fR、\fBallow-partition\fR、\fBallow-raw-io\fR、\fBid\fR、\fBstorage\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBib-vhca\fR\fR
.ad
.sp .6
.RS 4n
\fBover-hca\fR、\fBid\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBport\fR\fR
.ad
.sp .6
.RS 4n
\fBpkey\fR、\fBid\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBrctl\fR\fR
.ad
.sp .6
.RS 4n
\fBname\fR、\fBvalue\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBattr\fR\fR
.ad
.sp .6
.RS 4n
\fBname\fR、\fBtype\fR、\fBvalue\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBdataset\fR\fR
.ad
.sp .6
.RS 4n
\fBname\fR、\fBalias\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBdedicated-cpu\fR\fR
.ad
.sp .6
.RS 4n
\fBncpus\fR、\fBimportance\fR
.sp
\fBcpus\fR、\fBcores\fR、\fBsockets\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBvirtual-cpu\fR\fR
.ad
.sp .6
.RS 4n
\fBncpus\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBcapped-memory\fR\fR
.ad
.sp .6
.RS 4n
\fBphysical\fR、\fBswap\fR、\fBlocked\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBcapped-cpu\fR\fR
.ad
.sp .6
.RS 4n
\fBncpus\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBadmin\fR\fR
.ad
.sp .6
.RS 4n
user、auths
.RE

.sp
.ne 2
.mk
.na
\fB\fBrootzpool\fR\fR
.ad
.sp .6
.RS 4n
ストレージ
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool\fR\fR
.ad
.sp .6
.RS 4n
ストレージ、名前
.RE

.sp
.ne 2
.mk
.na
\fB\fBnpiv\fR\fR
.ad
.sp .6
.RS 4n
virtual-port-wwn、over-hba
.RE

.sp
.ne 2
.mk
.na
\fB\fBverified-boot\fR\fR
.ad
.sp .6
.RS 4n
policy、cert
.RE

.sp
.ne 2
.mk
.na
\fB\fBhostkey\fR\fR
.ad
.sp .6
.RS 4n
raw
.RE

.sp
.ne 2
.mk
.na
\fB\fBsuspend\fR\fR
.ad
.sp .6
.RS 4n
path、storage
.RE

.sp
.LP
これらの名前とペアになっているプロパティー値の場合、これらは文字列または文字列のリストのいずれかです。許可されるタイプはプロパティーごとに異なります。単一の値を引用符で囲むこともできます。
.sp
.LP
リストは次の構文で指定します。
.sp
.in +2
.nf
[<\fIvalue\fR>,...]
.fi
.in -2
.sp

.sp
.LP
ここで、各 <\fIvalue\fR> は文字列プロパティーです。値が 1 つだけのリストは、リスト構文を使わずにその値を指定することと等価です。つまり、「foo」は「[foo]」と等価です。リストは空でもかまいません (「[]」と表記)。
.sp
.LP
次にプロパティータイプについて説明します。
.sp
.ne 2
.mk
.na
\fBglobal: \fBzonename\fR\fR
.ad
.sp .6
.RS 4n
ゾーンの名前。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBzonepath\fR\fR
.ad
.sp .6
.RS 4n
ゾーンのファイルシステムのパス。\fBzonepath\fR のデフォルト値は \fB/system/zones/%{\fIzonename\fR}\fR です。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBglobal-time\fR\fR
.ad
.sp .6
.RS 4n
ゾーンがグローバル/システム全体の時間を変更できるか (true の場合)、ゾーン固有の時間を変更できるか (false の場合) を示すブール値。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBautoboot\fR\fR
.ad
.sp .6
.RS 4n
システムがブートするときに、ゾーンを自動的にブートするかどうかを指定するブール値。ゾーンサービスが無効になっている場合は、このプロパティーの設定に関係なく、ゾーンは自動的にブートされません。ゾーンサービスを有効にするには、次のように \fBsvcadm\fR コマンドを使用します。
.sp
.in +2
.nf
# \fBsvcadm enable svc:/system/zones:default\fR
.fi
.in -2
.sp

ゾーンサービスを無効にする場合は、\fBenable\fR を \fBdisable\fR に置き換えます。\fBsvcadm\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBautoshutdown\fR\fR
.ad
.sp .6
.RS 4n
大域ゾーンのクリーンシャットダウン時にこのゾーンに対して実行するアクション。shutdown (クリーンゾーンシャットダウン、デフォルト)、halt、または suspend を指定できます。 
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBbootargs\fR\fR
.ad
.sp .6
.RS 4n
ゾーンのブート時に渡される引数 (オプション)。ただし、\fBzoneadm boot\fR コマンドにオプションが指定された場合は、そちらが優先されます。有効な引数は、\fBzoneadm\fR(1M) で説明されています。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBpool\fR\fR
.ad
.sp .6
.RS 4n
ブート時にこのゾーンをバインドするリソースプールの名前。このプロパティーには \fBdedicated-cpu\fR リソースとの互換性はありません。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBlimitpriv\fR\fR
.ad
.sp .6
.RS 4n
このゾーン内のいずれかのプロセスが入手できる特権のセットの最大数。プロパティーは、\fBpriv_str_to_set\fR(3C) で説明されているコンマ区切りの特権セットの仕様で構成するようにしてください。名前の前にダッシュ (-) または感嘆符 (!) を付けると、結果として得られるセットから特権を除外できます。このコンテキストでは、特別な特権文字列「zone」はサポートされていません。特別な文字列「default」がプロパティーで最初のトークンとして出現する場合、\fBzones\fR(5) で説明されている、リソースとセキュリティーの分離を保持する安全な特権のセットに展開します。プロパティーが不足しているか空である場合、この同じ安全な特権のセットと同等になります。
.sp
システム管理者は、ゾーンの構成を行う際に細心の注意を払う必要があります。一部の特権は、ゾーンのブートに必須のためこのメカニズムを介して除外できません。さらに、ゾーン内のプロセスがほかのゾーンのプロセスに過度に影響を与えてしまうため、特定の特権はゾーンに対して付与されていません。\fBzoneadm\fR(1M) は、ゾーンを「ブート」または「準備」しようとする際、無効な特権がゾーンに追加されるまたはゾーンから削除される場合を示しています。
.sp
特権の説明は、\fBprivileges\fR(5) を参照してください。コマンド「\fBppriv -l\fR」(\fBppriv\fR(1) を参照) は、すべての Solaris 特権の一覧を生成します。\fBppriv\fR で表示されるように特権を指定できます。\fBprivileges\fR(5) では、特権がPRIV_\fIprivilege_name\fR の形式で一覧表示されています。たとえば、このプロパティーで特権 \fIsys_time\fR を指定した場合、これは \fBprivileges\fR(5) では \fBPRIV_SYS_TIME\fR として表示されています。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBbrand\fR\fR
.ad
.sp .6
.RS 4n
ゾーンのブランドタイプ。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBip-type\fR\fR
.ad
.sp .6
.RS 4n
ゾーンは独自の排他的な IP のインスタンスを持つ (デフォルト) か、大域ゾーンと IP インスタンスを共有することができます。デフォルトゾーンテンプレート \fBSYSdefault\fR では、\fBip-type\fR は \fBexclusive\fR に設定されます。追加で提供される \fBSYSdefault-shared-ip \fR テンプレートでは、\fBip-type\fR は shared に設定されます。
.sp
このプロパティーは \fBexclusive\fR および \fBshared\fR の値を取ります。
.sp
共有 IP 機能は、将来のリリースで削除される可能性があります。排他的 IP を使用することを強くお勧めします。この機能が削除されると、この機能を使用するように構成されているゾーンはブートしなくなります。
.sp
そのゾーンを引き続き使用するには、IP タイプが \fBshared\fR に設定されているゾーンをすべて、IP タイプが \fBexclusive\fR に設定されるように変換してください。ほとんどの場合は、これにより \fBzonecfg\fR(1M) の「net」リソースが「anet」リソースに置き換えられます。大域ゾーンの IPMP グループの一部であるインタフェースを使用している共有 IP ゾーンが存在する場合は、DLMP アグリゲーションの使用に切り替えるようにしてください。大域ゾーンで、古い IPMP インタフェース上に DLMP アグリゲーションを作成したあと、lower-link がその DLMP アグリゲーションを指す \fBzonecfg\fR(1M) の「anet」リソースを作成します。共有 IP の制限されたサポートが、特定のマルチレベルサーバー Trusted Extensions 構成に対して保持されます。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBhostid\fR\fR
.ad
.sp .6
.RS 4n
ゾーンは、システムを統合しやすくするために、32 ビットのホスト識別子をエミュレートできます。ゾーンの \fBhostid\fR プロパティーはデフォルトで空になっており、ゾーンがホスト識別子をエミュレートしないことを意味しています。ゾーンのホスト識別子には、0 から FFFFFFFE の 16 進値を指定してください。接頭辞 \fB0x\fR または \fB0X\fR はオプションです。大文字と小文字の両方の 16 進数を使用できます。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBfs-allowed\fR\fR
.ad
.sp .6
.RS 4n
ゾーン内にマウントできる追加ファイルシステムのコンマ区切りリスト (たとえば、\fBufs,pcfs\fR)。デフォルトでは、\fBhsfs\fR(7FS) とネットワークファイルシステムだけがマウントできます。
.sp
このプロパティーは、\fBadd fs\fR または \fBadd dataset\fR によってゾーンにマウントされたファイルシステムには適用されません。
.LP
注意 - 
.sp
.RS 2
デフォルト以外のファイルシステムマウントを許可すると、ゾーン管理者が偽のファイルシステムイメージでシステムに損害を与えることが可能になるため、このような許可はサポートされていません。
.RE
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBfile-mac-profile\fR\fR
.ad
.sp .6
.RS 4n
読み取り専用ポリシーから除外されるファイルシステムの部分、つまりゾーンが書き込むことができるファイルシステムの部分を定義します。
.sp
このプロパティーでは現在、\fBnone\fR、\fBstrict\fR、\fBdynamic-zones\fR、\fBfixed-configuration\fR、および \fBflexible-configuration\fR の 5 つの値がサポートされています。
.sp
\fBnone\fR を指定すると、このゾーンは通常の r/w ゾーンと全く同じになります。\fBstrict\fR を指定すると、読み取り専用ポリシーに対する例外を許可しません。\fBfixed-configuration\fR を指定すると、構成ファイルが格納されているディレクトリを除いて、\fB/var\fR の内部とそれ以下にあるファイルへの書き込みが許可されます。
.sp
.in +2
.nf
/var/ld
/var/lib/postrun
/var/pkg
/var/spool/cron,
/var/spool/postrun
/var/svc/manifest
/var/svc/profiles
.fi
.in -2
.sp

\fBdynamic-zones\fR は \fBfixed-configuration\fR と同じですが、非大域ゾーンとカーネルゾーンの作成および破棄が許可されます。このプロファイルは、大域ゾーン (カーネルゾーンの大域ゾーンを含む) に対してのみ有効です。
.sp
\fBflexible-configuration\fR は \fBdynamic-zones\fR と同じですが、\fB/etc\fR 内のファイルへの書き込みも追加で許可されます。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBtenant\fR\fR
.ad
.sp .6
.RS 4n
.LP
注 - 
.sp
.RS 2
このプロパティーと、anet リソースの \fBevs\fR および \fBvport\fR プロパティーを使用するには、エラスティック仮想スイッチ (EVS) IPS パッケージをインストールし、\fBevsadm\fR(1M) マニュアルページと\fI『Managing Network Virtualization and Network Resources in Oracle Solaris 11.3 』\fRの説明に従って、EVS コントローラを構成します。 
.RE
VNIC anet が接続する EVS を所有するテナントの名前を定義します。\fBevsadm\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBcpu-arch\fR\fR
.ad
.sp .6
.RS 4n
solaris-kz ブランドゾーンに構成される移行クラスを指定します。現在のところ、これは SPARC プラットフォームでのみ機能し、x86 プラットフォームではサポートされていません。このプロパティーの指定可能な値は次のとおりです。 
.sp
.ne 2
.mk
.na
\fBgeneric\fR
.ad
.RS 20n
.rt  
カーネルゾーンは CPU タイプに依存しない移行を実行できますが、T4 よりも古いシステムに対しては実行できません。
.RE

.sp
.ne 2
.mk
.na
\fBmigration-class1\fR
.ad
.RS 20n
.rt  
カーネルゾーンは SPARC T4、SPARC T5、SPARC M5、SPARC M6、および SPARC M7 の間で CPU タイプ間移行を実行できます。
.RE

.sp
.ne 2
.mk
.na
\fBsparc64-class1\fR
.ad
.RS 20n
.rt  
カーネルゾーンは Fujitsu M10 と M10+ の間で、CPU タイプ間移行を実行できます。
.RE

値が設定されていない場合、カーネルゾーンの CPU 移行クラスはホストと同じになります。これはホスト CPU クラスの互換性がある CPU タイプ間で移行できます。
.sp
カーネルゾーンの CPU 移行クラスは、ホストの CPU クラスの制限を超えることはできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBfs\fR: dir、special、raw、type、options\fR
.ad
.sp .6
.RS 4n
ファイルシステムをマウントする方法や場所などを決めるために必要な値。\fBmount\fR(1M)、\fBmount\fR(2)、\fBfsck\fR(1M)、および \fBvfstab\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBnet\fR: address、allowed-address、configure-allowed-address、physical、defrouter、id\fR
.ad
.sp .6
.RS 4n
\fBnet\fR リソースは、ゾーンに対する物理ネットワークリソースの割り当てを表します。割り当ての前に、そのリソースが大域ゾーンに存在する必要があります。
.sp
ネットワークインタフェースのネットワークアドレスと物理インタフェース名。ネットワークアドレスは、次のいずれかになります。
.RS +4
.TP
.ie t \(bu
.el o
有効な IPv4 アドレス。後続の「\fB/\fR」とプレフィックス長は任意です。
.RE
.RS +4
.TP
.ie t \(bu
.el o
有効な IPv6 アドレス。後続の「\fB/\fR」とプレフィックス長は必須です。
.RE
.RS +4
.TP
.ie t \(bu
.el o
IPv4 アドレスに解決されるホスト名。
.RE
IPv6 アドレスに解決されるホスト名はサポートされていません。
.sp
物理インタフェース名はネットワークインタフェース名です。
.sp
省略可能なデフォルトルートの値は、ネットワークアドレスと同様に指定しますが、後ろに \fB/\fR (スラッシュ) とネットワーク接頭辞長を決して付けないでください。\fBdefrouter\fR 機能を正しく使用できるようにするには、このプロパティーを使用するゾーンを、大域ゾーンが常駐するサブネットとは異なるサブネット上に配置してください。また、異なる \fBdefrouter\fR 設定を使用する各ゾーン (あるいはゾーンセット) を異なるサブネット上に配置してください。
.sp
ID 値はネットワークインタフェースの識別に使用される正の整数です。\fBsolaris-kz\fR(5) を参照してください。 
.sp
ゾーンは排他的 IP か共有 IP のいずれかに構成できます。共有 IP ゾーンでは、物理プロパティーとアドレスプロパティーの両方を設定する必要があります。デフォルトルートの設定はオプションです。物理プロパティーで指定したインタフェースは、非大域ゾーンをブートする前に大域ゾーンに plumb する必要があります。ただし、そのインタフェースが大域ゾーンで使用されない場合は、そのインタフェースを大域ゾーンで \fBdown\fR に構成するようにしてください。そのインタフェースのデフォルトルートがここで指定されるはずです。\fBallowed-address\fR プロパティーは共有 IP ゾーン用には設定できません。
.sp
排他的 IP ゾーンでは、\fBphysical\fR プロパティーを設定する必要があり、\fBaddress\fR プロパティーは設定してはいけません。また、排他的 IP ゾーンが使用できる IP アドレスのセットは、\fBallowed-address\fR プロパティーを指定して制限できます。\fBallowed-address\fR が指定されていない場合、排他的 IP ゾーンは、関連付けられた \fBphysical\fR インタフェース上の任意の IP アドレスをネットリソースに使用できます。そうではなく、\fBallowed-address\fR が指定されている場合、排他的 IP ゾーンは、\fBallowed-address\fR リストにない IP アドレスを \fBphysical\fR アドレスに使用できません。\fBconfigure-allowed-address\fR が \fBtrue\fR に設定されている場合、ゾーンがブートするたびに \fBallowed-address\fR で指定されたアドレスがインタフェース上に自動的に構成されます。これが \fBfalse\fR に設定されている場合、\fBallowed-address\fR はゾーンのブート時に構成されません。デフォルトでは、\fBallowed-address\fR が指定されると \fBconfigure-allowed-address\fR は \fBtrue\fR に構成されます。さらに、\fBallowed-address\fR リストが提供されている場合は、\fBdefrouter\fR プロパティーも必要に応じて指定できます。ただし、\fBdefrouter\fR 値が指定されて \fBconfigure-allowed-address\fR が \fBfalse\fR に構成された場合、\fBdefrouter\fR 値は無視されて、該当する警告メッセージが表示されます。\fBphysical\fR プロパティーに指定されたインタフェースを大域ゾーンで使用してはいけません。\fBallowed-address\fR とデフォルトルーターが \fBzonecfg\fR によって指定された場合、これらは、非大域排他的 IP ゾーンで \fBipadm\fR(1M) によってインタフェースが有効にされているとき (通常はゾーンのブート中) に、そのインタフェースに適用されます。非大域排他的 IP ゾーンは、ほかのどのアドレスをそのインタフェースに適用することもできなくなります。また、指定された IP バージョンの別のソースアドレスを持つパケットを送信することもできなくなります。\fBzonecfg\fR によって設定されたデフォルトのルーターは、\fB-p\fR フラグと \fBroute\fR(1M) を使用して非大域排他的 IP ゾーン内から恒久的に削除することはできません。
.sp
複数の排他的 IP ゾーン間で 1 つのデータリンクを共有することはできません。
.sp
solaris-kz ブランドゾーンへの IPoIB VNIC の割り当ては、現在サポートされていません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBanet\fR: linkname、lower-link、allowed-address、auto-mac-address、configure-allowed-address、defrouter、mac-address、mac-slot、mac-prefix、mtu、maxbw、bwshare、priority、vlan-id、vsi-typeid、vsi-vers、vsi-mgrid、rxfanout、rxrings、txrings、link-protection、allowed-dhcp-cids、pkey、linkmode、etsbw-lcl、cos、id、evs、vport、lro、mac、iov\fR
.ad
.sp .6
.RS 4n
\fBanet\fR リソースは、排他的 IP ゾーンについてのネットワークリソースの自動作成を表します。\fBzonecfg\fR がデフォルトの \fBSYSdefault\fR テンプレートを使用してゾーンを作成すると、次のプロパティーを持つ \fBanet\fR リソースがゾーン構成に自動的に入ります。
.sp
.in +2
.nf
linkname=net0
lower-link=auto
mac-address=default
link-protection=mac-nospoof
.fi
.in -2
.sp

そのようなゾーンのブート時に、ゾーンの一時 VNIC または IPoIB データリンクが自動的に作成されます。ゾーンが停止すると、VNIC または IPoIB データリンクは削除されます。
.LP
注 - 
.sp
.RS 2
EVS および VPort を使用するには、エラスティック仮想スイッチ (EVS) IPS パッケージをインストールし、\fBevsadm\fR(1M) マニュアルページおよび\fI『Managing Network Virtualization and Network Resources in Oracle Solaris 11.3 』\fRの説明に従って EVS コントローラを構成します。 
.RE
EVS は、1 つまたは複数のサーバー (物理マシン) にまたがる仮想スイッチです。これは分離された L2 セグメントを示し、そのセグメントに接続されている VNIC anet を持つゾーン間のネットワーク接続を提供します。VPort は 3 タプル <tenant、evs、vport> によって一意に識別されるため、VNIC anet を EVS に接続する必要がある場合は、この情報をゾーンの構成に含める必要があります。
.LP
注 - 
.sp
.RS 2
EVS に接続する VNIC anet は、VPort からほかのプロパティーを取得するため、許可される anet プロパティーは \fBlinkname\fR のみです。
.RE
サポートされるプロパティーについては、下記を参照してください。これらのプロパティーはすべてオプションです。大域ゾーンだけが、自動的に作成された VNIC または IPoIB データリンクまたはそのプロパティーを変更できます。\fBzonecfg\fR に設定されたプロパティーを VNIC または IPoIB リンクの作成時に VNIC または IPoIB リンクに割り当てることができない場合、ゾーンはブートに失敗します。
.sp
.ne 2
.mk
.na
\fB\fBlinkname\fR\fR
.ad
.sp .6
.RS 4n
自動作成される VNIC または IPoIB データリンクの名前を指定します。デフォルトでは、このプロパティーは、\fBnet\fR\fIN\fR という形式の (ゾーンの) 最初に利用可能な名前に自動的に設定されます。ここで、\fIN\fR は負でない整数です。たとえば、\fBnet0\fR、\fBnet1\fR などのようになります。\fBinfo\fR サブコマンドによって、自動的に選択される \fBlinkname\fR が表示されます。
.sp
大域ゾーンを含む複数のゾーンが、同じ名前のリンクを同時に持つことができます。
.RE

.sp
.ne 2
.mk
.na
\fBevs\fR
.ad
.br
.na
\fBvport\fR
.ad
.sp .6
.RS 4n
EVS が指定され、オプションで VPort が指定された場合、VNIC anet は、その VPort でその EVS に接続されることによって作成されます。グローバルテナントプロパティーが指定された場合、EVS はそのテナントの名前空間内で検索されます。
.sp
VPort が指定された場合、VPort の SLA プロパティー (\fBmaxbw\fR、\fBcos\fR、および \fBpriority\fR)、IP アドレス、およびデフォルトのルーターの MAC アドレスは VNIC によって継承されます。VPort が指定されない場合、EVS コントローラはシステム VPort (IP アドレス、MAC アドレス、および EVS のデフォルトの SLA プロパティーを持つ) を生成し、VNIC はこのシステム VPort に接続します。
.sp
\fBallowed-ips\fR VNIC プロパティーを VPort の IP アドレスのプロパティーに設定することによって、IP アドレスのスプーフィング対策が VNIC 上で有効になります。VPort の IP アドレスは、ゾーンがブートするたびにインタフェース上で自動的に構成されます。VPort に関連付けられているデフォルトルーター IP アドレスも、ゾーン内で自動的に構成されます。 
.sp
EVS および VPort の詳細については、\fBevsadm\fR(1M) マニュアルページを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlower-link\fR\fR
.ad
.sp .6
.RS 4n
VNIC または IPoIB が作成されるリンクを指定します。このプロパティーのデフォルト値は、Ethernet リンクでは \fBauto\fR です。\fBpkey\fR を指定する場合、\fBlower-link\fR を有効な IPoIB \fBphys\fR クラスデータリンクとともに指定する必要があります。管理者は、\fBanet\fR リソースを追加するとき、値を明示的に指定できます。リンクには、\fBdladm create-vnic\fR の \fB-l\fR オプションまたは \fBdladm create-part\fR の \fB-l\fR オプションの引数として受け入れられるすべてのリンクを使用できます (\fBdladm\fR(1M) を参照してください)。このプロパティーが \fBlinkname\fR (\fBauto\fR 以外) に設定され、そのリンクが存在しない場合、ゾーンはブートに失敗します。\fBauto\fR に設定されると、\fBzoneadmd\fR(1M) デーモンは、ゾーンがブートするたびに、VNIC が作成されるリンクを自動的に選択します。ブート中に VNIC を自動的に作成するためにデフォルトの \fBlower-link\fR を選択すると、すべての IPoIB データリンクがスキップされます。リンクは次の発見的方法を使用して選択されます。
.RS +4
.TP
1.
リンク状態が \fBup\fR のリンクアグリゲーション。
.RE
.RS +4
.TP
2.
物理 Ethernet リンクのうち、次のようなリンクを選択します。
.RS +4
.TP
a.
リンク状態が \fBup\fR
.RE
.RS +4
.TP
b.
使用可能な VF の最大数 (\fBiov=auto/on\fR の場合のみ)
.RE
.RS +4
.TP
c.
使用可能な空き \fBmac-slots\fR の最大数
.RE
.RS +4
.TP
d.
アルファベット順にもっとも小さい名前を持つもの
.RE
.RE
.RS +4
.TP
3.
\fBup\fR のものがない場合、\fBnet0\fR という名前のデータリンクがあれば、それが使用されます。
.RE
上記のどれも満たすことができない場合、ゾーンはブートに失敗します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBallowed-address\fR\fR
.ad
.sp .6
.RS 4n
\fBnet\fR リソースの排他的 IP ゾーンについての \fBallowed-address\fR プロパティーの説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBauto-mac-address\fR\fR
.ad
.sp .6
.RS 4n
\fBmac-address\fR プロパティー (下記参照) が \fBrandom\fR または \fBauto\fR に設定されている場合に、ゾーンで永続的に同じアドレスが再取得されるように、ランダムに生成された MAC アドレスのリストを保持します。ランダムに生成されたアドレスをリセットするには、管理者がこのプロパティーをクリアする必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBbwshare\fR\fR
.ad
.sp .6
.RS 4n
VNIC の帯域幅共有を指定します。\fBdladm\fR(1M) の \fBbwshare\fR プロパティーを参照してください。このプロパティーは現在、特定の NIC でのみサポートされています。
.RE

.sp
.ne 2
.mk
.na
\fB\fBconfigure-allowed-address\fR\fR
.ad
.sp .6
.RS 4n
\fBnet\fR リソースの排他的 IP ゾーンについての \fBconfigure-allowed-address\fR プロパティーの説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcos\fR\fR
.ad
.sp .6
.RS 4n
データリンクに関連付けられた 802.1p の優先度。このプロパティーの詳細は、\fBdladm\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdefrouter\fR\fR
.ad
.sp .6
.RS 4n
\fBnet\fR リソースの排他的 IP ゾーンについての \fBdefrouter\fR プロパティーの説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBetsbw-lcl\fR\fR
.ad
.sp .6
.RS 4n
TX 側の ETS 帯域幅を示します。このプロパティーの詳細は、\fBdladm\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac-address\fR\fR
.ad
.sp .6
.RS 4n
指定した値またはキーワードに基づいて、MAC アドレスの VNIC のリストを設定します。リストの要素がキーワードでない場合は、ユニキャスト MAC アドレスとして解釈されます。このプロパティーは、IPoIB データリンクではサポートされません。サポートされるキーワードは次のとおりです。
.RS +4
.TP
.ie t \(bu
.el o
\fBfactory\fR: ファクトリ MAC アドレスを VNIC に割り当てます。ファクトリ MAC アドレスが要求された場合、\fBmac-slot\fR プロパティーを使用して MAC アドレススロット識別子を指定できます。そうでない場合、次に使用可能なファクトリ MAC アドレスが使用されます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBrandom\fR: ランダムな MAC アドレスを VNIC に割り当てます。\fBmac-prefix\fR プロパティーを使用して接頭辞を指定します。そうでない場合、ローカルビットが設定された有効な IEEE OUI で構成されたデフォルトの接頭辞が使用されます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBauto\fR: 可能であれば、NIC でサポートしている場合は最初にランダムな \fBmac-address\fR の割り当てを試み、そうでない場合は出荷時の \fBmac-address\fR の割り当てを試みます。これがデフォルト値です。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBdefault\fR: プラットフォーム固有の割り当て方法を使用します。ほとんどの場合、これはランダムなアドレス (上記の「random」を参照) の割り当てを試みます。現在のプラットフォームが Oracle Solaris カーネルゾーンの場合、出荷時の MAC アドレスが割り当てられます (上記の「factory」を参照)。
.RE
ランダムな MAC アドレスが選択された場合、生成されたアドレスは、ゾーンのブートやゾーンの切り離し、接続を行なったあとも保持されます。これにより、ゾーンは安定したクライアント ID を維持することによって DHCP リースを保持できるほか、安定した MAC アドレスを持つことによるほかの利点を活用することができます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac-prefix\fR\fR
.ad
.sp .6
.RS 4n
ランダムな MAC アドレスの割り当てがリクエストされた場合に使用する MAC アドレス接頭辞のリストを指定します。それ以外の場合、このプロパティーは無視されます。このプロパティーは、IPoIB データリンクでは無効です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac-slot\fR\fR
.ad
.sp .6
.RS 4n
出荷時の MAC アドレスがリクエストされた場合に使用する MAC アドレススロット識別子のリストを指定します。それ以外の場合、このプロパティーは無視されます。このプロパティーは、IPoIB データリンクでは無効です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmtu\fR\fR
.ad
.sp .6
.RS 4n
VNIC の最大転送単位 (バイト)。\fBdladm\fR(1M) の \fBmtu\fR プロパティーを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmaxbw\fR\fR
.ad
.sp .6
.RS 4n
VNIC の全二重帯域幅を指定します。\fBdladm\fR(1M) の \fBmaxbw\fR プロパティーを参照してください。デフォルトでは、VNIC は \fBlower-link\fR に設定された \fBmaxbw\fR を使用し、何も設定されない場合は帯域幅制限はありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpriority\fR\fR
.ad
.sp .6
.RS 4n
VNIC の相対的な優先度を指定します。サポートされる値とデフォルトについては、\fBdladm\fR(1M) の \fBpriority\fR プロパティーを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlro\fR\fR
.ad
.sp .6
.RS 4n
ラージレシーブオフロード。有効な値は、off、on、または auto です。値 auto は、低いリンクの LRO 設定を継承する場合に設定します。このプロパティーは Ethernet リンクに対してのみ有効です。\fBdladm\fR(1M) の説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvlan-id\fR\fR
.ad
.sp .6
.RS 4n
この VNIC の VLAN または PVLAN タグを使用可能にして、VLAN タグの ID を指定します。デフォルト値は存在しません。つまり、このプロパティーを設定しないと、VNIC はどの VLAN にも参加しません。このプロパティーは、IPoIB データリンクではサポートされません。サポートされる VLAN ID 形式については、\fBdladm\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvsi-typeid\fR\fR
.ad
.sp .6
.RS 4n
VNIC に関連付けられた VSI タイプ ID を指定します。\fBdladm\fR(1M) の説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvsi-vers\fR\fR
.ad
.sp .6
.RS 4n
VNIC に関連付けられた VSI バージョンを指定します。\fBdladm\fR(1M) の説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvsi-mgrid\fR\fR
.ad
.sp .6
.RS 4n
VNIC に関連付けられた VSI マネージャー ID を指定します。\fBdladm\fR(1M) の説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrxfanout\fR\fR
.ad
.sp .6
.RS 4n
受信側ファンアウトスレッドの数を指定します。\fBdladm\fR(1M) の説明を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrxrings\fR\fR
.ad
.sp .6
.RS 4n
VNIC の受信リングを指定します。サポートされる値とデフォルトについては、\fBdladm\fR(1M) の \fBrxrings\fR プロパティーを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtxrings\fR\fR
.ad
.sp .6
.RS 4n
VNIC の送信リングを指定します。サポートされる値とデフォルトについては、\fBdladm\fR(1M) の \fBtxrings\fR プロパティーを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlink-protection\fR\fR
.ad
.sp .6
.RS 4n
コンマ区切り値を使用して、1 つ以上のリンク保護のタイプを使用可能にします。サポートされる値については、\fBdladm\fR(1M) の \fBprotection\fR プロパティーを参照してください。このデフォルト値は \fBmac-nospoof\fR です。
.sp
\fBip-nospoof\fR をこのプロパティーに追加しても、\fBallowed-address\fR も設定しないかぎり効果はありません。\fBallowed-address\fR を設定すると、\fBip-nospoof\fR が \fBlink-protection\fR のセットに暗黙に追加され、\fBallowed-address\fR をクリアするとこれが削除されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBallowed-dhcp-cids\fR\fR
.ad
.sp .6
.RS 4n
このプロパティーを設定すると、VNIC の \fBdhcp-nospoof\fR が有効になります。詳細は、\fBdladm\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkey\fR\fR
.ad
.sp .6
.RS 4n
InfiniBand パーティションキー値を 16 進数で指定します。\fBpkey\fR は、\fB0x\fR 接頭辞が付いているかどうかに関係なく、常に 16進数として扱われます。このプロパティーは、IPoIB データリンクのみで有効です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlinkmode\fR\fR
.ad
.sp .6
.RS 4n
IB パーティションデータリンク上のリンクトランスポートのサービスタイプを設定します。デフォルト値は \fBcm\fR です。このプロパティーは、IPoIB データリンクのみで有効です。有効な値は次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fBcm\fR\fR
.ad
.sp .6
.RS 4n
接続モード。このモードでは 65520 のデフォルトの MTU を使用し、65535 バイトの最大 MTU をサポートします。リモートノードに対して接続モードが使用できない場合は、代わりに低信頼データグラムモードが自動的に使用されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBud\fR\fR
.ad
.sp .6
.RS 4n
低信頼データグラムモード。このモードでは 2044 のデフォルトの MTU を使用し、4092 バイトの最大 MTU をサポートします。
.RE

.sp
.ne 2
.mk
.na
\fB\fBiov\fR\fR
.ad
.sp .6
.RS 4n
このプロパティーを設定すると、\fBsolaris-kz\fR ブランドゾーンでネットワークデバイスの SR-IOV VF を使用できます。このプロパティーの指定可能な値は次のとおりです。
.RS +4
.TP
.ie t \(bu
.el o
\fBauto\fR: 使用可能な場合は VF を使用し、使用できない場合は、準仮想デバイスの使用にフォールバックします。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBon\fR: VF を使用する必要があります。VF が使用できない場合は、anet の作成が失敗します。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBoff\fR: VF を使用しません (デフォルト)。
.RE
このプロパティーが auto/on であり、かつ lower-link が指定されていない場合、下位リンクの選択ロジックでは、これをその他の条件に加えて考慮に入れます (詳細は、lower-link プロパティーを参照してください)。 
.sp
このプロパティーの制限を次に示します。
.RS +4
.TP
.ie t \(bu
.el o
\fBsolaris-kz\fR ブランドゾーンでのみ使用できます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
lower-link、id、mac-address、mac-prefix、mac-slot を除く、すべての anet プロパティーと互換性がありません。
.RE
.RS +4
.TP
.ie t \(bu
.el o
このプロパティーが auto/on に設定されていると、\fBzoneadm\fR migrate/suspend は失敗します。
.RE
.RE

.RE

ID 値はネットワークインタフェースの識別に使用される正の整数です。\fBsolaris-kz\fR(5) を参照してください。 
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac\fR: auto-mac-address、mac-address、mac-prefix、id\fR
.ad
.sp .6
.RS 4n
mac リソースは \fBanet\fR リソースに MAC アドレスを追加するために使用され、プライマリ MAC アドレスは \fBanet:mac-address\fR プロパティーによって指定されます。
.sp
.ne 2
.mk
.na
\fB\fBauto-mac-address\fR\fR
.ad
.RS 20n
.rt  
\fBmac-address\fR プロパティー (下記参照) が random または auto に設定されている場合に、ゾーンで永続的に同じアドレスが再取得されるように、ランダムに生成された MAC アドレスのリストを保持します。ランダムに生成されたアドレスをリセットするには、管理者がこのプロパティーをクリアする必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac-address\fR\fR
.ad
.RS 20n
.rt  
指定した値またはキーワードに基づいて、MAC アドレスの VNIC のリストを設定します。リストの要素がキーワードでない場合は、ユニキャスト MAC アドレスとして解釈されます。このプロパティーは、IPoIB データリンクではサポートされません。サポートされるキーワードは次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fBfactory\fR:\fR
.ad
.RS 12n
.rt  
ファクトリ MAC アドレスを VNIC に割り当てます。ファクトリ MAC アドレスが要求された場合、\fBmac-slot\fR プロパティーを使用して MAC アドレススロット識別子を指定できます。そうでない場合、次に使用可能なファクトリ MAC アドレスが使用されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrandom\fR:\fR
.ad
.RS 12n
.rt  
ランダムな MAC アドレスを VNIC に割り当てます。\fBmac-prefix\fR プロパティーを使用して接頭辞を指定します。そうでない場合、ローカルビットが設定された有効な IEEE OUI で構成されたデフォルトの接頭辞が使用されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBauto\fR:\fR
.ad
.RS 12n
.rt  
NIC がサポートする場合はランダムな MAC アドレスを割り当て、そうでない場合は \fBfactory mac-address\fR を割り当てようとします。これがデフォルト値です。
.RE

ランダムな MAC アドレスが選択された場合、生成されたアドレスは、ゾーンのブートやゾーンの切り離し、接続を行なったあとも保持されます。これにより、ゾーンは安定したクライアント ID を維持することによって DHCP リースを保持できるほか、安定した MAC アドレスを持つことによるほかの利点を活用することができます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmac-prefix\fR\fR
.ad
.RS 20n
.rt  
ランダムな MAC アドレスの割り当てがリクエストされた場合に使用する MAC アドレス接頭辞のリストを指定します。それ以外の場合、このプロパティーは無視されます。このプロパティーは、IPoIB データリンクでは無効です。
.sp
\fBid\fR 値は、リソースを一意に識別するために使用される正の整数です。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBib-vhca\fR: over-hca、id、port\fR
.ad
.sp .6
.RS 4n
\fBib-vhca\fR リソースは、カーネルゾーンの仮想 Infiniband HCA デバイスの自動作成を表します。このようなゾーンがブートすると、一時的な VHCA が作成されます。これは、そのゾーンが停止すると破棄されます。
.sp
サポートされるプロパティーについては、下記を参照してください。これらのプロパティーはすべてオプションです。自動的な VHCA を変更できるのは、ホストシステムの大域ゾーンだけです。\fBzonecfg\fR で設定されたプロパティーを VHCA の作成時にその VHCA に割り当てることができない場合、そのゾーンはブートに失敗します。
.sp
.ne 2
.mk
.na
\fB\fBover-hca\fR\fR
.ad
.RS 12n
.rt  
仮想 InfiniBand デバイスの構成のために使用する物理 InfiniBand デバイスを設定します。このデバイス名は、\fBibadm\fR コマンドで一覧表示されます。詳細は、\fBibadm\fR(1M) のマニュアルページを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBid\fR\fR
.ad
.RS 12n
.rt  
\fBib-vhca\fR リソースを一意に識別します。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBport\fR: pkey、id\fR
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
\fB\fBpkey\fR\fR
.ad
.RS 8n
.rt  
InfiniBand パーティションキー値を指定します。pkey 値には、キーワードまたは 16 進数値のコンマ区切りリストを指定できます。16 進数値を指定するために \fB0x\fR 接頭辞を使用してはいけません。pkey に許可されているキーワードは次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fBauto\fR\fR
.ad
.RS 8n
.rt  
指定された \fBover-hca\fR 値に基づいて、自動的に生成された pkey 値を割り当てます。これがデフォルト値です。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBid\fR\fR
.ad
.RS 8n
.rt  
\fBId\fR は、ポートリソースを一意に識別するために使用されます。各 \fBid\fR は物理ポート番号に対応します。
.RE

ゾーンブート上の各ポートに割り当てられた GUID は、実行中のゾーンのライブ構成を検査することによって取得できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdevice\fR: match、allow-partition、allow-raw-io、id\fR
.ad
.sp .6
.RS 4n
照合するデバイス名。これは、照合する glob パターンにすることも絶対パス名にすることもできます。デバイスリソースと別名を付けたデータセットは、\fB/dev/zvol\fR 内で名前空間の競合が発生する可能性があります。\fBdev\fR(7FS) を参照してください。
.sp
または、ストレージ URI にストレージプロパティーを設定できます (\fBsuri\fR(5) を参照)。この場合、ゾーンのブート時に SURI がマップされ、一致するデバイスノードをゾーン内で使用できます。ゾーンが停止すると SURI がマップ解除されます。この場合、allow-partition は自動的に true に設定されます。
.sp
\fBallow-partition\fR と \fBallow-raw-io\fR はどちらも \fBtrue\fR または \fBfalse\fR に設定でき、デフォルトで \fBfalse\fR になっています。「\fB注意事項\fR」 を参照してください。
.LP
注 - 
.sp
.RS 2
一般に、ゾーンにデバイスを追加すると、システムのセキュリティーが損なわれる可能性があります。「\fB注意事項\fR」を参照してください。
.RE
ID 値は仮想ブロックデバイスの識別に使用される正の整数です。\fBsolaris-kz\fR(5) を参照してください。 
.RE

.sp
.ne 2
.mk
.na
\fB\fBrctl\fR: name、value\fR
.ad
.sp .6
.RS 4n
リソース制御の名前、特権、制限、アクション。\fI\fR\fI\fR\fI\fR\fBprctl\fR(1) および \fBrctladm\fR(1M) を参照してください。rctl の値の望ましい設定方法は、特定の rctl に関連する大域的なプロパティー名を使用する方法です。
.sp
次のような形式で複数の rctl の値を指定できます。
.sp
.in +2
.nf
(priv=<\fIvalue\fR>,limit=<\fIvalue\fR>,action=<\fIvalue\fR>)
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fB\fBvirtual-cpus\fR: ncpus\fR
.ad
.sp .6
.RS 4n
\fBsolaris-kz\fR ブランドゾーンに構成される仮想 CPU の数を指定します。\fBsolaris-kz\fR(5) を参照してください。 
.RE

.sp
.ne 2
.mk
.na
\fB\fBattr\fR: name、type、value\fR
.ad
.sp .6
.RS 4n
汎用属性の名前、型、および値。\fBtype\fR は、\fBint\fR、\fBuint\fR、\fBboolean\fR、\fBstring\fR のいずれかでなければなりません。値には、その型の値を指定する必要があります。\fBuint\fR は符号なしの (負でない) 整数です。
.sp
「attr」リソースの「name」プロパティーの構文には、ゾーン名と同じような制限がありますが、相違点もあります。つまり、英数字で始める必要がありますが、英数字以外にハイフン (-)、下線 (_)、およびピリオド (.) も使用できます。「zone」で始まる属性名はシステム用に予約されています。また、\fBautoboot\fR および \fBglobal-time\fR 大域プロパティーの値は、必ず「true」または「false」にしてください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdataset\fR: name、alias\fR
.ad
.sp .6
.RS 4n
ゾーン内からアクセスする \fBZFS\fR データセットの名前。\fBzfs\fR(1M) を参照してください。各データセットがゾーン内の仮想 ZFS プールとして表示されるように、データセットに別名が付けられます。別名はこの仮想プールの名前です。ZFS プール名に適用される名前制限と、その結果、データセットの別名の値にも適用される名前制限については、\fBzpool\fR(1M) を参照してください。別名 \fBrpool\fR はゾーンの rpool データセットから予約されています。別名を付けたデータセットとデバイスリソースは、\fB/dev/zvol\fR 内で名前空間の競合が発生する可能性があります。\fBdev\fR(7FS) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBcpu-shares\fR\fR
.ad
.sp .6
.RS 4n
このゾーンに割り当てられている公平配分スケジューラ (FSS) の配分数。このプロパティーには \fBdedicated-cpu\fR リソースとの互換性はありません。このプロパティーは、\fBzone.cpu-shares\fR rctl を設定するための望ましい方法です。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBmax-lwps\fR\fR
.ad
.sp .6
.RS 4n
このゾーンの、同時に使用できる LWP の最大数。このプロパティーは、\fBzone.max-lwps\fR rctl を設定するための望ましい方法です。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBmax-msg-ids\fR\fR
.ad
.sp .6
.RS 4n
このゾーンに許容されるメッセージキュー ID の最大数。このプロパティーは、\fBzone.max-msg-ids\fR rctl を設定するための望ましい方法です。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBmax-processes\fR\fR
.ad
.sp .6
.RS 4n
このゾーンの、同時に使用できるプロセステーブルスロットの最大数。このプロパティーは、\fBzone.max-processes\fR rctl を設定するための望ましい方法です。このプロパティーを設定すると、\fBmax-lwps\fR プロパティーが明示的に設定されていないかぎり、\fBmax-lwps\fR プロパティーの値がプロセススロット数の 10 倍の数に暗黙的に設定されます。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBmax-sem-ids\fR\fR
.ad
.sp .6
.RS 4n
このゾーンに許容されるセマフォー ID の最大数。このプロパティーは、\fBzone.max-sem-ids\fR rctl を設定するための望ましい方法です。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBmax-shm-ids\fR\fR
.ad
.sp .6
.RS 4n
このゾーンに許容される共有メモリー ID の最大数。このプロパティーは、\fBzone.max-shm-ids\fR rctl を設定するための望ましい方法です。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBmax-shm-memory\fR\fR
.ad
.sp .6
.RS 4n
このゾーンに許容される共有メモリーの最大容量。このプロパティーは、\fBzone.max-shm-memory\fR rctl を設定するための望ましい方法です。この数値には、K、M、G、T の単位を適用できます。たとえば、1M は 1 メガバイトです。
.RE

.sp
.ne 2
.mk
.na
\fBglobal: \fBscheduling-class\fR\fR
.ad
.sp .6
.RS 4n
ゾーンで実行されているプロセスに使用するスケジューリングクラスを指定します。このプロパティーを指定しないと、スケジューリングクラスは次のように確立されます。
.RS +4
.TP
.ie t \(bu
.el o
\fBcpu-shares\fR プロパティーまたは同等の rctl が設定されている場合、スケジューリングクラス FSS が使用されます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBcpu-shares\fR も同等の rctl も設定されず、ゾーンのプールプロパティーがデフォルトのスケジューリングクラスを持つプールを参照する場合、そのクラスが使用されます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
その他の条件下では、システムのデフォルトのスケジューリングクラスが使用されます。
.RE
.RE

.sp
.ne 2
.mk
.na
\fB\fBdedicated-cpu\fR: cpus、cores、sockets ncpus、importance\fR
.ad
.sp .6
.RS 4n
このリソースは、ブート時にゾーンで排他的に利用するためのプールとプロセッサのセットを作成します。ゾーンが実行している間、これらのプロセッサはほかのゾーンまたは大域ゾーンでは使用できません。プールの詳細については、\fBpoolcfg\fR(1M) および \fBpooladm\fR(1M) マニュアルページを参照してください。
.sp
専用 CPU を明示的に選択したり自動的に選択したりできます。
.sp
.ne 2
.mk
.na
\fB特定の CPU リソースの選択\fR
.ad
.sp .6
.RS 4n
\fBcpus\fR、\fBcores\fR、または \fBsockets\fR のいずれかを、CPU、コア、またはソケット ID のリストに設定します。\fBpsrinfo -t\fR および \fBpooladm\fR を使用して、どの CPU、コア、またはソケットが使用できるかを調べます。
.sp
指定したいずれかのリソースが別のゾーンまたはプールに割り当てられている場合、そのゾーンはブートに失敗します。これには割り当てられたリソースのサブセットが含まれます。たとえば、割り当てられたソケットのコアが別の場所で割り当てられている場合です。
.sp
指定したいずれかの CPU リソースが存在していなかったり、障害が発生したり、オフラインの場合、ゾーンのブート時に警告が表示されます。ゾーンは、オンラインである指定された CPU リソースをすべて受け取ります。
.sp
一部の CPU に障害が発生しているコアなど、CPU リソースが部分的にオンラインである場合、ゾーンは、コアから残りのオンライン CPU を受け取り、警告が表示されます。
.sp
指定されたどの CPU リソースもオンラインになっていない場合、ゾーンはブートできません。
.RE

.sp
.ne 2
.mk
.na
\fB自動的に選択された CPU リソース\fR
.ad
.sp .6
.RS 4n
これは、ゾーンの各ブートまたはライブゾーン再構成に応じて異なることがあります。
.sp
\fBncpus\fR を整数範囲またはスカラー値に設定します。範囲は \fB-\fR を使用して表され、たとえば 1-4 は 1 から 4 つのプロセッサを表します。範囲を指定した場合、ゾーンが実行している間に、ゾーン専用の CPU の数量が変わることがあります。
.sp
オプションで「importance」を設定して、専用 CPU に関連付けられたリソースプールの pool.importance 値を構成します。「importance」値は整数値です。範囲を使用する場合、重要性がより高いプールに優先的に CPU が割り当てられます。重要性ベースの割り当ての説明については、\fBlibpool\fR(3LIB) マニュアルページを参照してください。
.sp
設定された最小または整数値に対応できる十分なオンライン CPU が使用できない場合、ゾーンはブートまたはライブ再構成できません。
.sp
自動 CPU が構成されている場合、ゾーン専用の特定の CPU は実行中に変更されることがあります。たとえば、自動実行ゾーンで使用されている CPU リソースが別の場所で割り当てられている場合、この CPU リソースは使用可能な別の CPU リソースに置き換えられます。実行している自動 CPU ゾーン専用の CPU リソースの数量も、範囲で指定した制約内で変更することがあります。
.sp
\fBsolaris-kz\fR ブランドゾーンは実行中に CPU を変更できません。これらは、ncpus の範囲値をサポートしていません。実行している solaris-kz ブランドゾーンで使用されている CPU リソースは、自動的に選択されている場合でも、別の場所に割り当てることはできません。このため、特定の CPU を使用するゾーンは、自動 CPU を使用する solaris-kz ブランドゾーンより前にブートすることをお勧めします。
.RE

このリソースには、\fBpool\fR および \fBcpu-shares\fR プロパティーとの互換性はありません。このリソースの単一のインスタンスのみをゾーンに追加できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcapped-memory\fR: physical、swap、locked\fR
.ad
.sp .6
.RS 4n
このゾーンが使用できるメモリーの上限。これらの各数値には、K、M、G、T の単位を適用できます。たとえば、1M は 1 メガバイトです。これらの各プロパティーはオプションですが、このリソースを追加するときは少なくとも 1 つのプロパティーを設定する必要があります。このリソースの単一のインスタンスのみをゾーンに追加できます。\fBphysical\fR プロパティーは、このゾーンの \fBmax-rss\fR を設定します。これは大域ゾーンで実行中の \fBrcapd\fR(1M) によって強制されます。\fBswap\fR プロパティーは、\fBzone.max-swap\fR rctl を設定するための望ましい方法です。\fBlocked\fR プロパティーは、\fBzone.max-locked-memory\fR rctl を設定するための望ましい方法です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcapped-cpu\fR: ncpus\fR
.ad
.sp .6
.RS 4n
ゾーンで使用できる CPU 時間に対して制限を設定します。使用される単位は、ゾーン内のすべてのユーザースレッドが使用できる 1 つの CPU の割合 (パーセント) に換算され、小数 (たとえば \fB\&.75\fR) または帯小数 (整数と小数が混在した数、たとえば \fB1.25\fR) で表現されます。\fBncpu\fR 値 \fB1\fR は CPU の割合が 100% であることを意味し、値 \fB1.25\fR は 125%、\fB\&.75\fR は 75% (以下同様) を意味します。上限が設けられたゾーン内のプロジェクトに独自の上限がある場合は、最小値が優先されます。
.sp
\fBcapped-cpu\fR プロパティーは、\fBzone.cpu-cap\fR リソース制御の別名であり、\fBzone.cpu-cap\fR リソース制御に関連しています。\fBresource-controls \fR(5) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBadmin\fR: user、auths\fR
.ad
.sp .6
.RS 4n
ゾーン管理の承認を、指定されたユーザーまたは役割に委任します。ユーザーは有効なローカルアカウントに対応している必要があります。auths に使用できる値は次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fBlogin\fR\fR
.ad
.sp .6
.RS 4n
このゾーンへの \fBzlogin\fR(1) の使用の認証を許可します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmanage\fR\fR
.ad
.sp .6
.RS 4n
構成済みゾーンの通常の管理を許可します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcopyfrom\fR\fR
.ad
.sp .6
.RS 4n
新しいゾーンのクローンを作成するソースとして、指定されたゾーンの使用を許可します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBconfig\fR\fR
.ad
.sp .6
.RS 4n
ゾーンの永続的な構成の変更を許可します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBliveconfig\fR\fR
.ad
.sp .6
.RS 4n
実行中のゾーンのライブ構成を検査して変更することを許可します。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBrootzpool\fR: ストレージ\fR
.ad
.sp .6
.RS 4n
ゾーンのインストールを含む専用の \fBzpool\fR で排他的に使用される 1 つまたは複数のストレージリソースを定義します。ストレージに指定可能な値は、\fBsuri\fR(5) で定義されています。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool\fR: ストレージ、名前\fR
.ad
.sp .6
.RS 4n
ゾーンに委任される \fBzpool\fR で排他的に使用される 1 つまたは複数のストレージリソースを定義します。ストレージに指定可能な値は、\fBsuri\fR(5) で定義されています。名前に指定可能な値は、\fBzpool\fR(1M) で定義されています。\fBrpool\fR という名前は許可されません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBnpiv\fR: virtual-port-wwn, over-hba\fR
.ad
.sp .6
.RS 4n
64 ビットポートの一意のワールドワイド名を、オプションであり自動的に生成される wwn で設定される virtual-port-wwn とともに、npiv に設定します。ユーザーは生成されるこの wwn をオーバーライドできます。
.sp
プロパティー \fBover-hba\fR もオプションで、空の文字列にすることができます。これは、物理 HBA ポートがラウンドロビンポリシーで選択されて、使用可能なポート全体に分散されることを意味します。このプロパティーを設定する場合、\fBover-hba\fR の値は、\fB/dev/cfg/c*\fR の下に示されているような、1 つの物理 NPIV 対応の FC HBA コントローラに対する「c」が先頭に付いた符号なし整数でなければなりません。詳細は、\fBcfgadm_fp\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBverified-boot\fR: policy、cert\fR
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
\fB\fBpolicy\fR\fR
.ad
.RS 10n
.rt  
ゾーンのゲストでのブートローダーとカーネルモジュールの ELF 署名検証を制御します。この値は、「none」、「warning」、および「enforce」に設定できます。「none」は、検証をスキップします。「warning」は、検証の失敗に関するメッセージをログに記録します。「enforce」を指定すると、失敗時にモジュールをロードしません。デフォルトでは、ポリシーは「warning」に設定されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcert\fR\fR
.ad
.RS 10n
.rt  
サードパーティーソフトウェアや自己署名付きソフトウェアのためのユーザーがインストールした公開鍵証明書を追加します。これらの証明書ファイルは、デフォルトの Oracle 証明書に加えて ELF 署名検証に使用されます。証明書パスは、\fBfile:///\fR、\fBhttp://\fR、または \fBhttps://\fR URL を使用して追加できます。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBkeysource\fR: raw\fR
.ad
.sp .6
.RS 4n
\fBsolaris-kz\fR(5) で説明されている、カーネルゾーン一時停止イメージおよびホストデータに使用される暗号化鍵への管理アクセスを提供します。\fBraw\fR の値は、\fBcommand_file\fR モードの場合を除いて直接設定できません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsuspend\fR: path、storage\fR
.ad
.sp .6
.RS 4n
カーネルゾーンの一時停止イメージの場所を構成します。1 つの \fBsuspend\fR リソースのみが許可されます。\fBsuspend\fR リソースが存在しない場合、一時停止および再開はカーネルゾーンによってサポートされません。\fBsuspend\fR リソースでは \fBpath\fR または \fBstorage\fR のいずれかを指定でき、両方は指定できません。\fBpath\fR が指定される場合、これは一時停止ファイルの書き込み先の完全パスで、親ディレクトリが存在する必要があります。\fBstorage\fR が指定される場合、これは \fBsuri\fR(5) で説明されているストレージ URI によって参照されるデバイスである必要があります。
.RE

.SS "カーネル統計を使った CPU キャップの監視"
.sp
.LP
カーネル統計 (\fBkstat\fR(3KSTAT)) モジュール \fBcaps\fR を使用して、システムは上限が設定されたすべてのプロジェクトおよびゾーンの情報を維持管理します。この情報を入手するには、\fBkstat\fR モジュール名として \fBcaps\fR を指定して、カーネル統計 (\fBkstat\fR(3KSTAT)) を読み取ります。次のコマンドは、アクティブなすべての CPU キャップのカーネル統計を表示します。
.sp
.in +2
.nf
# \fBkstat caps::'/cpucaps/'\fR
.fi
.in -2
.sp

.sp
.LP
ゾーン内で実行されている \fBkstat\fR(1M) コマンドは、そのゾーンとそのゾーン内のプロジェクトに関連する CPU キャップしか表示しません。「\fB使用例\fR」を参照してください。
.sp
.LP
\fBkstat\fR(1M) で使用するキャップ関連の引数を次に示します。
.sp
.ne 2
.mk
.na
\fB\fBcaps\fR\fR
.ad
.sp .6
.RS 4n
\fBkstat\fR モジュール。
.RE

.sp
.ne 2
.mk
.na
\fB\fBproject_caps\fR または \fBzone_caps\fR\fR
.ad
.sp .6
.RS 4n
\fBkstat\fR クラス。\fBkstat\fR \fB-c\fR オプションとともに使用します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcpucaps_project_\fR\fIid\fR または \fBcpucaps_zone_\fR\fIid\fR\fR
.ad
.sp .6
.RS 4n
\fBkstat\fR 名。\fBkstat\fR \fB-n\fR オプションとともに使用します。\fIid\fR はプロジェクトまたはゾーンの識別子です。
.RE

.sp
.LP
次のフィールドは、すべての CPU キャップの統計情報を要求する \fBkstat\fR(1M) コマンドに応答して表示されます。
.sp
.ne 2
.mk
.na
\fB\fBmodule\fR\fR
.ad
.sp .6
.RS 4n
\fBkstat\fR のこの使用法では、このフィールドには値 \fBcaps\fR が入ります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBname\fR\fR
.ad
.sp .6
.RS 4n
前述のとおり、\fBcpucaps_project_\fR\fIid\fR または \fBcpucaps_zone_\fR\fIid\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBabove_sec\fR\fR
.ad
.sp .6
.RS 4n
キャップを上回って費やされた合計時間 (秒)。
.RE

.sp
.ne 2
.mk
.na
\fB\fBbelow_sec\fR\fR
.ad
.sp .6
.RS 4n
キャップを下回って費やされた合計時間 (秒)。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmaxusage\fR\fR
.ad
.sp .6
.RS 4n
監視された最大 CPU 使用率。
.RE

.sp
.ne 2
.mk
.na
\fB\fBnwait\fR\fR
.ad
.sp .6
.RS 4n
待機キューに入っているスレッドの数。
.RE

.sp
.ne 2
.mk
.na
\fB\fBusage\fR\fR
.ad
.sp .6
.RS 4n
上限が設けられたプロジェクトまたはゾーンに属しているすべてのスレッドの現在の合計 CPU 使用率。1 つの CPU の割合 (パーセント) で表されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvalue\fR\fR
.ad
.sp .6
.RS 4n
キャップ値。1 つの CPU の割合 (パーセント) で表されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBzonename\fR\fR
.ad
.sp .6
.RS 4n
統計情報が表示されるゾーンの名前。
.RE

.sp
.LP
\fBkstat\fR コマンドの出力例については、「使用例」を参照してください。\fB\fR
.SS "統合アーカイブからの構成"
.sp
.LP
\fBarchiveadm\fR(1M) によって作成される統合アーカイブは、Solaris インスタンスをアーカイブする手段を提供します。各統合アーカイブには、1 つ以上の大域または非大域ゾーンに対応するデータおよびメタデータを格納できます。デフォルトで、\fBarchiveadm\fR(1M) はシステムまたはゾーンクローニングに適したアーカイブを生成します。オプションで、\fBarchiveadm\fR(1M) はシステム復旧に適したアーカイブを生成できます。
.sp
.LP
\fBzonecfg create -a archive [\fIoptions\fR]\fR サブコマンドを使用して、統合アーカイブからゾーンを構成した場合、アーカイブ作成オプションは、アーカイブ構成が保持される度合いに影響することがあります。クローンアーカイブから構成すると、複数のホストで同じである場合に問題を引き起こす可能性のあるプロパティー値がデフォルト値をとります。これらのプロパティーは次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fB-\fR\fR
.ad
.RS 8n
.rt  
host id
.RE

.sp
.ne 2
.mk
.na
\fB\fBanet\fR\fR
.ad
.RS 8n
.rt  
allowed-address
.RE

.sp
.ne 2
.mk
.na
\fB\fBanet\fR\fR
.ad
.RS 8n
.rt  
mac-address
.RE

.sp
.ne 2
.mk
.na
\fB\fBnet\fR\fR
.ad
.RS 8n
.rt  
allowed-address
.RE

.sp
.LP
さらに、アーカイブされたゾーン名とインストールされるゾーンの名前が一致していない場合、一部のプロパティーは新しいゾーン名を反映するように自動的に更新されます。
.sp
.ne 2
.mk
.na
\fB\fBzonepath\fR\fR
.ad
.RS 17n
.rt  
\fBzonepath\fR の最後の要素がアーカイブされたゾーン名と一致する場合、\fBzonepath\fR の最後の要素が新しいゾーン名で置き換えられます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdataset/alias\fR\fR
.ad
.RS 17n
.rt  
データセットリソースの場合、別名がアーカイブされたゾーン名に一致する場合、別名が新しいゾーン名で置き換えられます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdataset/name\fR\fR
.ad
.RS 17n
.rt  
データセットリソースの場合、name プロパティーの最後の要素がアーカイブされたゾーン名に一致する場合、name プロパティーの最後の要素が新しいゾーン名で置き換えられます。
.RE

.sp
.LP
統合アーカイブからの構成では、リソースやプロパティー値を変更する、必要に応じた後続のコマンドの使用を妨げません。
.SH オプション
.sp
.LP
サポートしているオプションは、次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fIcommand_file\fR\fR
.ad
.sp .6
.RS 4n
\fBzonecfg\fR コマンドファイルの名前を指定します。\fIcommand_file\fR は、\fBexport\fR サブコマンドの出力から取得された \fBzonecfg\fR サブコマンド (1 行に 1 つ) のテキストファイルです。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR\fR
.ad
.sp .6
.RS 4n
ライブ編集モードを有効にします。安定したストレージからの永続的な構成の代わりに、実行中のゾーンのライブ構成を編集するよう \fBzonecfg\fR に指示します。使用した場合、\fBzonecfg\fR は現在のライブゾーン構成のスナップショットを取得します。このモードでは、\fBzonecfg\fR サブコマンドの完全なセットがサポートされます。ライブ構成は、確定された直後に反映され、ゾーンの次回のリブートまでアクティブなままになります。ライブモードは実行中のゾーンでのみ許可され、\fBsolaris.zone.liveconfig/zonename\fR の承認が必要です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-z\fR \fIzonename\fR\fR
.ad
.sp .6
.RS 4n
ゾーンの名前を指定します。ゾーン名では、大文字と小文字が区別されます。ゾーン名は英数字で始める必要がありますが、英数字以外に下線 (\fB_\fR)、ハイフン (\fB-\fR)、およびピリオド (\fB\&.\fR) も使用できます。\fBglobal\fR という名前と \fBSYS\fR で始まるすべての名前は、予約されているので使用できません。
.RE

.SH トークン
.sp
.LP
特定のプロパティーで次のトークンを使用することがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fB%{zonename}\fR\fR
.ad
.RS 23n
.rt  
ゾーンの名前に評価されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB%{id}\fR\fR
.ad
.RS 23n
.rt  
特定リソースの ID プロパティーに評価されます。このトークンは、\fBid\fR プロパティーをサポートするリソースのスコープ内で使用されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB%{global-rootzpool}\fR\fR
.ad
.RS 23n
.rt  
大域ゾーンの rootzpool 名になります。
.RE

.sp
.ne 2
.mk
.na
\fB\fB%%\fR\fR
.ad
.RS 23n
.rt  
\fB%\fR に評価されます。
.RE

.sp
.in +2
.nf
  -----------------------------------------------------------------
  |Resource  | Property | Supported Tokens                        |
  |---------------------------------------------------------------|
  |global    | zonepath | %{zonename}                             |
  |---------------------------------------------------------------|
  |dataset   | name     | %{zonename}                             |
  |---------------------------------------------------------------|   
  |device    | match    | %{zonename}, %{id}, %{global-rootzpool} |
  |          | storage  | %{zonename}, %{id}, %{global-rootzpool} |
  |---------------------------------------------------------------|
  |fs        | raw      | %{zonename}                             |
  |          | special  | %{zonename}                             |
  |---------------------------------------------------------------|
  |net       | physical | %{id}                                   |
  |---------------------------------------------------------------|
  |anet      | linkname | %{id}                                   |
  |---------------------------------------------------------------|
  |suspend   | storage  | %{zonename}, %{global-rootzpool}        |
  |          | path     | %{zonename}                             |
  |---------------------------------------------------------------|
  |rootzpool | storage  | %{zonename}, %{global-rootzpool}        |
  |---------------------------------------------------------------|
  |zpool     | storage  | %{zonename}, %{global-rootzpool}        |
  -----------------------------------------------------------------
.fi
.in -2
.sp

.SH サブコマンド
.sp
.LP
\fBadd\fR および \fBselect\fR サブコマンドを使用して、特定のリソースを選択できます。選択した時点で、スコープがそのリソースに変更されます。選択されたサブコマンドは、すでにゾーン構成に追加されているリソースに対してのみ適用できます。一部のリソース (\fBanet\fR など) は自動的に追加されます。\fBend\fR および \fBcancel\fR サブコマンドを使用して、そのリソースの指定を終了することができます。指定を終了した時点で、スコープが大域に戻ります。
.sp
.LP
\fBzonecfg\fR は、サブコマンドをセミコロンで区切ったリストをサポートします。例: 
.sp
.in +2
.nf
# \fBzonecfg -z myzone "add net; set physical=myvnic; end"\fR
.fi
.in -2
.sp

.sp
.LP
破壊的な動作や作業内容の消失を伴う可能性のあるサブコマンドには、強制的にその処理を実行するために \fB-F\fR オプションが用意されています。端末デバイスから入力しているときに、\fB-F\fR オプションを指定しないでそのようなコマンドを実行した場合は、オプションを指定するかどうかを適切なタイミングで確認されます。それ以外の状況で \fB-F\fR オプションを指定しないでそのようなコマンドを実行した場合、そのアクションは許可されず、診断メッセージが標準エラーに書き込まれます。 
.sp
.LP
サポートされているサブコマンドは次のとおりです。 
.sp
.ne 2
.mk
.na
\fB\fBadd\fR \fIresource-type\fR\fR
.ad
.br
.na
\fB\fBadd\fR \fIproperty-name property-value\fR (resource scope)\fR
.ad
.sp .6
.RS 4n
大域スコープまたはリソース固有のスコープで、特定のリソースタイプの指定を開始します。スコープがそのリソースタイプに変わります。 
.sp
リソース固有のスコープでは、指定された名前と値を持つプロパティーを追加します。プロパティー値の構文は、プロパティータイプによって異なります。通常は、単純値または単純値のリストを使用します。リストの場合は、角括弧で囲み、各値をコンマで区切ります (\fB[foo,bar,baz]\fR)。「\fBプロパティー\fR」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcancel\fR\fR
.ad
.sp .6
.RS 4n
リソースの指定を終了し、スコープを大域に戻します。指定途中のリソースをすべて破棄します。\fBcancel\fR は、リソースのスコープだけに適用できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBclear\fR \fIproperty-name\fR\fR
.ad
.sp .6
.RS 4n
プロパティーの値をデフォルト値にクリアします。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcommit\fR [\fB-n\fR] [\fB-q\fR]\fR
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
\fBデフォルトモード\fR
.ad
.RS 28n
.rt  
現在の構成をメモリーから安定したストレージに確定します。\fBzoneadm\fR で構成を使用するには、その構成を確定する必要があります。オプション \fB-n\fR および \fB-q\fR はデフォルトモードで許可されません。
.RE

.sp
.ne 2
.mk
.na
\fBライブモード\fR
.ad
.RS 28n
.rt  
現在のメモリー内のライブ構成と一致するように実行中のゾーンを再構成し、実行されたアクションを出力します。適用された変更はすぐに反映され、ゾーンの次回のリブートまでアクティブなままになります。\fBcommit\fR サブコマンドの呼び出しの前にライブ構成が外部で変更された場合、処理はエラーを返します。このような場合、確定を成功させるには、ライブ構成を再ロードして、目的の変更を再適用する必要があります。
.sp
サポートしているオプションは、次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 6n
.rt  
実行中のゾーンの構成を変更しない予行演習モードで再構成を実行します。予行演習モードは実際の再構成と同様に動作しますが、実行中のゾーンに変更を加えません。予行演習を使用して、実際の再構成によって実行されることが予想されるアクションを確認します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-q\fR\fR
.ad
.RS 6n
.rt  
静寂モード。ゾーン再構成に関連するすべてのメッセージを抑止します。
.RE

.RE

メモリー内構成を確定するまでは、\fBreload\fR サブコマンドを使って変更を取り消すことができます。zonecfg セッションが終了するときには、commit 処理が自動的に実行されます。構成が正しく設定されていないと確定できないので、この処理では自動的に構成が確認されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcreate [\fR\fB-F\fR\fB] [\fR \fB-a\fR \fIdirectory\fR |\fB-b\fR \fB |\fR \fB-t\fR \fItemplate\fR\fB]\fR\fR
.ad
.br
.na
\fB\fR
.ad
.br
.na
\fB\fBcreate\fR [\fB-F\fR] \fB-a\fR \fI archive\fR [\fB-z\fR \fIarchived_zone\fR] \fR
.ad
.br
.na
\fB[\fB-<cert|ca-cert|key>\fR=\fIpath\fR] ...\fR
.ad
.sp .6
.RS 4n
指定されたゾーンのメモリー内構成を作成します。新しいゾーンの構成を開始するときは、\fBcreate\fR を使用します。このゾーンを安定した記憶領域に保存する方法については、\fBcommit\fR を参照してください。 
.sp
既存の構成を上書きする場合は、\fB-F\fR オプションを指定して、強制的に処理を実行します。\fItemplate\fR と同じ構成を作成する場合は、\fB-t\fR \fItemplate\fR オプションを指定します。\fItemplate\fR は設定済みゾーンの名前です。
.sp
\fBcreate\fR はデフォルトテンプレート \fBSYSdefault\fR を使用します。デフォルトテンプレートは、\fBsvc:/system/zones:default\fR サービスの \fBdefault_template\fR SMF プロパティーを使用することによって、システム全体ベースで変更できます。管理者は、\fB-t\fR (特定のテンプレートを使用) または \fB-b\fR (ブランクテンプレートを使用) を使用することによって、このゾーンのデフォルトを置き換えることができます。
.sp
新しいホストで切り離されたゾーンを構成できるようにするには、\fB-a\fR \fIdirectory\fR オプションを使用します。\fIpath\fR パラメータは、この新しいホスト上に移動されている、切り離されたゾーンのゾーンパスの位置です。\fB\fR切り離されたゾーンが構成されたあとは、「\fBzoneadm attach\fR」コマンド (\fBzoneadm\fR(1M) を参照) を使用してインストールするようにしてください。新しいゾーンのすべての検証は、ゾーンの構成中ではなく \fBattach\fR 処理中に行われます。
.sp
archiveadm(1M) によって作成された統合アーカイブからゾーンを構成できるようにするには、\fB-a\fR アーカイブオプションを使用します。アーカイブは絶対パスか、ファイル、http、または https URI を指定できます。統合アーカイブに複数のゾーンが含まれる場合、\fB-z archived_zone\fR オプションを使用して、構成に使用するアーカイブ内のゾーンを指定する必要があります。https URI を使用してアーカイブにアクセスする場合、\fB-x\fR オプションを使用して、証明書、CA 証明書、鍵ファイルの場所を指定できます。指定する場合、\fBcert\fR、\fBcacert\fR、および \fBkey\fR は PEM 形式にする必要があります。詳細については、上記の「統合アーカイブからの構成」を参照してください。
.sp
空の構成を作成する場合は、\fB-b\fR オプションを使用します。引数が指定されていない場合、\fBcreate\fR は Oracle Sun のデフォルト設定を適用します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdelete [\fR\fB-F\fR\fB]\fR\fR
.ad
.sp .6
.RS 4n
指定された構成をメモリー内および安定した記憶領域から削除します。このアクションはすぐに実行されるので、確定する必要はありません。削除した構成を元に戻すことはできません。 
.sp
この操作を強制的に実行する場合は、\fB-F\fR オプションを使用します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBend\fR\fR
.ad
.sp .6
.RS 4n
リソースの指定を終了します。このサブコマンドは、リソースのスコープだけに適用できます。\fBzonecfg\fR は、現在のリソースが完全に指定されていることを確認します。完全に指定されている場合は、メモリー内構成に追加され (メモリー内構成を安定したストレージに保存する方法については \fBcommit\fR を参照)、スコープは大域範囲または以前のリソース固有の範囲に戻ります。指定が完全でない場合は、対応するエラーメッセージが通知されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBexport [\fR\fB-f\fR \fIoutput-file\fR\fB]\fR\fR
.ad
.sp .6
.RS 4n
標準出力に構成を出力します。\fIoutput-file\fR に構成を出力する場合は、\fB-f\fR オプションを使用します。このオプションを使用すると、コマンドファイルに適した形式で出力が作成されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBhelp [usage] [\fIsubcommand\fR] [syntax] [\fR\fIcommand-name\fR\fB]\fR\fR
.ad
.sp .6
.RS 4n
一般ヘルプまたは特定項目のヘルプを出力します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBinfo zonename | zonepath | autoboot | autoshutdown | brand | pool | limitpriv | global-time\fR\fR
.ad
.br
.na
\fB\fBinfo\fR [\fB-i\fR | \fB-I\fR] [\fIresource-type\fR [\fIidentifier\fR | [\fIproperty-name\fR=\fIproperty-value\fR]*]]\fR
.ad
.sp .6
.RS 4n
現在の構成に関する情報を表示します。\fIresource-type\fR が指定されている場合は、そのタイプのリソースについてのみ情報を表示します。識別子またはプロパティー名の値ペアが指定されている場合は、その条件を満たしているリソースの情報だけを表示します。リソース固有のスコープでは、\fBinfo\fR は現在追加または変更されているリソースの情報を表示します。
.sp
特定のプロパティーまたはリソースタイプが \fBzonecfg\fR 対話型モードで \fIproperty-name.template: template-value\fR としてリクエストされた場合、トークンが表示されることがあります。このテンプレート値の評価された出力は、\fBproperty-name: propperty-value\fR で提供されます。「使用例」を参照してください。
.sp
サポートしているオプションは、次のとおりです。
.sp
.ne 2
.mk
.na
\fB\fB-i\fR\fR
.ad
.RS 6n
.rt  
常に識別子が含められます
.RE

.sp
.ne 2
.mk
.na
\fB\fB-I\fR\fR
.ad
.RS 6n
.rt  
識別子は含められません
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBremove\fR \fIresource-type\fR [\fIidentifier\fR | {\fIproperty-name\fR=\fIproperty-value\fR}]\fR
.ad
.sp .6
.RS 4n
指定されたリソースを削除します。リソースの単一インスタンスのみを削除する必要がある場合、そのリソースが一意に識別されるように、\fIidentifier\fR または十分な \fIproperty name-value\fR ペアのいずれかを指定する必要があります。\fIidentifier\fR または \fIproperty name-value\fR ペアをまったく指定しないと、すべてのインスタンスが削除されます。\fIresource-type\fR の複数のインスタンスがある場合は、\fB-F\fR オプションを使用する場合を除き、確認が必要です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBselect\fR \fIresource-type\fR {\fIidentifier\fR | {\fIproperty-name\fR=\fIproperty-value\fR}}\fR
.ad
.sp .6
.RS 4n
指定されたリソースタイプのうち、指定された識別子または指定された \fIproperty-name\fR と \fIproperty-value\fR のペアの条件に一致するものを、変更対象として選択します。スコープがそのリソースタイプに変わります。\fB{}\fR 構文は、1 つまたは複数の項目をこの中括弧の中に指定できることを示します。リソースが一意に識別されるように、\fIproperty-name property-value pair\fR を十分に指定する必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBset\fR \fIproperty-name\fR\fB=\fR\fIproperty\fR\fB-\fR\fIvalue\fR\fR
.ad
.sp .6
.RS 4n
指定されたプロパティー名を、指定された値に設定します。プロパティーには、\fBzonename\fR や \fBzonepath\fR のような大域プロパティーと、リソース固有のプロパティーがあります。このサブコマンドは、大域スコープとリソース固有のスコープの両方で使用できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBverify\fR [\fB-v\fR]\fR
.ad
.sp .6
.RS 4n
現在の構成が正しいかどうかを確認します。
.RS +4
.TP
.ie t \(bu
.el o
各リソースに必須プロパティーがすべて指定されていこと。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBzonepath\fR が指定されていること。
.RE
\fB-v\fR オプションが指定された場合、デバイスリソース内で指定されたデバイスが、別名が付けられたデータセット内で作成された ZFS ボリュームと競合して、ZFS ボリュームを非表示にする可能性があるときに、警告が発行されます。\fBdev\fR(7FS) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrevert\fR \fB[\fR\fB-F\fR\fB]\fR\fR
.ad
.sp .6
.RS 4n
構成を、最後に確定されたときの状態に戻します。この操作を強制的に実行する場合は、\fB-F\fR オプションを使用します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBreload\fR \fB[\fR\fB-F\fR\fB ]\fR\fR
.ad
.sp .6
.RS 4n
未確定のすべての変更を破棄し、安定したストレージから構成を再ロードする (デフォルトモード) か、実行中のゾーンの最新の構成を取得します (ライブモード)。この操作を強制的に実行する場合は、\fB-F\fR オプションを使用します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrevert\fR [\fB-F\fR]\fR
.ad
.sp .6
.RS 4n
永続的な構成を、最後に確定されたときの状態に戻します。この操作を強制的に実行する場合は、\fB-F\fR オプションを使用します。このサブコマンドは、ライブモードでは許可されません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBexit [\fR\fB-F\fR\fB]\fR\fR
.ad
.sp .6
.RS 4n
\fBzonecfg\fR のセッションを終了します。必要な場合は、確定操作が自動的に試行されます。\fBEOF\fR 文字を使用して \fBzonecfg\fR を終了することもできます。この操作を強制的に実行する場合は、\fB-F\fR オプションを使用します。 
.RE

.SH 使用例
.LP
\fB例 1 \fR新しいゾーンの環境を作成する
.sp
.LP
次の例では、\fBzonecfg\fR を使って新しいゾーンの環境を作成します。\fB/usr/local\fR は、大域ゾーンから \fB/opt/local\fR にマウントされるループバックです。\fB/opt/sfw\fR は、大域ゾーンからマウントされるループバックで、\fBnxge0\fR 上の VNIC が 3 つの IP アドレスとともにこのゾーンに追加され、ゾーンに対する公平配分スケジューラ (FSS) の CPU 共有の数に関する制限が、\fBrctl\fR リソースタイプを使用して設定されます。この例では、所定のリソースを変更するために選択する方法も示されています。このケースでは、\fBzonecfg\fR によって自動的に作成される \fBanet\fR リソースを選択することによって実行します。

.sp
.in +2
.nf
example# \fBzonecfg -z myzone3\fR
my-zone3: No such zone configured
Use 'create' to begin configuring a new zone.
zonecfg:myzone3> \fBcreate\fR
zonecfg:myzone3> \fBinfo zonepath\fR
zonepath.template: /system/zones/%{zonename}
zonepath: /system/zones/myzone3
zonecfg:myzone3> \fBset autoboot=true\fR
zonecfg:myzone3> \fBadd fs\fR
zonecfg:myzone3:fs> \fBset dir=/opt/local\fR
zonecfg:myzone3:fs> \fBset special=/usr/local\fR
zonecfg:myzone3:fs> \fBset type=lofs\fR
zonecfg:myzone3:fs> \fBadd options [ro,nodevices]\fR
zonecfg:myzone3:fs> \fBend\fR
zonecfg:myzone3> \fBadd fs\fR
zonecfg:myzone3:fs> \fBset dir=/mnt\fR
zonecfg:myzone3:fs> \fBset special=/dev/dsk/c0t0d0s7\fR
zonecfg:myzone3:fs> \fBset raw=/dev/rdsk/c0t0d0s7\fR
zonecfg:myzone3:fs> \fBset type=ufs\fR
zonecfg:myzone3:fs> \fBend\fR
zonecfg:myzone3> \fBadd fs\fR
zonecfg:myzone3:fs> \fBset dir=/opt/sfw\fR
zonecfg:myzone3:fs> \fBset special=/opt/sfw\fR
zonecfg:myzone3:fs> \fBset type=lofs\fR
zonecfg:myzone3:fs> \fBadd options [ro,nodevices]\fR
zonecfg:myzone3:fs> \fBend\fR
zonecfg:myzone3> \fBselect anet linkname=net0\fR
zonecfg:myzone3:anet> \fBset lower-link=nxge0\fR
zonecfg:myzone3:anet> \fBset allowed-address="192.168.0.1/24,192.168.1.2/\e\fR
           \fB24,192.168.2.3/24"\fR
zonecfg:myzone3:anet> \fBend\fR
zonecfg:my-zone3> \fBset cpu-shares=5\fR
zonecfg:my-zone3> \fBadd capped-memory\fR
zonecfg:my-zone3:capped-memory> \fBset physical=50m\fR
zonecfg:my-zone3:capped-memory> \fBset swap=100m\fR
zonecfg:my-zone3:capped-memory> \fBend\fR
zonecfg:myzone3> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 2 \fR排他的 IP ゾーンを作成する
.sp
.LP
次の例では、\fBnet0\fR という名前の VNIC が割り当てられるゾーンを作成します。VNIC が作成されるリンクは自動的に決定されます。IP アドレスおよびルーティングは、新しいゾーンの中で \fBipadm\fR(1M) を使用して構成されます。 

.sp
.in +2
.nf
example# \fBzonecfg -z excl\fR
zonecfg:excl> \fBcreate\fR
zonecfg:excl> \fBset zonepath=/export/zones/excl\fR
zonecfg:excl> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 3 \fR共有 IP ゾーンを作成する
.sp
.LP
次の例では、IP スタックを大域ゾーンと共有し、単一の IP アドレスとデフォルトルーターが割り当てられるゾーンを作成します。

.sp
.in +2
.nf
example# \fBzonecfg -z shared\fR
zonecfg:shared> \fBcreate -b\fR
zonecfg:shared> \fBset zonepath=/export/zones/shared\fR
zonecfg:shared> \fBset ip-type=shared\fR
zonecfg:shared> \fBadd net\fR
zonecfg:shared:net> \fBset physical=nge0\fR
zonecfg:shared:net> \fBset address=192.168.0.3/24\fR
zonecfg:shared:net> \fBset defrouter=192.168.0.1\fR
zonecfg:shared:net> \fBend\fR
zonecfg:shared> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 4 \fRゾーンをリソースプールに関連付ける
.sp
.LP
次の例は、既存のゾーンを既存のリソースプールに関連付ける方法を示しています。

.sp
.in +2
.nf
example# \fBzonecfg -z myzone\fR
zonecfg:myzone> \fBset pool=mypool\fR
zonecfg:myzone> \fBexit\fR
.fi
.in -2
.sp

.sp
.LP
リソースプールの詳細については、\fBpooladm\fR(1M) および \fBpoolcfg\fR(1M) を参照してください。

.LP
\fB例 5 \fRゾーンの名前を変更する
.sp
.LP
\fBzonename\fR プロパティーの変更は、構成済み状態のゾーンでのみ許可されています。インストール済み状態のゾーンの場合は、\fBzoneadm\fR(1M) \fBrename\fR サブコマンドを使用してください。次の例は、既存のゾーンの名前を変更する方法を示したものです。

.sp
.in +2
.nf
example# \fBzonecfg -z myzone\fR
zonecfg:myzone> \fBset zonename=myzone2\fR
zonecfg:myzone2> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 6 \fRゾーンの特権セットを変更する
.sp
.LP
次の例は、特権のセットを変更する方法を示しています。既存のゾーンのプロセスは、次回ゾーンがブートされるときに限られます。この特定の場合の特権セットは、ゾーンが通常持っている標準的な安全特権セットに加え、dtrace のプロファイルおよびシステムコールプロバイダを使用する特権になりますが、次のようないくつかの注意事項があります。

.sp
.in +2
.nf
example# \fBzonecfg -z myzone\fR
zonecfg:myzone> \fBset limitpriv="default,dtrace_user"\fR
zonecfg:myzone2> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 7 \fRシステム全体の時間を設定するために \fBglobal-time\fR プロパティーを変更する
.sp
.in +2
.nf
example# \fBzonecfg -z myzone\fR
zonecfg:myzone> \fBset global-time="true"\fR
zonecfg:myzone2> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 8 \fR大域ゾーンの \fBzone.cpu-shares\fR プロパティーを設定する
.sp
.LP
次のコマンドでは、大域ゾーンの \fBzone.cpu-shares\fR プロパティーを設定します。

.sp
.in +2
.nf
example# \fBzonecfg -z global\fR
zonecfg:global> \fBset cpu-shares=5\fR
zonecfg:global> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 9 \fRパターンマッチングを使用する
.sp
.LP
次のコマンドでは、\fBzonecfg\fR のパターンマッチングのサポートを説明しています。ゾーン \fBflexlm\fR で、次のように入力します。

.sp
.in +2
.nf
zonecfg:flexlm> \fBadd device\fR
zonecfg:flexlm:device> \fBset match="/dev/cua/a00[2-5]"\fR
zonecfg:flexlm:device> \fBend\fR
.fi
.in -2
.sp

.sp
.LP
大域ゾーンで、次のように入力します。

.sp
.in +2
.nf
global# \fBls /dev/cua\fR
a     a000  a001  a002  a003  a004  a005  a006  a007  b
.fi
.in -2
.sp

.sp
.LP
ゾーン \fBflexlm\fR で、次のように入力します。

.sp
.in +2
.nf
flexlm# \fBls /dev/cua\fR
a002  a003  a004  a005
.fi
.in -2
.sp

.LP
\fB例 10 \fRゾーンのキャップを 3 つの CPU に設定する
.sp
.LP
次のシーケンスでは、\fBzonecfg\fR コマンドを使ってゾーンの CPU キャップを 3 つの CPU に設定します。

.sp
.in +2
.nf
zonecfg:myzone> \fBadd capped-cpu\fR
zonecfg:myzone>capped-cpu> \fBset ncpus=3\fR
zonecfg:myzone>capped-cpu>capped-cpu> \fBend\fR
.fi
.in -2
.sp

.sp
.LP
前のシーケンスでは capped-cpu プロパティーを使用し、次のシーケンスでは \fBzone.cpu-cap\fR リソース制御を使用していますが、これらのシーケンスは同等です。

.sp
.in +2
.nf
zonecfg:myzone> \fBadd rctl\fR
zonecfg:myzone:rctl> \fBset name=zone.cpu-cap\fR
zonecfg:myzone:rctl> \fBadd value (priv=privileged,limit=300,action=none)\fR
zonecfg:myzone:rctl> \fBend\fR
.fi
.in -2
.sp

.LP
\fB例 11 \fR\fBkstat\fR を使って CPU キャップを監視する
.sp
.LP
次のコマンドは、すべての CPU キャップに関する情報を表示します。

.sp
.in +2
.nf
# \fBkstat -n /cpucaps/\fR
module: caps                            instance: 0     
name:   cpucaps_project_0               class:    project_caps
        above_sec                       0
        below_sec                       2157
        crtime                          821.048183159
        maxusage                        2
        nwait                           0
        snaptime                        235885.637253027
        usage                           0
        value                           18446743151372347932
        zonename                        global

module: caps                            instance: 0     
name:   cpucaps_project_1               class:    project_caps
        above_sec                       0
        below_sec                       0
        crtime                          225339.192787265
        maxusage                        5
        nwait                           0
        snaptime                        235885.637591677
        usage                           5
        value                           18446743151372347932
        zonename                        global

module: caps                            instance: 0     
name:   cpucaps_project_201             class:    project_caps
        above_sec                       0
        below_sec                       235105
        crtime                          780.37961782
        maxusage                        100
        nwait                           0
        snaptime                        235885.637789687
        usage                           43
        value                           100
        zonename                        global

module: caps                            instance: 0     
name:   cpucaps_project_202             class:    project_caps
        above_sec                       0
        below_sec                       235094
        crtime                          791.72983782
        maxusage                        100
        nwait                           0
        snaptime                        235885.637967512
        usage                           48
        value                           100
        zonename                        global

module: caps                            instance: 0     
name:   cpucaps_project_203             class:    project_caps
        above_sec                       0
        below_sec                       235034
        crtime                          852.104401481
        maxusage                        75
        nwait                           0
        snaptime                        235885.638144304
        usage                           47
        value                           100
        zonename                        global

module: caps                            instance: 0     
name:   cpucaps_project_86710           class:    project_caps
        above_sec                       22
        below_sec                       235166
        crtime                          698.441717859
        maxusage                        101
        nwait                           0
        snaptime                        235885.638319871
        usage                           54
        value                           100
        zonename                        global

module: caps                            instance: 0     
name:   cpucaps_zone_0                  class:    zone_caps
        above_sec                       100733
        below_sec                       134332
        crtime                          821.048177123
        maxusage                        207
        nwait                           2
        snaptime                        235885.638497731
        usage                           199
        value                           200
        zonename                        global

module: caps                            instance: 1     
name:   cpucaps_project_0               class:    project_caps
        above_sec                       0
        below_sec                       0
        crtime                          225360.256448422
        maxusage                        7
        nwait                           0
        snaptime                        235885.638714404
        usage                           7
        value                           18446743151372347932
        zonename                        test_001

module: caps                            instance: 1     
name:   cpucaps_zone_1                  class:    zone_caps
        above_sec                       2
        below_sec                       10524
        crtime                          225360.256440278
        maxusage                        106
        nwait                           0
        snaptime                        235885.638896443
        usage                           7
        value                           100
        zonename                        test_001
.fi
.in -2
.sp

.LP
\fB例 12 \fR特定のゾーンまたはプロジェクトの CPU キャップを表示する
.sp
.LP
\fBkstat\fR \fB-c\fR および \fB-i\fR オプションを使用すると、次に示すように特定のゾーンまたはプロジェクトの CPU キャップを表示できます。最初のコマンドは特定のプロジェクトを対象とした表示を行い、2 番目のコマンドはゾーン 1 内部の同じプロジェクトを対象とした表示を行います。

.sp
.in +2
.nf
# \fBkstat -c project_caps\fR

# \fBkstat -c project_caps -i 1\fR
.fi
.in -2
.sp

.LP
\fB例 13 \fRゾーン管理権を委任する
.sp
.LP
次の例は、現在のゾーンの管理権を役割に割り当てる方法を示しています。

.sp
.in +2
.nf
example# \fBzonecfg -z myzone\fR
zonecfg:myzone> \fBadd admin\fR
zonecfg:myzone:admin> \fBset user=zadmin\fR
zonecfg:myzone:admin> \fBset auths=login,manage\fR
zonecfg:myzone:admin> \fBend\fR
zonecfg:myzone> \fBcommit\fR
.fi
.in -2
.sp

.sp
.LP
これらのコマンドを実行すると、RBAC \fBuser_attr\fR(4) データベース内で次のようにエントリが更新されます。

.sp
.in +2
.nf
zadmin::::type=role;\e
auths=solaris.zone.login/myzone,solaris.zone.manage/myzone;profiles=\e
Zone Management
.fi
.in -2
.sp

.LP
\fB例 14 \fRデフォルト以外のプロパティーを使用して排他的 IP ゾーンを作成する
.sp
.LP
次の例はゾーンを作成し、\fBmylink0\fR 上に指定の MAC アドレスを持ち、最大帯域幅が 100Mbps、高い優先度、RX 側に専用ハードウェアリング、TX 側に専用ハードウェアリングなし (つまりソフトウェアベース)、および VLAN ID が 2 の VNIC が自動的に作成されます。

.sp
.in +2
.nf
example# \fBzonecfg -z excl\fR
excl: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:excl> \fBcreate -b\fR
zonecfg:excl> \fBset zonepath=/export/zones/excl\fR
zonecfg:excl> \fBadd anet\fR
zonecfg:excl:anet> \fBset linkname=mynic0\fR
zonecfg:excl:anet> \fBset lower-link=mylink0\fR
zonecfg:excl:anet> \fBset mac-address=8:0:20:fe:4e:b8\fR
zonecfg:excl:anet> \fBset maxbw=100M\fR
zonecfg:excl:anet> \fBset priority=high\fR
zonecfg:excl:anet> \fBset vlan-id=2\fR
zonecfg:excl:anet> \fBset rxrings=hw\fR
zonecfg:excl:anet> \fBset txrings=sw\fR
zonecfg:excl:anet> \fBend\fR
zonecfg:excl> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 15 \fR読み取り専用ゾーンを作成する
.sp
.LP
次の例では、ルートファイルシステムがゾーンによる変更から保護される新しいゾーンを作成します。\fB/var\fR 内のファイルは、\fBfixed-configuration\fR プロファイルが適用されるため、書き込み可能です。

.sp
.in +2
.nf
example# \fBzonecfg -z rozone\fR
rozone: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:rozone> \fBcreate\fR
zonecfg:rozone> \fBset brand=solaris\fR
zonecfg:rozone> \fBset zonepath=/export/zones/rozone\fR
zonecfg:rozone> \fBset autoboot=true\fR
zonecfg:rozone> \fBset file-mac-profile=fixed-configuration\fR
zonecfg:rozone> \fBset ip-type=exclusive\fR
zonecfg:rozone> \fBadd net\fR
zonecfg:rozone:net> \fBset physical=vnic0\fR
zonecfg:rozone:net> \fBend\fR
zonecfg:rozone> exit
.fi
.in -2
.sp

.LP
\fB例 16 \fRIB パーティションを使用して排他的 IP ゾーンを作成する
.sp
.LP
次の例では、デフォルトプロパティーを持つゾーンを作成します。ゾーンは、ゾーンのブート時に IPoIB データリンクを自動的に作成し、ゾーンの停止時にデータリンクを削除します。

.sp
.in +2
.nf
example# \fBzonecfg -z excl\fR
excl: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:excl> \fBcreate\fR
zonecfg:excl> \fBset zonepath=/export/zones/excl\fR
zonecfg:excl> \fBset ip-type=exclusive\fR
zonecfg:excl> \fBadd anet\fR
zonecfg:excl> \fBset linkname=part0\fR
zonecfg:excl> \fBset lower-link=net4\fR
zonecfg:excl> \fBset pkey=ffff\fR
zonecfg:excl:anet> \fBend\fR
zonecfg:excl> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 17 \fR専用のストレージリソースおよび \fBzpool\fR にインストールされるゾーンを作成する
.sp
.LP
次の例では、ゾーンのインストール全体を含む 1 つのストレージリソースで構成される \fBzpool\fR リソースを使用して新しいゾーンを作成します。\fBzpool\fR が自動的に作成されるか、ゾーンのインストール時に作成済みの \fBzpool\fR がインポートされます。名前は \fBzoss_rpool\fR になります。

.sp
.in +2
.nf
example# \fBzonecfg -z zoss\fR
zoss: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:zoss> \fBcreate\fR
zonecfg:zoss> \fBset zonepath=/zoss\fR
zonecfg:zoss> \fBadd rootzpool\fR
zonecfg:zoss:rootzpool> \fBadd storage iscsi://127.0.0.1/luname.naa.6001\e
44f03d70c80000004ea57da10001\fR
zonecfg:zoss:rootzpool> \fBend\fR
zonecfg:zoss> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 18 \fR委任された \fBzpool\fR リソースを使用してゾーンを作成する
.sp
.LP
次の例では、2 つのストレージリソースで構成されるゾーンに委任された \fBzpool\fR リソースを使用して新しいゾーンを作成します。\fBzpool\fR が自動的に作成されるか、ゾーンのインストール時に作成済みの \fBzpool\fR がインポートされます。名前は \fBzoss_mypool\fR になります。 

.sp
.in +2
.nf
example# \fBzonecfg -z zoss\fR
zoss: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:zoss> \fBcreate\fR
zonecfg:zoss> \fBset zonepath=/zoss\fR
zonecfg:zoss> \fBadd zpool\fR
zonecfg:zoss:zpool> \fBset name=mypool\fR
zonecfg:zoss:zpool> \fBadd storage dev:/dev/dsk/c0t1d0\fR
zonecfg:zoss:zpool> \fBadd storage dev:/dev/dsk/c1t1d0\fR
zonecfg:zoss:zpool> \fBend\fR
zonecfg:zoss> \fBexit\fR
.fi
.in -2
.sp

.LP
\fB例 19 \fRnpiv リソースを使用してゾーンを作成する
.sp
.LP
次の例では、ゾーンに委任される 2 つの npiv リソースを使用して新しいゾーンを作成します。2 つの npiv ポートが、ゾーンのインストール時に自動的に作成されます。

.sp
.in +2
.nf
example# \fBzonecfg -z vzone\fR
vzone: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:vzone> create
zonecfg:vzone> add npiv
zonecfg:vzone:npiv> set virtual-port-wwn=2100000000000001
zonecfg:vzone:npiv> set over-hba=c9
zonecfg:vzone:npiv> end
zonecfg:vzone> add npiv
zonecfg:vzone:npiv> end
zonecfg:vzone> exit
.fi
.in -2
.sp

.LP
\fB例 20 \fR実行中のゾーンのライブ構成を検査する
.sp
.LP
次の例では、実行中のゾーンのライブ構成を検査します。

.sp
.in +2
.nf
example# \fBzonecfg -z myzone -r\fR
zonecfg:myzone> info
.fi
.in -2
.sp

.LP
\fB例 21 \fRゾーンをリブートせずに新しい \fBanet\fR を実行中のゾーンに一時的に追加する
.sp
.LP
次の例では、ゾーンをリブートせずに新しい \fBanet\fR を実行中のゾーンに一時的に追加します。

.sp
.in +2
.nf
example# \fBzonecfg -z myzone -r\fR
zonecfg:myzone> add anet
zonecfg:myzone> set linkname=anet1
zonecfg:myzone> set lower-link=net1
zonecfg:myzone> end
zonecfg:myzone> commit
.fi
.in -2
.sp

.LP
\fB例 22 \fR統合アーカイブからのゾーン構成の作成
.sp
.LP
次の例では、\fB/export/archvies\fR に格納された統合アーカイブから新しいゾーン構成を作成します。アーカイブには、ゾーンパス \fB/zones/web\fR で \fBweb\fR というゾーンが 1 つだけ含まれます。info サブコマンドからわかるように、ゾーンパスは、上記の「統合アーカイブからの構成」セクションで説明したとおりに調整されています。

.sp
.in +2
.nf
example# \fBzonecfg -z ex17\fR
ex17: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:ex17> create -a /export/archives/web.uar
zonecfg:ex17> info zonepath
zonepath: /zones/web
zonecfg:ex17> set zonepath=/zones/ex17
zonecfg:ex17> exit
.fi
.in -2
.sp

.sp
.LP
同様に、これは非対話型モードで行うこともできます。

.sp
.in +2
.nf
example# \fBzonecfg -z ex17 "create -a /export/archives/web.uar; set zonepath=/zones/web"\fR
.fi
.in -2
.sp

.LP
\fB例 23 \fRセキュアな Web サーバー上の統合アーカイブからのゾーン構成の作成
.sp
.LP
この例では、セキュアな Web サーバー上のアーカイブからゾーンを構成する非対話型コマンドを示します。\fB-z\fR オプションは、特定のアーカイブされたゾーンを構成ソースとして使用することを指定するために使用します。証明書、CA 証明書、および鍵が最初にこのマシンに転送されています。

.sp
.in +2
.nf
example# \fBzonecfg -z ex19 create \\fR
    -a https://install.example.com/archives/combo.uar \
    -z database \
    -x cert=/root/install.pem \
    -x cacert=/root/example.com.pem \
    -x key=/root/sslkey.pem \; \
    set zonepath=/zones/ex19
.fi
.in -2
.sp

.LP
\fB例 24 \fR大域ゾーンの \fBp2v\fR のゾーン構成の作成
.sp
.LP
この例では、アーカイブされた大域ゾーンをソースとして使用した統合アーカイブからのゾーン構成の作成を示します。アーカイブ内に見つかったゾーン構成は、\fBzonep2vchk\fR(1M) によって生成されており、そのために推奨される追加のカスタマイズについての注意事項が含まれることがあります。

.sp
.in +2
.nf
example# \fBzonecfg -z ex20\fR
ex20: No such zone configured
Use 'create' to begin configuring a new zone
set zonepath=/zones/ex20
zonecfg:ex20> create -a /export/p2v.uar -z global
zonecfg:ex20> info attr
attr:
                name: zonep2vchk-info
                type: string
                value: "p2v of host m4k"
attr:
                name: zonep2vchk-net-blue0
                type: string
                value: "original system had NIC blue0 with MAC
                       address 0:8:20:9e:eb:8c and IP address
                       10.147.23.12: consider anet
                       (linkname=blue0
                       mac-address=0:8:20:9e:eb:8c
                       allowed-address=10.147.23.12)"
attr:
                name: zonep2vchk-num-cpus
                type: string
                value: "original system had 4 CPUs: consider
                       capped-cpu (ncpus=4.0) or dedicated-cpu
                       (ncpus=4)"
attr:
                name: zonep2vchk-physmem
                type: string
                value: "original system had 32 GB: consider
                       capped-memory (physical=32G)"
attr:
                name: zonep2vchk-swap
                type: string
                value: "original system had 48 GB: consider
                       capped-memory (swap=48G)"
zonecfg:ex20> select anet linkname=blue0
zonecfg:ex20:anet> set allowed-address=10.147.23.12
zonecfg:ex20:anet> set configure-allowed-address=true
zonecfg:ex20:anet> end
zonecfg:ex20> add capped-memory
zonecfg:ex20:capped-memory> set swap=48G
zonecfg:ex20:capped-memory> end
zonecfg:ex20> exit
.fi
.in -2
.sp

.LP
\fB例 25 \fRエラスティック仮想スイッチに接続する \fBanet\fR リソースを持つゾーンの作成。
.sp
.LP
次の例では、テナント \fItenantA\fR の EVS \fIevsa\fR および VPort \fIvport0\fR に接続する VNIC anet リソースを持つゾーンを作成します。

.sp
.in +2
.nf
example# \fBzonecfg -z evszone\fR
evszone: No such zone configured
Use 'create' to begin configuring a new zone
zonecfg:evszone> \fBcreate\fR
zonecfg:evszone> \fBset zonepath=/export/zones/evszone\fR
zonecfg:evszone> \fBset tenant=tenantA\fR
zonecfg:evszone> \fBadd anet\fR
zonecfg:evszone:net> \fBset evs=EVSA\fR
zonecfg:evszone:net> \fBset vport=vport0\fR
zonecfg:rozone:net> \fBend\fR
zonecfg:rozone> \fBexit\fR
example# \fBzoneadm -z evszone install\fR
example# \fBzoneadm -z evszone boot\fR
example# \fBdladm show-vnic -c\fR

LINK           TENANT   EVS   VPORT   OVER  MACADDRESS        VIDS
evszone/net0   tenantA  EVSA  vport0  net2  2:8:20:1a:c1:e4   0
.fi
.in -2
.sp

.sp
.LP
ゾーンがブートすると、evszone/net0 VNIC anet は、vport EVSA/vport0 の MAC アドレス、IP アドレス、および SLA プロパティーを持ちます。

.LP
\fB例 26 \fRベリファイドブート設定を変更する
.sp
.in +2
.nf
# \fBzonecfg -z vbzone1\fR 
zonecfg:vbzone1> add verified-boot 
zonecfg:vbzone1:verified-boot> set policy=enforce 
zonecfg:vbzone1:verified-boot> add cert file:///etc/certs/INTERNALSE 
zonecfg:vbzone1:verified-boot> add cert 
http://keyserv.hang10software.com/keydist/hang10se.pem 
zonecfg:vbzone1:verified-boot> end 
.fi
.in -2
.sp

.LP
\fB例 27 \fRゾーン移行のためにゾーン構成を別のシステムにコピーする
.sp
.LP
1 つの大域ゾーンから別の大域ゾーンにゾーンを移行する場合、最初にゾーン構成を移行する必要があります。\fBexport\fR サブコマンドにより、すべてのゾーン構成がエクスポートされ、新しい大域ゾーンで正しく保持され、\fBzonecfg\fR \fB-f\fR オプションを指定して使用できるようになります。この例に示すような手順を使用しない場合、カーネルゾーンが一時停止ファイルにアクセスしたり、新しい大域ゾーンに正しく接続したりすることができません。

.sp
.in +2
.nf
global1# \fBzonecfg -z ex22 export -f /net/scratch/export/ex22.cfg\fR
global2# \fBzonecfg -z ex22 -f /net/scratch/export/ex22.cfg\fR
.fi
.in -2
.sp

.LP
\fB例 28 \fRカーネルゾーンの anet iov プロパティーを使用する
.sp
.LP
この例では、\fBkz1\fR は 1 つの anet を含むカーネルゾーンです。

.sp
.in +2
.nf
\fB# zonecfg -z kz1\fR
\fBzonecfg:kz1> select anet id=0\fR
\fBzonecfg:kz1:anet> set iov=auto\fR
\fBzonecfg:kz1:anet> end\fR
\fBzonecfg:kz1>exit\fR
.fi
.in -2
.sp

.sp
.LP
lower-link が auto でない場合、ユーザーは、カーネルゾーンをブートする前に lower-link の iov がオンであることを確認する必要があります。lower-link が auto である場合、ユーザーは、iov がオンであるリンクが大域ゾーンに少なくとも 1 つ存在することを確認する必要があります。

.sp
.LP
iov がオンでない場合は、次を実行してオンにできます。

.sp
.in +2
.nf
\fB# dladm set-linkprop -p iov=on net1\fR
.fi
.in -2
.sp

.sp
.LP
VF が使用可能な場合は、カーネルゾーンをブートしたあとに、VF がカーネルゾーン内の物理 NIC デバイスとして表示されます。

.sp
.in +2
.nf
\fBkz1# dladm show-phys\fR
.fi
.in -2
.sp

.sp
.in +2
.nf
LINK      MEDIA        STATE      SPEED    DUPLEX    DEVICE
net0      Ethernet     up         10000    full      ixgbevf0
.fi
.in -2
.sp

.LP
\fB例 29 \fRカーネルゾーン内のデバイスプロパティーに NFS SURI を使用する
.sp
.in +2
.nf
# \fBzonecfg -z kz1\fR 
zonecfg:kz1> add device 
zonecfg:kz1> set 
storage=nfs://user1:staff@testsys1/export/test/kz1_dev1 
zonecfg:kz1> end 
zonecfg:kz1>exit 
.fi
.in -2
.sp

.SH 終了ステータス
.sp
.LP
次の終了ステータスが返されます。
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.sp .6
.RS 4n
正常終了。 
.RE

.sp
.ne 2
.mk
.na
\fB\fB1\fR\fR
.ad
.sp .6
.RS 4n
エラーが発生した。
.RE

.sp
.ne 2
.mk
.na
\fB\fB2\fR\fR
.ad
.sp .6
.RS 4n
無効な使用法。
.RE

.SH 属性
.sp
.LP
属性についての詳細は、マニュアルページの \fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件system/zones
_
インタフェースの安定性流動的
.TE

.SH 関連項目
.sp
.LP
\fBppriv\fR(1)、\fBprctl\fR(1)、\fBlgrpinfo\fR(1)、\fBzlogin\fR(1)、\fBarchiveadm\fR(1M)、\fBdladm\fR(1M)、\fBformat\fR(1M)、\fBipadm\fR(1M)、\fBkstat\fR(1M)、\fBmount\fR(1M)、\fBpooladm\fR(1M)、\fBpoolcfg\fR(1M)、\fBpoold\fR(1M)、\fBpsrinfo\fR(1M)、\fBrcapd\fR(1M)、\fBrctladm\fR(1M)、\fBroute\fR(1M)、\fBsuriadm\fR(1M)、\fBsvcadm\fR(1M)、\fBzfs\fR(1M)、\fBzoneadm\fR(1M)、\fBzonep2vchk\fR(1M)、\fBzpool\fR(1M)、\fBpriv_str_to_set\fR(3C)、\fBkstat\fR(3KSTAT)、\fBuser_attr\fR(4)、\fBvfstab\fR(4)、\fBattributes\fR(5)、\fBbrands\fR(5)、\fBfnmatch\fR(5)、\fBmwac\fR(5)、\fBprivileges\fR(5)、\fBrbac\fR(5)、\fBresource-controls \fR(5)、\fBsolaris-kz\fR(5)、\fBsuri\fR(5)、\fBtpd\fR(5)、\fBzones\fR(5)、\fBdev\fR(7FS)、\fBhsfs\fR(7FS)、\fBzfs\fR(7FS)、\fBuscsi\fR(7I)、\fBevsadm\fR(1M)
.sp
.LP
\fI『Resource Management and Oracle Solaris Zones Developer\&'s Guide』\fR
.SH 注意事項
.sp
.LP
\fBzonecfg\fR で使用するすべての文字データは、US-ASCII エンコーディングにする必要があります。
.sp
.LP
一般に、すべてのデバイスに対してゾーン内で安全に使用できるどうかの監査が行われるわけではないため、ゾーンにデバイスを追加すると、そのゾーンがシステムのセキュリティーおよび安定性に悪影響を与えることがあります。
.sp
.LP
\fBsd\fR または \fBssd\fR ターゲットドライバを使用するストレージデバイス (\fBprtconf -D /dev/dsk/c2t40d3\fR などを使用すると検査できます) は、ゾーンに安全に委任できます。このため、ゾーン管理者は、このようなデバイスに対してラベル付けやパーティション分割を実行できます。
.sp
.LP
\fBformat\fR(1M) によってディスクのラベル付けを行えるようにするためには、ディスク/LUN 全体をゾーンに委任して、\fBallow-partition\fR プロパティーを設定するようにしてください。例: 
.sp
.in +2
.nf
zonecfg:myzone> \fBadd device\fR
zonecfg:myzone> \fBset match=/dev/*dsk/c2t40d3*\fR
zonecfg:myzone> \fBset allow-partition=true\fR
zonecfg:myzone> \fBend\fR
.fi
.in -2
.sp

.sp
.LP
推奨はされませんが、ディスクの単一スライス (\fBmatch=/dev/dsk/c2t40d3s0\fR など) のみを委任することもできます。これを安全に行うためには、\fBallow-partition\fR プロパティーを true に設定せず、スライスまたはパーティションによってディスクラベルのディスクヘッダーがオーバーラップしないようにする必要があります (ディスクラベルはパーティションまたはディスクの最初の 2 ブロックまたは最後の 2 ブロック内にあります)。
.sp
.LP
ストレージデバイスへの raw アクセスを有効にするには、\fBallow-raw-io\fR プロパティーを \fBtrue\fR に設定します。ゾーンプロセスで raw SCSI コマンド (\fBuscsi\fR(7I) を参照) を実行できるようになるため、これは安全ではありません。
.sp
.LP
ゾーンの内側では、使用中デバイスのチェックが機能しません。それが依存している \fB/devices/\fR ツリーが存在しないからです。今後のプロジェクトでは、この制限が解消される可能性があります。
.sp
.LP
「\fBadd fs\fR」リソースによって指定された \fBlofs\fR ファイルシステムのマウントポイントは、ゾーンによってマウントされたファイルシステム内に指定できません。特に、そのようなマウントポイントは \fB/var\fR および \fB/export\fR 内に指定できません。
